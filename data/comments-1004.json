[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/491070501",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1004#issuecomment-491070501",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1004",
        "id": 491070501,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTA3MDUwMQ==",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-09T21:20:05Z",
        "updated_at": "2019-05-09T21:20:05Z",
        "author_association": "MEMBER",
        "body": "1. At API level, it doesn't have the 'batch' concept.  You may combine multiple tensors into one single tensor.  Tensor is a n-dim array, you may use the first dimension as batch size. Again, at API level, onnxruntime doesn't understand what is batch and which dimension is 'batch'. It should be defined in the model.\r\n\r\n2. Working on that.\r\n\r\n3. Yes.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/491070501/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/491200773",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1004#issuecomment-491200773",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1004",
        "id": 491200773,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTIwMDc3Mw==",
        "user": {
            "login": "xgirones",
            "id": 30896820,
            "node_id": "MDQ6VXNlcjMwODk2ODIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30896820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xgirones",
            "html_url": "https://github.com/xgirones",
            "followers_url": "https://api.github.com/users/xgirones/followers",
            "following_url": "https://api.github.com/users/xgirones/following{/other_user}",
            "gists_url": "https://api.github.com/users/xgirones/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xgirones/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xgirones/subscriptions",
            "organizations_url": "https://api.github.com/users/xgirones/orgs",
            "repos_url": "https://api.github.com/users/xgirones/repos",
            "events_url": "https://api.github.com/users/xgirones/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xgirones/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-10T08:12:09Z",
        "updated_at": "2019-05-10T08:12:09Z",
        "author_association": "NONE",
        "body": "Thanks for your answer. \r\n\r\nI have models trained with CNTK 2.7 and I am using CNTK for inference too. I am familiar with the CNTK API, which has functionality to create batches of inputs and I find it very convenient. The CNTK model (converted to ONNX) I would like to fed batched inputs is:\r\n \r\n![ocr_basic_model_3rps_cntk27_eval_2017](https://user-images.githubusercontent.com/30896820/57511114-c0050d80-7308-11e9-800f-b77e50fb9f6f.png)\r\n\r\nI have tried to follow your advice and use the first dimension of the input as the batch size. However, when I attempt to run the model with a tensor with shape\r\n\r\n           [#batch_elements] x 3 x 24 x 16\r\n\r\nI get the error\r\n\r\n> 2019-05-10 09:02:01.9356049 [E:onnxruntime:, sequential_executor.cc:125 onnxruntime::SequentialExecutor::Execute] Non-zero status code returned while running Node: Times605 Status Message: Not satsified: K_ == right_shape[right_num_dims - 2]\r\n> \r\n> matmul_helper.h:38 onnxruntime::MatMulComputeHelper::ComputeMatMul dimension mis\r\n> match\r\n\r\nHow should I arrange the input tensor to avoid this error?\r\n\r\nThanks!\r\n\r\n \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/491200773/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/491365951",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1004#issuecomment-491365951",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1004",
        "id": 491365951,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTM2NTk1MQ==",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-10T17:21:59Z",
        "updated_at": "2019-05-10T17:21:59Z",
        "author_association": "MEMBER",
        "body": "@KeDengMS Any idea? Looks like the CNTK exporter doesn't support batch very well.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/491365951/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/491388465",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1004#issuecomment-491388465",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1004",
        "id": 491388465,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTM4ODQ2NQ==",
        "user": {
            "login": "ke1337",
            "id": 22626095,
            "node_id": "MDQ6VXNlcjIyNjI2MDk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/22626095?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ke1337",
            "html_url": "https://github.com/ke1337",
            "followers_url": "https://api.github.com/users/ke1337/followers",
            "following_url": "https://api.github.com/users/ke1337/following{/other_user}",
            "gists_url": "https://api.github.com/users/ke1337/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ke1337/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ke1337/subscriptions",
            "organizations_url": "https://api.github.com/users/ke1337/orgs",
            "repos_url": "https://api.github.com/users/ke1337/repos",
            "events_url": "https://api.github.com/users/ke1337/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ke1337/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-10T18:31:26Z",
        "updated_at": "2019-05-13T20:58:03Z",
        "author_association": "CONTRIBUTOR",
        "body": "@liqunfu and @BowenBao for awareness of CNTK issues.\r\n\r\nThis is known issue. To support batch, the exported model needs to be modified to have batch axis > 1. Here's an script I used for generate Scan test from CNTK and add batch axis to it. You may modified it to suite your needs:\r\n\r\n```\r\nimport cntk as C\r\nimport numpy as np\r\nimport onnx\r\nimport os\r\nfrom onnx import numpy_helper\r\n\r\nmodel_file = 'model.onnx'\r\ndata_dir = 'test_data_set_0'\r\n\r\ndef SaveTensorProto(file_path, variable, data, name):\r\n    # ONNX input shape always has sequence axis as the first dimension, if sequence axis exists\r\n    if len(variable.dynamic_axes) == 2:\r\n        data = data.transpose((1,0,)+tuple(range(2,len(data.shape))))\r\n    tp = numpy_helper.from_array(data, name if name else variable.uid)\r\n    onnx.save_tensor(tp, file_path)\r\n\r\ndef SaveData(test_data_dir, prefix, variables, data_list, name_replacements=None):\r\n    if isinstance(data_list, np.ndarray):\r\n        data_list = [data_list]\r\n    for (i, d), v in zip(enumerate(data_list), variables):\r\n        SaveTensorProto(os.path.join(test_data_dir, '{0}_{1}.pb'.format(prefix, i)), v, d, name_replacements[v.uid] if name_replacements else None)\r\n\r\ndef Save(dir, func, feed, outputs):\r\n    if not os.path.exists(dir):\r\n        os.makedirs(dir)\r\n    onnx_file = os.path.join(dir,model_file)\r\n    func.save(onnx_file, C.ModelFormat.ONNX)\r\n\r\n    # onnx model may have different name for RNN initial states as inputs\r\n    cntk_to_actual_names = {}\r\n    model = onnx.load(onnx_file)\r\n    for actual_input in model.graph.input:\r\n        actual_input_name = actual_input.name\r\n        for cntk_input in func.arguments:\r\n            cntk_name = cntk_input.uid\r\n            if actual_input_name.startswith(cntk_name):\r\n                cntk_to_actual_names[cntk_name] = actual_input_name\r\n\r\n    if type(feed) is not dict:\r\n       feed = {func.arguments[0]:feed}\r\n\r\n    if type(outputs) is not dict:\r\n       outputs = {func.outputs[0]:outputs}\r\n\r\n    test_data_dir = os.path.join(dir, data_dir)\r\n    if not os.path.exists(test_data_dir):\r\n        os.makedirs(test_data_dir)\r\n\r\n    SaveData(test_data_dir, 'input', func.arguments, [feed[var] for var in func.arguments], cntk_to_actual_names)\r\n    SaveData(test_data_dir, 'output', func.outputs, [outputs[var] for var in func.outputs])\r\n\r\ndef LSTM(cell_dim, use_scan=True):\r\n    # we now create an LSTM_cell function and call it with the input and placeholders\r\n    LSTM_cell = C.layers.LSTM(cell_dim)\r\n\r\n    @C.Function\r\n    def func(dh, dc, input):\r\n        LSTM_func = LSTM_cell(dh, dc, input)\r\n        if use_scan:\r\n            LSTM_func_root = C.as_composite(LSTM_func.outputs[0].owner.block_root)\r\n            args = LSTM_func_root.arguments\r\n            LSTM_func = LSTM_func_root.clone(C.CloneMethod.share, {args[0]:input, args[1]:dh, args[2]:dc})\r\n        return LSTM_func\r\n\r\n    return func\r\n\r\ndef GenScan():\r\n    np.random.seed(0)\r\n    feature = C.sequence.input_variable((3,), np.float32)\r\n    model = C.layers.For(range(4), lambda : C.layers.Recurrence(LSTM(2, use_scan=True)))(feature)\r\n\r\n    data_feature = np.random.rand(2,5,3).astype(np.float32)\r\n    data_output = np.asarray(model.eval(data_feature))\r\n\r\n    Save('test_Scan', model, data_feature, data_output)\r\n    \r\n    # Currently CNTK only outputs batch == 1, do some editing\r\n    in_mp = onnx.read('test_Scan/model.onnx')\r\n    out_mp = onnx.ModelProto()\r\n    out_mp.CopyFrom(in_mp)\r\n    out_mp.graph.ClearField('initializer')\r\n\r\n    # change LSTM init_c/h into inputs to support truncated sequence\r\n    # as batch dimension is unknown on those data when building model\r\n    # note here we assume init_c/h starts from 0\r\n    # if not the case, user need to manually broadcast it for feed\r\n    num_inputs = 1\r\n    for i in in_mp.graph.initializer:\r\n        if i.name.startswith(\"Constant\"):\r\n            shape = i.dims\r\n            shape[0] = 2\r\n            aa = np.zeros(shape, dtype=np.float32)\r\n            tp = numpy_helper.from_array(aa, i.name)\r\n            with open('test_Scan/test_data_set_0/input_' + str(num_inputs) + '.pb', 'wb') as ff:\r\n                ff.write(tp.SerializeToString())\r\n            num_inputs = num_inputs + 1\r\n        else:\r\n            out_mp.graph.initializer.add().CopyFrom(i)\r\n\r\n    for vi in list(out_mp.graph.input) + list(out_mp.graph.output) + list(out_mp.graph.value_info):\r\n        dim = vi.type.tensor_type.shape.dim\r\n        dim[len(dim) - 2].dim_param = 'batch'\r\n        \r\n    for n in out_mp.graph.node:\r\n        if n.op_type == 'Scan':\r\n            body = [attr for attr in n.attribute if attr.name == 'body'][0]\r\n            for vi in list(body.g.input) + list(body.g.output) + list(body.g.value_info):\r\n                dim = vi.type.tensor_type.shape.dim\r\n                dim[0].dim_param = 'batch'\r\n\r\n    onnx.save(out_mp, 'test_Scan/model.onnx')\r\n\r\nif __name__=='__main__':\r\n    GenScan()\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/491388465/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/491499667",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1004#issuecomment-491499667",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1004",
        "id": 491499667,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTQ5OTY2Nw==",
        "user": {
            "login": "xgirones",
            "id": 30896820,
            "node_id": "MDQ6VXNlcjMwODk2ODIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30896820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xgirones",
            "html_url": "https://github.com/xgirones",
            "followers_url": "https://api.github.com/users/xgirones/followers",
            "following_url": "https://api.github.com/users/xgirones/following{/other_user}",
            "gists_url": "https://api.github.com/users/xgirones/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xgirones/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xgirones/subscriptions",
            "organizations_url": "https://api.github.com/users/xgirones/orgs",
            "repos_url": "https://api.github.com/users/xgirones/repos",
            "events_url": "https://api.github.com/users/xgirones/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xgirones/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-11T10:34:07Z",
        "updated_at": "2019-05-11T10:39:24Z",
        "author_association": "NONE",
        "body": "Thanks for your response. When I tried\r\n\r\n`in_mp = onnx.read(pathMyEvalModeONNX, 'rb')`\r\n\r\nI got the error\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-24-2d8db548dda2> in <module>\r\n----> 1 in_mp = onnx.read(pathMyEvalModeONNX, 'rb')\r\n\r\nAttributeError: module 'onnx' has no attribute 'read'\r\n```\r\n\r\nOn the other hand, I was able to load the model using\r\n\r\n`in_mp = onnx.load(pathMyEvalModeONNX)`\r\n\r\nThen, I was able to run this part of your code\r\n\r\n```\r\n    out_mp = onnx.ModelProto()\r\n    out_mp.CopyFrom(in_mp)\r\n    out_mp.graph.ClearField('initializer')\r\n\r\n    # change LSTM init_c/h into inputs to support truncated sequence\r\n    # as batch dimension is unknown on those data when building model\r\n    # note here we assume init_c/h starts from 0\r\n    # if not the case, user need to manually broadcast it for feed\r\n    num_inputs = 1\r\n    for i in in_mp.graph.initializer:\r\n        if i.name.startswith(\"Constant\"):\r\n            shape = i.dims\r\n            shape[0] = 2\r\n            aa = np.zeros(shape, dtype=np.float32)\r\n            tp = numpy_helper.from_array(aa, i.name)\r\n            with open('test_Scan/test_data_set_0/input_' + str(num_inputs) + '.pb', 'wb') as ff:\r\n                ff.write(tp.SerializeToString())\r\n            num_inputs = num_inputs + 1\r\n        else:\r\n            out_mp.graph.initializer.add().CopyFrom(i)\r\n\r\n    for vi in list(out_mp.graph.input) + list(out_mp.graph.output) + list(out_mp.graph.value_info):\r\n        dim = vi.type.tensor_type.shape.dim\r\n        dim[len(dim) - 2].dim_param = 'batch'\r\n        \r\n    for n in out_mp.graph.node:\r\n        if n.op_type == 'Scan':\r\n            body = [attr for attr in n.attribute if attr.name == 'body'][0]\r\n            for vi in list(body.g.input) + list(body.g.output) + list(body.g.value_info):\r\n                dim = vi.type.tensor_type.shape.dim\r\n                dim[0].dim_param = 'batch'\r\n```\r\n\r\nHowever, when I tried to save the model with\r\n\r\n`onnx.save(out_mp, pathMyEvalModeONNX_fixed, 'wb')`\r\n\r\nI got the error\r\n```\r\n\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-25-a59b10f11a54> in <module>\r\n----> 1 onnx.save(out_mp,pathMyEvalModeONNX_fixed,'wb')\r\n\r\nAttributeError: module 'onnx' has no attribute 'save'\r\n```\r\n\r\nI have a Conda environment with CNTK 2.7 and the ONNX Runtime. I installed the ONNX Runtime using\r\n\r\n`pip install onnxruntime `\r\n\r\nBut it seems that the 'save' function is missing in the onnx module as\r\n\r\n`dir(onnx)`\r\n\r\nreturns \r\n\r\n```\r\n['AttributeProto',\r\n 'DESCRIPTOR',\r\n 'GraphProto',\r\n 'IR_VERSION',\r\n 'IR_VERSION_2017_10_10',\r\n 'IR_VERSION_2017_10_30',\r\n 'ModelProto',\r\n 'NodeProto',\r\n 'OperatorSetIdProto',\r\n 'StringStringEntryProto',\r\n 'TensorProto',\r\n 'TensorShapeProto',\r\n 'TypeProto',\r\n 'ValueInfoProto',\r\n 'Version',\r\n '__builtins__',\r\n '__cached__',\r\n '__doc__',\r\n '__file__',\r\n '__loader__',\r\n '__name__',\r\n '__package__',\r\n '__path__',\r\n '__spec__',\r\n '__version__',\r\n 'absolute_import',\r\n 'checker',\r\n 'defs',\r\n 'descriptor_pb2',\r\n 'division',\r\n 'enum_type_wrapper',\r\n 'google',\r\n 'helper',\r\n 'load',\r\n 'load_from_string',\r\n 'mapping',\r\n 'numpy_helper',\r\n 'onnx',\r\n 'onnx_cpp2py_export',\r\n 'onnx_pb',\r\n 'onnx_pb2',\r\n 'print_function',\r\n 'sys',\r\n 'unicode_literals',\r\n 'version']\r\n```\r\n\r\nCould you please tell me what I am doing wrong? I develop mostly in C++ and my Python skills are very limited.\r\n\r\nThanks!\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/491499667/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/491619158",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1004#issuecomment-491619158",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1004",
        "id": 491619158,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTYxOTE1OA==",
        "user": {
            "login": "tmccrmck",
            "id": 9703624,
            "node_id": "MDQ6VXNlcjk3MDM2MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9703624?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tmccrmck",
            "html_url": "https://github.com/tmccrmck",
            "followers_url": "https://api.github.com/users/tmccrmck/followers",
            "following_url": "https://api.github.com/users/tmccrmck/following{/other_user}",
            "gists_url": "https://api.github.com/users/tmccrmck/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tmccrmck/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tmccrmck/subscriptions",
            "organizations_url": "https://api.github.com/users/tmccrmck/orgs",
            "repos_url": "https://api.github.com/users/tmccrmck/repos",
            "events_url": "https://api.github.com/users/tmccrmck/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tmccrmck/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-12T18:44:00Z",
        "updated_at": "2019-05-12T18:44:00Z",
        "author_association": "CONTRIBUTOR",
        "body": "Not a response to your previous question, but I think it should be mentioned that loading from an in-memory buffer just got merged with #718  ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/491619158/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/491780400",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1004#issuecomment-491780400",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1004",
        "id": 491780400,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTc4MDQwMA==",
        "user": {
            "login": "xgirones",
            "id": 30896820,
            "node_id": "MDQ6VXNlcjMwODk2ODIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30896820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xgirones",
            "html_url": "https://github.com/xgirones",
            "followers_url": "https://api.github.com/users/xgirones/followers",
            "following_url": "https://api.github.com/users/xgirones/following{/other_user}",
            "gists_url": "https://api.github.com/users/xgirones/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xgirones/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xgirones/subscriptions",
            "organizations_url": "https://api.github.com/users/xgirones/orgs",
            "repos_url": "https://api.github.com/users/xgirones/repos",
            "events_url": "https://api.github.com/users/xgirones/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xgirones/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-13T11:13:53Z",
        "updated_at": "2019-05-13T11:13:53Z",
        "author_association": "NONE",
        "body": "> Not a response to your previous question, but I think it should be mentioned that loading from an in-memory buffer just got merged with #718\r\n\r\nThis is great! Now if I manage to get the batch axis issue solved I will have everything I need to migrate to ONNX Runtime. Thanks!\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/491780400/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/491982925",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1004#issuecomment-491982925",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1004",
        "id": 491982925,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTk4MjkyNQ==",
        "user": {
            "login": "xgirones",
            "id": 30896820,
            "node_id": "MDQ6VXNlcjMwODk2ODIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30896820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xgirones",
            "html_url": "https://github.com/xgirones",
            "followers_url": "https://api.github.com/users/xgirones/followers",
            "following_url": "https://api.github.com/users/xgirones/following{/other_user}",
            "gists_url": "https://api.github.com/users/xgirones/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xgirones/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xgirones/subscriptions",
            "organizations_url": "https://api.github.com/users/xgirones/orgs",
            "repos_url": "https://api.github.com/users/xgirones/repos",
            "events_url": "https://api.github.com/users/xgirones/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xgirones/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-13T20:55:04Z",
        "updated_at": "2019-05-13T20:55:04Z",
        "author_association": "NONE",
        "body": "More problems, this time when trying to convert a very simple CNTK RNN model to ONNX:\r\n\r\n```\r\ndef BiRecurrence(fwd, bwd):\r\n    F = C.layers.Recurrence(fwd)\r\n    G = C.layers.Recurrence(bwd, go_backwards=True)\r\n    x = C.placeholder()\r\n    apply_x = C.splice(F(x), G(x))\r\n    return apply_x\r\n\r\ndef vanilla_model():\r\n    co = 24\r\n    num_classes = 39\r\n    rnn_dim = 128\r\n    dense_dim = 96\r\n    \r\n    x = C.input_variable(**C.layers.Sequence[C.layers.Tensor[co]])\r\n    y = C.sequence.input_variable( shape=num_classes , name=\"output_1\" )\r\n        \r\n    h=C.layers.SequentialConvolution(filter_shape=(3,3), num_filters=8, strides=(1,1), pad=True, activation = C.leaky_relu, reduction_rank=0)( x )\r\n    h=C.reshape(h,-1)\r\n    h = BiRecurrence(C.layers.RNNStep(rnn_dim//2, activation=C.leaky_relu),C.layers.RNNStep(rnn_dim//2,activation=C.leaky_relu))( h )\r\n    h = C.layers.Dense(dense_dim, activation = C.leaky_relu)( h )\r\n    h = C.layers.Dense(num_classes, activation = None)( h )\r\n\r\n    return h\r\n```\r\n\r\n![ocr_basic_line_model_cntk27_2017](https://user-images.githubusercontent.com/30896820/57652913-f2489080-75d0-11e9-8598-1e3117c00ab5.png)\r\n\r\nIn can be trained with CNTK and it works. However, when I try to save it as ONNX using\r\n\r\n`vanilla_model().save(pathRNNModelONNX,C.ModelFormat.ONNX)`\r\n\r\nCNTK issues an error:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-26-00943619e4be> in <module>\r\n----> 1 vanilla_model().save(pathRNNModelONNX,C.ModelFormat.ONNX)\r\n\r\nC:\\ProgramData\\Anaconda3\\envs\\cntk-2.7-gpu-py36\\lib\\site-packages\\cntk\\internal\\swig_helper.py in wrapper(*args, **kwds)\r\n     67     @wraps(f)\r\n     68     def wrapper(*args, **kwds):\r\n---> 69         result = f(*args, **kwds)\r\n     70         map_if_possible(result)\r\n     71         return result\r\n\r\nC:\\ProgramData\\Anaconda3\\envs\\cntk-2.7-gpu-py36\\lib\\site-packages\\cntk\\ops\\functions.py in save(self, filename, format, use_external_files_to_store_parameters)\r\n   1557              to external files. This is for models larger than 2GB. Defaults to False.\r\n   1558         '''\r\n-> 1559         return super(Function, self).save(filename, format.value, use_external_files_to_store_parameters)\r\n   1560 \r\n   1561     @typemap\r\n\r\nC:\\ProgramData\\Anaconda3\\envs\\cntk-2.7-gpu-py36\\lib\\site-packages\\cntk\\cntk_py.py in save(self, *args)\r\n   2080 \r\n   2081     def save(self, *args):\r\n-> 2082         return _cntk_py.Function_save(self, *args)\r\n   2083 \r\n   2084     def restore(self, filepath):\r\n\r\nRuntimeError: A RNN block does not have expected input count (5). Actual input count is 7\r\n\r\n[CALL STACK]\r\n    > std::enable_shared_from_this<Microsoft::MSR::CNTK::MatrixBase>::  weak_from_this\r\n    - CNTK::  XavierInitializer (x15)\r\n```\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/491982925/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/492005370",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1004#issuecomment-492005370",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1004",
        "id": 492005370,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjAwNTM3MA==",
        "user": {
            "login": "bencherian",
            "id": 9374201,
            "node_id": "MDQ6VXNlcjkzNzQyMDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9374201?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bencherian",
            "html_url": "https://github.com/bencherian",
            "followers_url": "https://api.github.com/users/bencherian/followers",
            "following_url": "https://api.github.com/users/bencherian/following{/other_user}",
            "gists_url": "https://api.github.com/users/bencherian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bencherian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bencherian/subscriptions",
            "organizations_url": "https://api.github.com/users/bencherian/orgs",
            "repos_url": "https://api.github.com/users/bencherian/repos",
            "events_url": "https://api.github.com/users/bencherian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bencherian/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-13T22:09:28Z",
        "updated_at": "2019-05-13T22:09:28Z",
        "author_association": "NONE",
        "body": "@snnn In your earlier reply, you say the following:\r\n\r\n> 1. At API level, it doesn't have the 'batch' concept.  You may combine multiple tensors into one single tensor.  Tensor is a n-dim array, you may use the first dimension as batch size. Again, at API level, onnxruntime doesn't understand what is batch and which dimension is 'batch'. It should be defined in the model.\r\n\r\nDoes this imply that you cannot run batched inference with varying batch sizes? (e.g., run inference with a batch of 128, and then on a batch of 140?)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/492005370/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/492441204",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1004#issuecomment-492441204",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1004",
        "id": 492441204,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjQ0MTIwNA==",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-14T22:58:06Z",
        "updated_at": "2019-05-14T22:58:06Z",
        "author_association": "MEMBER",
        "body": "No, you can",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/492441204/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/492488302",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1004#issuecomment-492488302",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1004",
        "id": 492488302,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjQ4ODMwMg==",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-15T03:20:41Z",
        "updated_at": "2019-05-15T03:20:41Z",
        "author_association": "MEMBER",
        "body": "Close this issue as the original problem is solved. \r\nI'll add a sample program for demonstrating inferencing with batching.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/492488302/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/492489130",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1004#issuecomment-492489130",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1004",
        "id": 492489130,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjQ4OTEzMA==",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-15T03:25:39Z",
        "updated_at": "2019-05-15T03:25:39Z",
        "author_association": "MEMBER",
        "body": "#853 ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/492489130/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/546113013",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1004#issuecomment-546113013",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1004",
        "id": 546113013,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjExMzAxMw==",
        "user": {
            "login": "chenglinzhang",
            "id": 10472721,
            "node_id": "MDQ6VXNlcjEwNDcyNzIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/10472721?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chenglinzhang",
            "html_url": "https://github.com/chenglinzhang",
            "followers_url": "https://api.github.com/users/chenglinzhang/followers",
            "following_url": "https://api.github.com/users/chenglinzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/chenglinzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chenglinzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chenglinzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/chenglinzhang/orgs",
            "repos_url": "https://api.github.com/users/chenglinzhang/repos",
            "events_url": "https://api.github.com/users/chenglinzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chenglinzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-24T21:34:30Z",
        "updated_at": "2019-10-24T21:34:30Z",
        "author_association": "NONE",
        "body": "> Close this issue as the original problem is solved.\r\n> I'll add a sample program for demonstrating inferencing with batching.\r\n\r\nHi @snnn , I am also looking for a batch inference C/C++ example. Can you provide an URL to your solution? Thanks.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/546113013/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/546118973",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1004#issuecomment-546118973",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1004",
        "id": 546118973,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjExODk3Mw==",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-24T21:54:45Z",
        "updated_at": "2019-10-24T21:54:45Z",
        "author_association": "MEMBER",
        "body": "https://github.com/microsoft/onnxruntime/tree/master/samples/c_cxx/imagenet",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/546118973/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/546523637",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1004#issuecomment-546523637",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1004",
        "id": 546523637,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjUyMzYzNw==",
        "user": {
            "login": "chenglinzhang",
            "id": 10472721,
            "node_id": "MDQ6VXNlcjEwNDcyNzIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/10472721?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chenglinzhang",
            "html_url": "https://github.com/chenglinzhang",
            "followers_url": "https://api.github.com/users/chenglinzhang/followers",
            "following_url": "https://api.github.com/users/chenglinzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/chenglinzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chenglinzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chenglinzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/chenglinzhang/orgs",
            "repos_url": "https://api.github.com/users/chenglinzhang/repos",
            "events_url": "https://api.github.com/users/chenglinzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chenglinzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-25T21:44:17Z",
        "updated_at": "2019-10-25T21:44:17Z",
        "author_association": "NONE",
        "body": "Thanks @snnn for the quick response. I am looking for multiple inputs in ONE run. The ```session_.Run``` in the example imagenet ```main.cc``` takes 1 input? \r\n```\r\nmain.cc:      session_.Run(Ort::RunOptions{nullptr}, &input_name_, &input_tensor, 1, &output_name_, &output_tensor, 1);\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/546523637/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/546537112",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1004#issuecomment-546537112",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1004",
        "id": 546537112,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjUzNzExMg==",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-25T22:48:44Z",
        "updated_at": "2019-10-25T22:48:44Z",
        "author_association": "MEMBER",
        "body": "```\r\n&input_tensor, 1,\r\n```\r\nPlease create a C array of tensors, replace the above things as array name and array length.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/546537112/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/546544279",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1004#issuecomment-546544279",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1004",
        "id": 546544279,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjU0NDI3OQ==",
        "user": {
            "login": "chenglinzhang",
            "id": 10472721,
            "node_id": "MDQ6VXNlcjEwNDcyNzIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/10472721?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chenglinzhang",
            "html_url": "https://github.com/chenglinzhang",
            "followers_url": "https://api.github.com/users/chenglinzhang/followers",
            "following_url": "https://api.github.com/users/chenglinzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/chenglinzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chenglinzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chenglinzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/chenglinzhang/orgs",
            "repos_url": "https://api.github.com/users/chenglinzhang/repos",
            "events_url": "https://api.github.com/users/chenglinzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chenglinzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-25T23:33:52Z",
        "updated_at": "2019-10-25T23:35:09Z",
        "author_association": "NONE",
        "body": "Thanks @snnn  I have ```input_tensors``` of size 2 populated with two sets of OrtValues, and ```output_tensors``` of size 2 initialized with nullptr. Executing ```session_.Run(...,2,...,2,...)``` does fill the results to ```output_tensors```. ```output_tensors[0]``` is correct. However, ```output_tensor[1]``` ALWAYS gives the same results as ```output_tensor[0]```, though their corresponding OrtValues in the ```input_tensors``` are different. I am using onnxruntime 0.5.0. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/546544279/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/546545221",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1004#issuecomment-546545221",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1004",
        "id": 546545221,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjU0NTIyMQ==",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-25T23:40:13Z",
        "updated_at": "2019-10-25T23:40:13Z",
        "author_association": "MEMBER",
        "body": "Sounds like a bug?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/546545221/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/546632204",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1004#issuecomment-546632204",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1004",
        "id": 546632204,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjYzMjIwNA==",
        "user": {
            "login": "chenglinzhang",
            "id": 10472721,
            "node_id": "MDQ6VXNlcjEwNDcyNzIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/10472721?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chenglinzhang",
            "html_url": "https://github.com/chenglinzhang",
            "followers_url": "https://api.github.com/users/chenglinzhang/followers",
            "following_url": "https://api.github.com/users/chenglinzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/chenglinzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chenglinzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chenglinzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/chenglinzhang/orgs",
            "repos_url": "https://api.github.com/users/chenglinzhang/repos",
            "events_url": "https://api.github.com/users/chenglinzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chenglinzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-26T19:24:26Z",
        "updated_at": "2019-10-26T19:24:26Z",
        "author_association": "NONE",
        "body": "Thanks @snnn. To illustrate the problem, I modified the C API sample at\r\nhttps://github.com/microsoft/onnxruntime/blob/master/csharp/test/Microsoft.ML.OnnxRuntime.EndToEndTests.Capi/C_Api_Sample.cpp\r\n\r\nThe modified file is at \r\nhttps://github.com/chenglinzhang/c_onnxruntime/blob/master/C_Api_Sample.cpp\r\n\r\nNew codes are marked with, e.g., ```//++++ 4.START NEW CODE: ... //++++ 4. END NEW CODE``` .\r\n\r\nFor two different input tensors in an array, I got the same results in the two output tensors:\r\n```\r\n  // PROBLEM FOUND:\r\n  // output_tensors[0] and output_tensors[1] printed the same results\r\n  // output_tensors[0] looks overwrittern by output_tensors[1]\r\n  // the floatarr3 and floatarr4 happended to share the same pointer address 0x7f71eed76040,\r\n  // though they are from separate GetTensorMutableData() calls\r\n  // where could it be wrong in the new codes?\r\n  ```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/546632204/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]