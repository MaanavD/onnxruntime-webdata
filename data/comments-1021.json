[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/492089187",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1021#issuecomment-492089187",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1021",
        "id": 492089187,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjA4OTE4Nw==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-14T05:55:23Z",
        "updated_at": "2019-05-14T05:55:23Z",
        "author_association": "MEMBER",
        "body": "Hi @xybai,\r\n\r\nCould you please share the model for further investigation ? \r\n\r\nThanks! ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/492089187/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/492116454",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1021#issuecomment-492116454",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1021",
        "id": 492116454,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjExNjQ1NA==",
        "user": {
            "login": "xybai",
            "id": 10529016,
            "node_id": "MDQ6VXNlcjEwNTI5MDE2",
            "avatar_url": "https://avatars.githubusercontent.com/u/10529016?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xybai",
            "html_url": "https://github.com/xybai",
            "followers_url": "https://api.github.com/users/xybai/followers",
            "following_url": "https://api.github.com/users/xybai/following{/other_user}",
            "gists_url": "https://api.github.com/users/xybai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xybai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xybai/subscriptions",
            "organizations_url": "https://api.github.com/users/xybai/orgs",
            "repos_url": "https://api.github.com/users/xybai/repos",
            "events_url": "https://api.github.com/users/xybai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xybai/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-14T07:40:45Z",
        "updated_at": "2019-05-15T15:28:54Z",
        "author_association": "NONE",
        "body": "> Hi @xybai,\r\n> \r\n> Could you please share the model for further investigation ?\r\n> \r\n> Thanks!\r\n\r\nHi, this is my model skeleton. Please have a look. Thanks! \r\n\r\n    class TestModel(nn.Module):\r\n        def __init__(self):\r\n            super(TestModel, self).__init__()\r\n            self.word_embedding = nn.Embedding(num_embeddings=10000, embedding_dim=100)\r\n    \r\n            self.queryRNN = nn.GRU(input_size=100, hidden_size=256, num_layers=2, batch_first=True,\r\n                                   dropout=0.5, bidirectional=False)\r\n            self.passageRNN = nn.GRU(input_size=100, hidden_size=256, num_layers=2, batch_first=True,\r\n                                      dropout=0.5, bidirectional=False)\r\n    \r\n            self.queryMatchAtten = MatchAttention()\r\n            self.passageMatchAtten = MatchAttention()\r\n            self.queryMaxPooling = nn.MaxPool2d(kernel_size=(15, 1), stride=1)\r\n            self.passageMaxPooling = nn.MaxPool2d(kernel_size=(70, 1), stride=1)\r\n    \r\n            self.mlp1 = nn.Linear(in_features=768, out_features=512)\r\n            self.score_mlp2 = nn.Linear(in_features=512, out_features=1)\r\n    \r\n        def forward(self, input_ids_query, input_ids_passage, labels=None, scores=None):\r\n            word_embeddings_query = self.word_embedding(input_ids_query)\r\n            word_embeddings_passage = self.word_embedding(input_ids_passage)\r\n    \r\n            query_vector, query_h_n = self.queryRNN(word_embeddings_query)\r\n            passage_vector, passage_h_n = self.passageRNN(word_embeddings_passage)\r\n    \r\n            query_atten_vector = self.queryMatchAtten(query_vector, passage_vector)\r\n            passage_atten_vector = self.passageMatchAtten(passage_vector, query_vector)\r\n    \r\n            final_query_vector = self.queryMaxPooling(query_atten_vector)\r\n            final_passage_vector = self.passageMaxPooling(passage_atten_vector)\r\n    \r\n            final_query_vector = final_query_vector[:,-1,:]\r\n            final_passage_vector = final_passage_vector[:,-1,:]\r\n    \r\n            mul_vector = torch.mul(final_query_vector, final_passage_vector)\r\n            tmp = torch.cat((final_query_vector, mul_vector), -1)\r\n            query_passage_vector = torch.cat((tmp, final_passage_vector), -1)\r\n    \r\n            mlp_vector1 = self.mlp1(query_passage_vector)\r\n            tmp_logits = self.score_mlp2(mlp_vector1)\r\n            score_logits = torch.sigmoid(tmp_logits)\r\n            return score_logits",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/492116454/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/492352920",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1021#issuecomment-492352920",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1021",
        "id": 492352920,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjM1MjkyMA==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-14T18:23:32Z",
        "updated_at": "2019-05-14T18:23:32Z",
        "author_association": "MEMBER",
        "body": "> > Hi @xybai,\r\n> > Could you please share the model for further investigation ?\r\n> > Thanks!\r\n> \r\n> Hi, this is my model skeleton. Please have a look. Thanks!\r\n> \r\n> ```\r\n> class MatchAttention(nn.Module):\r\n>     def __init__(self):\r\n>         super(MatchAttention, self).__init__()\r\n>         self.softmax = nn.Softmax(dim=-1)\r\n> \r\n>     def forward(self, x, y):\r\n>         multi = x.bmm(y.transpose(2, 1))\r\n>         weight = self.softmax(multi)\r\n>         x_atten = weight.bmm(y)\r\n>         return x_atten\r\n> \r\n> \r\n> class TestModel(nn.Module):\r\n>     def __init__(self):\r\n>         super(TestModel, self).__init__()\r\n>         self.word_embedding = nn.Embedding(num_embeddings=10000, embedding_dim=100)\r\n> \r\n>         self.queryRNN = nn.GRU(input_size=100, hidden_size=256, num_layers=2, batch_first=True,\r\n>                                dropout=0.5, bidirectional=False)\r\n>         self.passageRNN = nn.GRU(input_size=100, hidden_size=256, num_layers=2, batch_first=True,\r\n>                                   dropout=0.5, bidirectional=False)\r\n> \r\n>         self.queryMatchAtten = MatchAttention()\r\n>         self.passageMatchAtten = MatchAttention()\r\n>         self.queryMaxPooling = nn.MaxPool2d(kernel_size=(15, 1), stride=1)\r\n>         self.passageMaxPooling = nn.MaxPool2d(kernel_size=(70, 1), stride=1)\r\n> \r\n>         self.mlp1 = nn.Linear(in_features=768, out_features=512)\r\n>         self.batchNorm = nn.BatchNorm1d(512)\r\n>         self.relu = nn.ReLU()\r\n>         self.mlp2 = nn.Linear(in_features=512, out_features=2)\r\n>         self.score_mlp2 = nn.Linear(in_features=512, out_features=1)\r\n> \r\n>     def forward(self, input_ids_query, input_ids_passage, labels=None, scores=None):\r\n>         word_embeddings_query = self.word_embedding(input_ids_query)\r\n>         word_embeddings_passage = self.word_embedding(input_ids_passage)\r\n> \r\n>         query_vector, query_h_n = self.queryRNN(word_embeddings_query)\r\n>         passage_vector, passage_h_n = self.passageRNN(word_embeddings_passage)\r\n> \r\n>         query_atten_vector = self.queryMatchAtten(query_vector, passage_vector)\r\n>         passage_atten_vector = self.passageMatchAtten(passage_vector, query_vector)\r\n> \r\n>         final_query_vector = self.queryMaxPooling(query_atten_vector)\r\n>         final_passage_vector = self.passageMaxPooling(passage_atten_vector)\r\n> \r\n>         final_query_vector = final_query_vector[:,-1,:]\r\n>         final_passage_vector = final_passage_vector[:,-1,:]\r\n> \r\n>         mul_vector = torch.mul(final_query_vector, final_passage_vector)\r\n>         tmp = torch.cat((final_query_vector, mul_vector), -1)\r\n>         query_passage_vector = torch.cat((tmp, final_passage_vector), -1)\r\n> \r\n>         mlp_vector1 = self.mlp1(query_passage_vector)\r\n>         batch_norm_vector = self.batchNorm(mlp_vector1)\r\n>         relu_vector = self.relu(batch_norm_vector)\r\n> \r\n>         tmp_logits = self.score_mlp2(relu_vector)\r\n>         score_logits = torch.sigmoid(tmp_logits)\r\n>         return score_logits\r\n> ```\r\n\r\nHi @xybai,\r\n\r\nThanks for the reply.\r\n\r\nThis is great, but I do need the .onnx file. This will help me to\r\n\r\n1) Run it through the [onnx model checker](https://github.com/onnx/onnx/blob/master/docs/PythonAPIOverview.md) to determine if it is a valid ONNX model. There could be an exporter bug that could have created an invalid ONNX model which needs to be tracked differently.\r\n\r\n2) Use the model to actually to score a dummy tensor and debug issues along the way.\r\n\r\nI am not sure the model skeleton will help me do the above. So, if you can share your model, that would be great!\r\n\r\nThanks!\r\n    ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/492352920/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/492691781",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1021#issuecomment-492691781",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1021",
        "id": 492691781,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjY5MTc4MQ==",
        "user": {
            "login": "xybai",
            "id": 10529016,
            "node_id": "MDQ6VXNlcjEwNTI5MDE2",
            "avatar_url": "https://avatars.githubusercontent.com/u/10529016?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xybai",
            "html_url": "https://github.com/xybai",
            "followers_url": "https://api.github.com/users/xybai/followers",
            "following_url": "https://api.github.com/users/xybai/following{/other_user}",
            "gists_url": "https://api.github.com/users/xybai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xybai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xybai/subscriptions",
            "organizations_url": "https://api.github.com/users/xybai/orgs",
            "repos_url": "https://api.github.com/users/xybai/repos",
            "events_url": "https://api.github.com/users/xybai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xybai/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-15T14:59:06Z",
        "updated_at": "2019-05-15T15:24:08Z",
        "author_association": "NONE",
        "body": "> > > > Hi @xybai,\r\n> > > > Could you please share the model for further investigation ?\r\n> > > > Thanks!\r\n> > > \r\n> > > \r\n> > > Hi, this is my model skeleton. Please have a look. Thanks!\r\n> > \r\n> > Hi @xybai,\r\n> > Thanks for the reply.\r\n> > This is great, but I do need the .onnx file. This will help me to\r\n> > \r\n> > 1. Run it through the [onnx model checker](https://github.com/onnx/onnx/blob/master/docs/PythonAPIOverview.md) to determine if it is a valid ONNX model. There could be an exporter bug that could have created an invalid ONNX model which needs to be tracked differently.\r\n> > 2. Use the model to actually to score a dummy tensor and debug issues along the way.\r\n> > \r\n> > I am not sure the model skeleton will help me do the above. So, if you can share your model, that would be great!\r\n> > Thanks!\r\n\r\nHi @hariharans29 , after discussing with someone in onnxruntime. The conversion error maybe related with maxpooling op, while it need 4 dimension, and only 3 is passed into. They will keep track of and try to fix it. Thanks for your time. Many thanks!",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/492691781/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]