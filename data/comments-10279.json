[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1012447097",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10279#issuecomment-1012447097",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10279",
        "id": 1012447097,
        "node_id": "IC_kwDOCVq1mM48WLd5",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-13T19:36:46Z",
        "updated_at": "2022-01-13T19:36:46Z",
        "author_association": "MEMBER",
        "body": "@fdwr ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1012447097/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1013580028",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10279#issuecomment-1013580028",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10279",
        "id": 1013580028,
        "node_id": "IC_kwDOCVq1mM48agD8",
        "user": {
            "login": "smk2007",
            "id": 6754002,
            "node_id": "MDQ6VXNlcjY3NTQwMDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6754002?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smk2007",
            "html_url": "https://github.com/smk2007",
            "followers_url": "https://api.github.com/users/smk2007/followers",
            "following_url": "https://api.github.com/users/smk2007/following{/other_user}",
            "gists_url": "https://api.github.com/users/smk2007/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smk2007/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smk2007/subscriptions",
            "organizations_url": "https://api.github.com/users/smk2007/orgs",
            "repos_url": "https://api.github.com/users/smk2007/repos",
            "events_url": "https://api.github.com/users/smk2007/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smk2007/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-15T01:53:36Z",
        "updated_at": "2022-01-15T01:53:36Z",
        "author_association": "MEMBER",
        "body": "Hi,\r\n\r\nThe problem with the above snippet is that it is trying to use the \"DML\" memory info with a raw cpu buffer. You need to:\r\n\r\n1) Create an appropriate ID3D12Resource. You can take a look here at how WinML does this: https://github.com/microsoft/onnxruntime/blob/775f862067b305f8dcba3ff1d65d47c15119c30d/winml/lib/Api/impl/TensorBase.h#L199\r\n2) Get the DML EP extension APIs via GetExecutionProviderApi\r\n3) Use the new CreateGPUAllocationFromD3DResource API to create a DML GPU Allocation using said resource.\r\n4) Create a DML Memory Info Object.\r\n5) Create an OrtValue using CreateTensorWithDataAsOrtValue, using the DML GPU Allocation and the DML Memory Info.\r\n\r\nTo see a more complete example of the code see this snippet being used by WinML to do the same.\r\nhttps://github.com/microsoft/onnxruntime/blob/a757bd7186deb855634b70c1a583d18e98cfa9ca/winml/lib/Api.Ort/OnnxruntimeEngine.cpp#L625\r\n\r\nThis OrtValue can be used to avoid CPU copies.\r\nNOTE: If you are trying to bind an output ID3D12Resource backed OrtValue you will run into this issue: https://github.com/microsoft/onnxruntime/issues/9962\r\n\r\nAlternatively you can avoid writing this, and use WinML which exercises the same logic to support this scenario. See example here: https://github.com/microsoft/onnxruntime/blob/53c43e99498d792ecd3bea158e95a51e4db94ae0/winml/test/scenario/cppwinrt/scenariotestscppwinrt.cpp#L451\r\n\r\nFrom your code snippet it seems like you intend to use CreateTensor to upload \"output_tensor_values\" to the GPU.\r\nIf you want to do this, you simply need to bind a CPU tensor while running with the DML Execution provider. The data will be moved to the appropriate context automatically.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1013580028/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1013593125",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10279#issuecomment-1013593125",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10279",
        "id": 1013593125,
        "node_id": "IC_kwDOCVq1mM48ajQl",
        "user": {
            "login": "adepierre",
            "id": 24371370,
            "node_id": "MDQ6VXNlcjI0MzcxMzcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/24371370?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adepierre",
            "html_url": "https://github.com/adepierre",
            "followers_url": "https://api.github.com/users/adepierre/followers",
            "following_url": "https://api.github.com/users/adepierre/following{/other_user}",
            "gists_url": "https://api.github.com/users/adepierre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adepierre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adepierre/subscriptions",
            "organizations_url": "https://api.github.com/users/adepierre/orgs",
            "repos_url": "https://api.github.com/users/adepierre/repos",
            "events_url": "https://api.github.com/users/adepierre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adepierre/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-15T02:47:44Z",
        "updated_at": "2022-01-15T02:49:18Z",
        "author_association": "NONE",
        "body": "Oh I see, I thought the CreateTensor function used the memory_info to create the memory on the right device.  But it's just wrapping some pre-existing memory (FYI, I followed [this example](https://onnxruntime.ai/docs/performance/tune-performance.html#iobinding), but it's not complete so a bit hard to get exact information from).\r\n\r\n> NOTE: If you are trying to bind an output ID3D12Resource backed OrtValue you will run into this issue: #9962\r\n\r\nSo at the moment there is basically no way to perform a GPU-only inference due to this other issue, correct?\r\n\r\n> Alternatively you can avoid writing this, and use WinML which exercises the same logic to support this scenario. See example here:\r\n\r\nWill check this too, however it says ``pass a Tensor in as an input GPU``, but nothing about the output. \r\n\r\n> From your code snippet it seems like you intend to use CreateTensor to upload \"output_tensor_values\" to the GPU. If you want to do this, you simply need to bind a CPU tensor while running with the DML Execution provider. The data will be moved to the appropriate context automatically.\r\n\r\nIn fact, I was just trying to measure the raw inference time of my model only with DML the same way it would be used in production (= no in/out allocation or copy). I didn't really want to pass any data, I just thought the CreateTensor function would allocate memory and copy from CPU, so I had to provide some data.\r\n\r\nI tried to measure the runtime with WinMLRunner or similar tools, but the timings are insanely high (tens of ms, while the same operation in CUDA takes only ~1-2ms). So my idea was that most of this time came from the data transfers and I wanted to measure without them.\r\n\r\nWill definitely try the ID3D12Resource thing, at least for the input, and let you know if it works. Thanks for the help!",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1013593125/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1018928665",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10279#issuecomment-1018928665",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10279",
        "id": 1018928665,
        "node_id": "IC_kwDOCVq1mM48u54Z",
        "user": {
            "login": "fdwr",
            "id": 1809166,
            "node_id": "MDQ6VXNlcjE4MDkxNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1809166?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fdwr",
            "html_url": "https://github.com/fdwr",
            "followers_url": "https://api.github.com/users/fdwr/followers",
            "following_url": "https://api.github.com/users/fdwr/following{/other_user}",
            "gists_url": "https://api.github.com/users/fdwr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fdwr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fdwr/subscriptions",
            "organizations_url": "https://api.github.com/users/fdwr/orgs",
            "repos_url": "https://api.github.com/users/fdwr/repos",
            "events_url": "https://api.github.com/users/fdwr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fdwr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-21T23:06:25Z",
        "updated_at": "2022-06-03T01:14:48Z",
        "author_association": "MEMBER",
        "body": "@adepierre: @sumitsays is working on that bug right now. In the meantime, to unblock yourself (if you are able to build locally), you could try adding `Sync()` and `RunEnd()`:\r\n\r\n> onnxruntime\\core\\providers\\dml\\DmlExecutionProvider\\src\\ExecutionProvider.h\r\n\r\n```\r\n    class ExecutionProvider : public onnxruntime::IExecutionProvider\r\n    {\r\n...\r\n        onnxruntime::common::Status OnSessionInitializationEnd() override\r\n        { \r\n            return m_impl->OnSessionInitializationEnd();\r\n        }\r\n---------->\r\n        virtual onnxruntime::Status Sync() const final override\r\n        {\r\n            // Completely wait until the device has completed all preceding tasks.\r\n            // The application could have called SynchronizeBoundOutputs().\r\n            m_impl->WaitForOutstandingWork();\r\n            return Status::OK();\r\n        }\r\n\r\n        virtual onnxruntime::Status OnRunEnd(bool /*sync_stream*/) final override\r\n        {\r\n            // Flush any pending work to the GPU, but don't block for completion, permitting it\r\n            // to overlap other work.\r\n            m_impl->Flush();\r\n            return Status::OK();\r\n        }\r\n<----------\r\n...\r\n```\r\n\r\n> onnxruntime\\core\\providers\\dml\\DmlExecutionProvider\\src\\ExecutionProvider.cpp\r\n\r\n```\r\n---------->\r\n    void ExecutionProviderImpl::WaitForOutstandingWork() \r\n    {\r\n        Flush();\r\n        m_context->GetCurrentCompletionEvent().WaitForSignal();\r\n    }\r\n<----------\r\n```\r\n\r\nI also have a standalone sanity test app [here (main.cpp)](https://github.com/microsoft/onnxruntime/files/7917063/main.txt). (Update 2022-06-02 newer version version here https://github.com/fdwr/OnnxRuntimeDirectMLEPSample) It doesn't upload to/down from the GPU, just creating empty tensors with no specific data, but it might help. Interestingly `Run` has high overhead when called from ORT, even after session load and binding, but calling the same operator by itself in DirectML is ~2ms. It seems there is still overhead somewhere 🤔.\r\n\r\n```\r\nBeginning execution.\r\nFinished execution.\r\nd3dDeviceCreationTime ...   295.642800\r\nsessionCreationTime .....    58.333100\r\ntensorCreationTime ......    89.427700\r\nbindingTime .............     0.023300\r\nrunTime .................    12.455700\r\nsynchronizeOutputsTime ..    44.458200\r\n```\r\n\r\nEquivalent DML API calls:\r\n\r\n```\r\n{\r\n  \"OperatorType\": {\r\n    \"EnumName\": \"DML_OPERATOR_RESAMPLE1\",\r\n    \"EnumValue\": 116\r\n  },\r\n  \"Inputs\": {\r\n    \"InputTensor\": {\r\n      \"TensorType\": {\r\n        \"EnumName\": \"DML_TENSOR_TYPE_BUFFER\",\r\n        \"EnumValue\": 1\r\n      },\r\n      \"BufferDesc\": {\r\n        \"DataType\": {\r\n          \"EnumName\": \"DML_TENSOR_DATA_TYPE_FLOAT32\",\r\n          \"EnumValue\": 1\r\n        },\r\n        \"Flags\": [],\r\n        \"DimensionCount\": 4,\r\n        \"Sizes\": [1, 3, 1000, 1000],\r\n        \"Strides\": null,\r\n        \"TotalTensorSizeInBytes\": 12000000,\r\n        \"GuaranteedBaseOffsetAlignment\": 0\r\n      }\r\n    }\r\n  },\r\n  \"Outputs\": {\r\n    \"OutputTensor\": {\r\n      \"TensorType\": {\r\n        \"EnumName\": \"DML_TENSOR_TYPE_BUFFER\",\r\n        \"EnumValue\": 1\r\n      },\r\n      \"BufferDesc\": {\r\n        \"DataType\": {\r\n          \"EnumName\": \"DML_TENSOR_DATA_TYPE_FLOAT32\",\r\n          \"EnumValue\": 1\r\n        },\r\n        \"Flags\": [],\r\n        \"DimensionCount\": 4,\r\n        \"Sizes\": [1, 3, 4000, 4000],\r\n        \"Strides\": null,\r\n        \"TotalTensorSizeInBytes\": 192000000,\r\n        \"GuaranteedBaseOffsetAlignment\": 0\r\n      }\r\n    }\r\n  },\r\n  \"Attributes\": {\r\n    \"InterpolationMode\": 1,\r\n    \"DimensionCount\": 4,\r\n    \"Scales\": [1.0, 1.0, 4.0, 4.0],\r\n    \"InputPixelOffsets\": [0.5, 0.5, 0.5, 0.5],\r\n    \"OutputPixelOffsets\": [-0.5, -0.5, -0.5, -0.5]\r\n  }\r\n}\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1018928665/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1020128917",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10279#issuecomment-1020128917",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10279",
        "id": 1020128917,
        "node_id": "IC_kwDOCVq1mM48ze6V",
        "user": {
            "login": "adepierre",
            "id": 24371370,
            "node_id": "MDQ6VXNlcjI0MzcxMzcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/24371370?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adepierre",
            "html_url": "https://github.com/adepierre",
            "followers_url": "https://api.github.com/users/adepierre/followers",
            "following_url": "https://api.github.com/users/adepierre/following{/other_user}",
            "gists_url": "https://api.github.com/users/adepierre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adepierre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adepierre/subscriptions",
            "organizations_url": "https://api.github.com/users/adepierre/orgs",
            "repos_url": "https://api.github.com/users/adepierre/repos",
            "events_url": "https://api.github.com/users/adepierre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adepierre/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-24T13:59:21Z",
        "updated_at": "2022-01-24T15:31:34Z",
        "author_association": "NONE",
        "body": "@fdwr Thanks for the reply! I've been able to recompile the onnx runtime with your modifications. For completeness if anyone tries to do the same, I also had to add:\r\n\r\n> onnxruntime\\core\\providers\\dml\\DmlExecutionProvider\\src\\ExecutionProvider.cpp\r\n```cpp\r\n---------->\r\n    void WaitForOutstandingWork();\r\n<----------\r\n```\r\n\r\nRegarding your code snippet, I get similar times you do, with an extra overhead compared to raw operation unfortunately :/\r\n\r\nMaybe I should try to directly call the operations of my net in DirectML for best efficiency.\r\n\r\nEdit : I tried with other models and found timings consistent with CUDA ones. So I guess it's the upsample ops that has a problem.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1020128917/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1020392642",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10279#issuecomment-1020392642",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10279",
        "id": 1020392642,
        "node_id": "IC_kwDOCVq1mM480fTC",
        "user": {
            "login": "fdwr",
            "id": 1809166,
            "node_id": "MDQ6VXNlcjE4MDkxNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1809166?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fdwr",
            "html_url": "https://github.com/fdwr",
            "followers_url": "https://api.github.com/users/fdwr/followers",
            "following_url": "https://api.github.com/users/fdwr/following{/other_user}",
            "gists_url": "https://api.github.com/users/fdwr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fdwr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fdwr/subscriptions",
            "organizations_url": "https://api.github.com/users/fdwr/orgs",
            "repos_url": "https://api.github.com/users/fdwr/repos",
            "events_url": "https://api.github.com/users/fdwr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fdwr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-24T18:09:50Z",
        "updated_at": "2022-02-14T21:22:32Z",
        "author_association": "MEMBER",
        "body": "@adepierre Do you time only the first iteration of Upsample? 🤔 It would be interesting to call .Run() a few times, to see if the 2nd/3rd runs are faster.\r\n\r\nBtw, https://github.com/microsoft/onnxruntime/pull/10362 is completed now.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1020392642/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1022107143",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10279#issuecomment-1022107143",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10279",
        "id": 1022107143,
        "node_id": "IC_kwDOCVq1mM487B4H",
        "user": {
            "login": "adepierre",
            "id": 24371370,
            "node_id": "MDQ6VXNlcjI0MzcxMzcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/24371370?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adepierre",
            "html_url": "https://github.com/adepierre",
            "followers_url": "https://api.github.com/users/adepierre/followers",
            "following_url": "https://api.github.com/users/adepierre/following{/other_user}",
            "gists_url": "https://api.github.com/users/adepierre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adepierre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adepierre/subscriptions",
            "organizations_url": "https://api.github.com/users/adepierre/orgs",
            "repos_url": "https://api.github.com/users/adepierre/repos",
            "events_url": "https://api.github.com/users/adepierre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adepierre/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-26T11:22:41Z",
        "updated_at": "2022-01-26T11:22:41Z",
        "author_association": "NONE",
        "body": "> @adepierre Do you time only the first iteration of Upsample? 🤔 It would be interesting to call .Run() a few times, to see if the 2nd/3rd runs are faster.\r\n\r\nYou were right about that @fdwr. I looped the inference part of your example main.cpp. Inference time is divided by 10 for the second iteration, and again by 2 from the third one. The raw timings results are below, but it's basically even faster than the 2ms you had with directML. Is this even possible? Could the measured time be biased in a way?\r\n\r\nAnyway, this might be beyond the point of the original issue. I tried to time my inference and now I can do it properly so feel free to close this. And thanks again for your help!\r\n\r\n\r\n```shell\r\nd3dDeviceCreationTime ...   322.800000\r\nsessionCreationTime .....    58.710000\r\ntensorCreationTime ......    59.209000\r\nbindingTime .............     0.035000\r\nrunTime .................    10.618000\r\nsynchronizeOutputsTime ..     4.174000\r\n\r\n\r\ntensorCreationTime ......    53.268000\r\nbindingTime .............     0.011000\r\nrunTime .................     1.128000\r\nsynchronizeOutputsTime ..     4.196000\r\n\r\n\r\ntensorCreationTime ......    68.596000\r\nbindingTime .............     0.017000\r\nrunTime .................     0.412000\r\nsynchronizeOutputsTime ..     5.067000\r\n\r\n\r\ntensorCreationTime ......    82.570000\r\nbindingTime .............     0.019000\r\nrunTime .................     0.390000\r\nsynchronizeOutputsTime ..     5.129000\r\n\r\n\r\ntensorCreationTime ......    76.321000\r\nbindingTime .............     0.018000\r\nrunTime .................     0.419000\r\nsynchronizeOutputsTime ..     5.042000\r\n\r\n\r\ntensorCreationTime ......    98.152000\r\nbindingTime .............     0.021000\r\nrunTime .................     0.484000\r\nsynchronizeOutputsTime ..     5.165000\r\n\r\n\r\ntensorCreationTime ......    80.610000\r\nbindingTime .............     0.020000\r\nrunTime .................     0.450000\r\nsynchronizeOutputsTime ..     5.084000\r\n\r\n\r\ntensorCreationTime ......    71.752000\r\nbindingTime .............     0.018000\r\nrunTime .................     0.423000\r\nsynchronizeOutputsTime ..     5.372000\r\n\r\n\r\ntensorCreationTime ......    87.846000\r\nbindingTime .............     0.017000\r\nrunTime .................     0.435000\r\nsynchronizeOutputsTime ..     5.111000\r\n\r\n\r\ntensorCreationTime ......   114.686000\r\nbindingTime .............     0.019000\r\nrunTime .................     0.452000\r\nsynchronizeOutputsTime ..     5.163000\r\n```\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1022107143/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1022529137",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10279#issuecomment-1022529137",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10279",
        "id": 1022529137,
        "node_id": "IC_kwDOCVq1mM488o5x",
        "user": {
            "login": "fdwr",
            "id": 1809166,
            "node_id": "MDQ6VXNlcjE4MDkxNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1809166?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fdwr",
            "html_url": "https://github.com/fdwr",
            "followers_url": "https://api.github.com/users/fdwr/followers",
            "following_url": "https://api.github.com/users/fdwr/following{/other_user}",
            "gists_url": "https://api.github.com/users/fdwr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fdwr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fdwr/subscriptions",
            "organizations_url": "https://api.github.com/users/fdwr/orgs",
            "repos_url": "https://api.github.com/users/fdwr/repos",
            "events_url": "https://api.github.com/users/fdwr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fdwr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-26T19:29:21Z",
        "updated_at": "2022-01-26T19:29:46Z",
        "author_association": "MEMBER",
        "body": "@adepierre Glad to hear, and welcome. I'm curious what the first-run overhead is 🤔 (would take some time to figure out...), maybe additional delayed allocations in the graph on CPU side, because the GPU work *should* be done by OnSessionInitializationEnd. There are other potential confounding factors too, such as certain GPU's switching from a low power mode to a higher power mode (that's why my teammate recommends ignoring the first 50-100ms on some laptops until they get going).\r\n\r\nNote a realistic GPU-to-GPU case (e.g. video frame input) would only create the tensors once rather than recreate them each frame, wouldn't rebind, and it wouldn't necessarily wait to synchronize the outputs either (such that things could be pipelined onto another step). Cheers.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1022529137/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1039158028",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10279#issuecomment-1039158028",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10279",
        "id": 1039158028,
        "node_id": "IC_kwDOCVq1mM498EsM",
        "user": {
            "login": "wojtuss",
            "id": 19307410,
            "node_id": "MDQ6VXNlcjE5MzA3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/19307410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wojtuss",
            "html_url": "https://github.com/wojtuss",
            "followers_url": "https://api.github.com/users/wojtuss/followers",
            "following_url": "https://api.github.com/users/wojtuss/following{/other_user}",
            "gists_url": "https://api.github.com/users/wojtuss/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wojtuss/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wojtuss/subscriptions",
            "organizations_url": "https://api.github.com/users/wojtuss/orgs",
            "repos_url": "https://api.github.com/users/wojtuss/repos",
            "events_url": "https://api.github.com/users/wojtuss/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wojtuss/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-14T14:34:45Z",
        "updated_at": "2022-02-14T14:34:45Z",
        "author_association": "NONE",
        "body": "@adepierre , Could you please share your final version of your app code? I struggle to do exactly the same as you did: to run an onnx model on GPU using onnxruntime with DirectML. Still to no avail.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1039158028/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1039193440",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10279#issuecomment-1039193440",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10279",
        "id": 1039193440,
        "node_id": "IC_kwDOCVq1mM498NVg",
        "user": {
            "login": "adepierre",
            "id": 24371370,
            "node_id": "MDQ6VXNlcjI0MzcxMzcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/24371370?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adepierre",
            "html_url": "https://github.com/adepierre",
            "followers_url": "https://api.github.com/users/adepierre/followers",
            "following_url": "https://api.github.com/users/adepierre/following{/other_user}",
            "gists_url": "https://api.github.com/users/adepierre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adepierre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adepierre/subscriptions",
            "organizations_url": "https://api.github.com/users/adepierre/orgs",
            "repos_url": "https://api.github.com/users/adepierre/repos",
            "events_url": "https://api.github.com/users/adepierre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adepierre/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-14T15:05:16Z",
        "updated_at": "2022-02-14T15:05:16Z",
        "author_association": "NONE",
        "body": "> Could you please share your final version of your app code?\r\n\r\nI used the code provided above ([here](https://github.com/microsoft/onnxruntime/issues/10279#issuecomment-1018928665)). It worked great with the fix mentionned in this issue, I've been able to measure the exact inference time of my network.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1039193440/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1040027373",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10279#issuecomment-1040027373",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10279",
        "id": 1040027373,
        "node_id": "IC_kwDOCVq1mM49_Y7t",
        "user": {
            "login": "wojtuss",
            "id": 19307410,
            "node_id": "MDQ6VXNlcjE5MzA3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/19307410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wojtuss",
            "html_url": "https://github.com/wojtuss",
            "followers_url": "https://api.github.com/users/wojtuss/followers",
            "following_url": "https://api.github.com/users/wojtuss/following{/other_user}",
            "gists_url": "https://api.github.com/users/wojtuss/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wojtuss/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wojtuss/subscriptions",
            "organizations_url": "https://api.github.com/users/wojtuss/orgs",
            "repos_url": "https://api.github.com/users/wojtuss/repos",
            "events_url": "https://api.github.com/users/wojtuss/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wojtuss/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-15T09:07:44Z",
        "updated_at": "2022-02-15T09:07:44Z",
        "author_association": "NONE",
        "body": "@adepierre , Thank you for your prompt response.\r\nI am not familiar with GPU programming. The above instructions seems clear to me except for creating the D3D12 Resource. How did you do that? The WinML method uses `winmlp::LearningModelSession` to get the device. The Ort::Session does not provide this functionality.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1040027373/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1040033894",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10279#issuecomment-1040033894",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10279",
        "id": 1040033894,
        "node_id": "IC_kwDOCVq1mM49_ahm",
        "user": {
            "login": "adepierre",
            "id": 24371370,
            "node_id": "MDQ6VXNlcjI0MzcxMzcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/24371370?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adepierre",
            "html_url": "https://github.com/adepierre",
            "followers_url": "https://api.github.com/users/adepierre/followers",
            "following_url": "https://api.github.com/users/adepierre/following{/other_user}",
            "gists_url": "https://api.github.com/users/adepierre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adepierre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adepierre/subscriptions",
            "organizations_url": "https://api.github.com/users/adepierre/orgs",
            "repos_url": "https://api.github.com/users/adepierre/repos",
            "events_url": "https://api.github.com/users/adepierre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adepierre/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-15T09:14:04Z",
        "updated_at": "2022-02-15T09:14:04Z",
        "author_association": "NONE",
        "body": "> The above instructions seems clear to me except for creating the D3D12 Resource. How did you do that?\r\n\r\nThe ressources are created in the ``CreateTensorValueUsingD3DResource`` function (at line 327 in the provided file). The device is obtained at line 95 with ``D3D12CreateDevice(nullptr, D3D_FEATURE_LEVEL_11_0, IID_PPV_ARGS(&d3d12Device))``",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1040033894/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1040295792",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10279#issuecomment-1040295792",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10279",
        "id": 1040295792,
        "node_id": "IC_kwDOCVq1mM4-Aadw",
        "user": {
            "login": "wojtuss",
            "id": 19307410,
            "node_id": "MDQ6VXNlcjE5MzA3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/19307410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wojtuss",
            "html_url": "https://github.com/wojtuss",
            "followers_url": "https://api.github.com/users/wojtuss/followers",
            "following_url": "https://api.github.com/users/wojtuss/following{/other_user}",
            "gists_url": "https://api.github.com/users/wojtuss/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wojtuss/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wojtuss/subscriptions",
            "organizations_url": "https://api.github.com/users/wojtuss/orgs",
            "repos_url": "https://api.github.com/users/wojtuss/repos",
            "events_url": "https://api.github.com/users/wojtuss/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wojtuss/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-15T13:48:09Z",
        "updated_at": "2022-02-15T13:48:09Z",
        "author_association": "NONE",
        "body": "@adepierre, Right, I missed that file.\r\nThank you very much for your help!",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1040295792/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1140139425",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10279#issuecomment-1140139425",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10279",
        "id": 1140139425,
        "node_id": "IC_kwDOCVq1mM5D9SWh",
        "user": {
            "login": "JiaPai12138",
            "id": 72233260,
            "node_id": "MDQ6VXNlcjcyMjMzMjYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/72233260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JiaPai12138",
            "html_url": "https://github.com/JiaPai12138",
            "followers_url": "https://api.github.com/users/JiaPai12138/followers",
            "following_url": "https://api.github.com/users/JiaPai12138/following{/other_user}",
            "gists_url": "https://api.github.com/users/JiaPai12138/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JiaPai12138/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JiaPai12138/subscriptions",
            "organizations_url": "https://api.github.com/users/JiaPai12138/orgs",
            "repos_url": "https://api.github.com/users/JiaPai12138/repos",
            "events_url": "https://api.github.com/users/JiaPai12138/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JiaPai12138/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-05-28T02:09:41Z",
        "updated_at": "2022-06-28T20:56:31Z",
        "author_association": "NONE",
        "body": "Is there any way to use python inference with IOBinding and DirectML?\r\nI tried [samples here](https://onnxruntime.ai/docs/api/python/api_summary.html), it runs well in the first iteration, however the output remains the same during all other iterations\r\nI am inference using yolox\r\n\r\n     io_binding = self.net.io_binding()\r\n     io_binding.bind_output('output')\r\n     io_binding.bind_cpu_input('input', img)\r\n\r\nI know there is something wrong with my code, but i dont know how to fix it, whatever i changed img value, the result will not change anyway\r\n\r\n*[ammended update by fdwr]*\r\nSeparate linked issue here: https://github.com/microsoft/onnxruntime/issues/11666",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1140139425/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]