[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1012774832",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10286#issuecomment-1012774832",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10286",
        "id": 1012774832,
        "node_id": "IC_kwDOCVq1mM48Xbew",
        "user": {
            "login": "ManuelAngel99",
            "id": 20950298,
            "node_id": "MDQ6VXNlcjIwOTUwMjk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/20950298?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ManuelAngel99",
            "html_url": "https://github.com/ManuelAngel99",
            "followers_url": "https://api.github.com/users/ManuelAngel99/followers",
            "following_url": "https://api.github.com/users/ManuelAngel99/following{/other_user}",
            "gists_url": "https://api.github.com/users/ManuelAngel99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ManuelAngel99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ManuelAngel99/subscriptions",
            "organizations_url": "https://api.github.com/users/ManuelAngel99/orgs",
            "repos_url": "https://api.github.com/users/ManuelAngel99/repos",
            "events_url": "https://api.github.com/users/ManuelAngel99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ManuelAngel99/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-14T04:52:36Z",
        "updated_at": "2022-01-14T04:52:36Z",
        "author_association": "NONE",
        "body": "After doing some research I have found a plausible workaround using dlpack as mentioned in #4162, however it seems like the to_dlpack() method is neither available in onnxruntime-gpu==1.10.0 or in onnxruntime-training",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1012774832/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1013477686",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10286#issuecomment-1013477686",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10286",
        "id": 1013477686,
        "node_id": "IC_kwDOCVq1mM48aHE2",
        "user": {
            "login": "ManuelAngel99",
            "id": 20950298,
            "node_id": "MDQ6VXNlcjIwOTUwMjk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/20950298?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ManuelAngel99",
            "html_url": "https://github.com/ManuelAngel99",
            "followers_url": "https://api.github.com/users/ManuelAngel99/followers",
            "following_url": "https://api.github.com/users/ManuelAngel99/following{/other_user}",
            "gists_url": "https://api.github.com/users/ManuelAngel99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ManuelAngel99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ManuelAngel99/subscriptions",
            "organizations_url": "https://api.github.com/users/ManuelAngel99/orgs",
            "repos_url": "https://api.github.com/users/ManuelAngel99/repos",
            "events_url": "https://api.github.com/users/ManuelAngel99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ManuelAngel99/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-14T21:14:25Z",
        "updated_at": "2022-01-14T21:14:25Z",
        "author_association": "NONE",
        "body": "I finally got it working. If someone is facing the same issue, here are the steps I followed:\r\n\r\n1. Since the standard onnxruntime package distributed in pipy doesn't include the onnxruntime training module and the onnxruntime-training package doesn't provide CUDA support, I needed to download and compile onnxruntime from its source code using the --use_cuda and --enable_training flags. Here is the exact command I used:\r\n```\r\nbash ./onnxruntime/build.sh --config Release --build_wheel --parallel --use_openmp --use_cuda --cudnn_home /usr/local/cuda --cuda_home /usr/local/cuda --cmake_extra_defines --skip_tests --enable_training --use_tensorrt --tensorrt_home /opt/tensorrt/\r\n```\r\n2. Import the following function from onnxruntime.training\r\n```\r\nfrom onnxruntime.training.ortmodule._utils import _ortvalue_to_torch_tensor\r\n```\r\n3. Convert to pytorch:\r\n```\r\nfrom onnxruntime import OrtValue\r\nimport torch\r\nimport numpy as np\r\n# Create a sample OrtValue on the GPU\r\nx = OrtValue.ortvalue_from_numpy(np.random.rand(3), 'cuda')\r\n\r\n# Convert to torch\r\ndevice=torch.device('cuda')\r\na =_ortvalue_to_torch_tensor( x._ortvalue,  device)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1013477686/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1017618934",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10286#issuecomment-1017618934",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10286",
        "id": 1017618934,
        "node_id": "IC_kwDOCVq1mM48p6H2",
        "user": {
            "login": "jeshels",
            "id": 80462280,
            "node_id": "MDQ6VXNlcjgwNDYyMjgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/80462280?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeshels",
            "html_url": "https://github.com/jeshels",
            "followers_url": "https://api.github.com/users/jeshels/followers",
            "following_url": "https://api.github.com/users/jeshels/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeshels/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeshels/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeshels/subscriptions",
            "organizations_url": "https://api.github.com/users/jeshels/orgs",
            "repos_url": "https://api.github.com/users/jeshels/repos",
            "events_url": "https://api.github.com/users/jeshels/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeshels/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-20T15:23:22Z",
        "updated_at": "2022-01-20T15:23:22Z",
        "author_association": "NONE",
        "body": "I would like to add that due to #9467 I had to add `--cuda_version` flag to the build flags. For example:\r\n\r\n```\r\nbash ./onnxruntime/build.sh --config Release --build_wheel --parallel --use_openmp --use_cuda --cudnn_home /usr/local/cuda --cuda_home /usr/local/cuda --cmake_extra_defines --skip_tests --enable_training --use_tensorrt --tensorrt_home /opt/tensorrt/ --cuda_version=10.1\r\n```\r\n\r\nAfter this, all worked as solution mentioned above.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1017618934/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1017706031",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10286#issuecomment-1017706031",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10286",
        "id": 1017706031,
        "node_id": "IC_kwDOCVq1mM48qPYv",
        "user": {
            "login": "pommedeterresautee",
            "id": 1029874,
            "node_id": "MDQ6VXNlcjEwMjk4NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pommedeterresautee",
            "html_url": "https://github.com/pommedeterresautee",
            "followers_url": "https://api.github.com/users/pommedeterresautee/followers",
            "following_url": "https://api.github.com/users/pommedeterresautee/following{/other_user}",
            "gists_url": "https://api.github.com/users/pommedeterresautee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pommedeterresautee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pommedeterresautee/subscriptions",
            "organizations_url": "https://api.github.com/users/pommedeterresautee/orgs",
            "repos_url": "https://api.github.com/users/pommedeterresautee/repos",
            "events_url": "https://api.github.com/users/pommedeterresautee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pommedeterresautee/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-20T16:48:54Z",
        "updated_at": "2022-01-20T16:49:52Z",
        "author_association": "NONE",
        "body": "Posted in another issue too, but just in case one search the same issue:\r\n\r\nmuch simpler (no need to recompile ORT) -> just provide the torch pointer to the output of your model, etc.:\r\n```python\r\nbinding = session.io_binding()\r\n...\r\n# test export to Torch tensor directly\r\n# https://onnxruntime.ai/docs/api/python/api_summary.html#iobinding\r\nlogit_output = torch.empty((2, 128, 50257), dtype=torch.float32, device='cuda')\r\nbinding.bind_output(name=onnx_named_outputs[0], device_type='cuda', device_id=0, element_type=np.float32, shape=tuple(logit_output.shape), buffer_ptr=logit_output.data_ptr())\r\n```\r\nThen your tensor is filled with the right values, no copy to CPU, etc.\r\nYou can also take the pointer as input of an ortvalue.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1017706031/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1017843490",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10286#issuecomment-1017843490",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10286",
        "id": 1017843490,
        "node_id": "IC_kwDOCVq1mM48qw8i",
        "user": {
            "login": "ManuelAngel99",
            "id": 20950298,
            "node_id": "MDQ6VXNlcjIwOTUwMjk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/20950298?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ManuelAngel99",
            "html_url": "https://github.com/ManuelAngel99",
            "followers_url": "https://api.github.com/users/ManuelAngel99/followers",
            "following_url": "https://api.github.com/users/ManuelAngel99/following{/other_user}",
            "gists_url": "https://api.github.com/users/ManuelAngel99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ManuelAngel99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ManuelAngel99/subscriptions",
            "organizations_url": "https://api.github.com/users/ManuelAngel99/orgs",
            "repos_url": "https://api.github.com/users/ManuelAngel99/repos",
            "events_url": "https://api.github.com/users/ManuelAngel99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ManuelAngel99/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-20T19:21:22Z",
        "updated_at": "2022-01-20T19:21:22Z",
        "author_association": "NONE",
        "body": "> Posted in another issue too, but just in case one search the same issue:\r\n> \r\n> much simpler (no need to recompile ORT) -> just provide the torch pointer to the output of your model, etc.:\r\n> \r\n> ```python\r\n> binding = session.io_binding()\r\n> ...\r\n> # test export to Torch tensor directly\r\n> # https://onnxruntime.ai/docs/api/python/api_summary.html#iobinding\r\n> logit_output = torch.empty((2, 128, 50257), dtype=torch.float32, device='cuda')\r\n> binding.bind_output(name=onnx_named_outputs[0], device_type='cuda', device_id=0, element_type=np.float32, shape=tuple(logit_output.shape), buffer_ptr=logit_output.data_ptr())\r\n> ```\r\n> \r\n> Then your tensor is filled with the right values, no copy to CPU, etc. You can also take the pointer as input of an ortvalue.\r\n\r\nHi, as mentioned in the OP I was looking for a way to convert the ORTValue to a torch tensor without needing to create the torch tensors with their dimmensions beforehand. If your model only has an output (or a few) and it's size is easy to calculate It is more convenient to use the IOBinding interface (as mentioned in the OP)",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1017843490/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]