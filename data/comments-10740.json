[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1057491816",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10740#issuecomment-1057491816",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10740",
        "id": 1057491816,
        "node_id": "IC_kwDOCVq1mM4_CAto",
        "user": {
            "login": "jiafatom",
            "id": 30608893,
            "node_id": "MDQ6VXNlcjMwNjA4ODkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/30608893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jiafatom",
            "html_url": "https://github.com/jiafatom",
            "followers_url": "https://api.github.com/users/jiafatom/followers",
            "following_url": "https://api.github.com/users/jiafatom/following{/other_user}",
            "gists_url": "https://api.github.com/users/jiafatom/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jiafatom/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jiafatom/subscriptions",
            "organizations_url": "https://api.github.com/users/jiafatom/orgs",
            "repos_url": "https://api.github.com/users/jiafatom/repos",
            "events_url": "https://api.github.com/users/jiafatom/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jiafatom/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-02T23:25:44Z",
        "updated_at": "2022-03-02T23:25:44Z",
        "author_association": "MEMBER",
        "body": "cc @baijumeswani, @ashbhandare",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1057491816/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1058670448",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10740#issuecomment-1058670448",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10740",
        "id": 1058670448,
        "node_id": "IC_kwDOCVq1mM4_Ggdw",
        "user": {
            "login": "thiagocrepaldi",
            "id": 5469809,
            "node_id": "MDQ6VXNlcjU0Njk4MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5469809?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thiagocrepaldi",
            "html_url": "https://github.com/thiagocrepaldi",
            "followers_url": "https://api.github.com/users/thiagocrepaldi/followers",
            "following_url": "https://api.github.com/users/thiagocrepaldi/following{/other_user}",
            "gists_url": "https://api.github.com/users/thiagocrepaldi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thiagocrepaldi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thiagocrepaldi/subscriptions",
            "organizations_url": "https://api.github.com/users/thiagocrepaldi/orgs",
            "repos_url": "https://api.github.com/users/thiagocrepaldi/repos",
            "events_url": "https://api.github.com/users/thiagocrepaldi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thiagocrepaldi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-03T23:38:25Z",
        "updated_at": "2022-03-07T19:07:09Z",
        "author_association": "MEMBER",
        "body": "The specified model is not a trainable model (because it is composed only of a [non trainable] Dropout layer. Does it make sense to use a non-trainable module in `ORTModule`? I believe it is not, though concur we could improve error message to capture this scenario.\r\n\r\nThe idea of having default devices was discussed in the past, but we preferred not to go this way. One reason is that device mismatch could happen if the model defaults to one device and the input is in another. That easily happens because the user usually keeps model and input on the same device, so it `ORTModule` changes the model, the input wouldnt be changed",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1058670448/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1063569235",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10740#issuecomment-1063569235",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10740",
        "id": 1063569235,
        "node_id": "IC_kwDOCVq1mM4_ZMdT",
        "user": {
            "login": "jiafatom",
            "id": 30608893,
            "node_id": "MDQ6VXNlcjMwNjA4ODkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/30608893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jiafatom",
            "html_url": "https://github.com/jiafatom",
            "followers_url": "https://api.github.com/users/jiafatom/followers",
            "following_url": "https://api.github.com/users/jiafatom/following{/other_user}",
            "gists_url": "https://api.github.com/users/jiafatom/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jiafatom/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jiafatom/subscriptions",
            "organizations_url": "https://api.github.com/users/jiafatom/orgs",
            "repos_url": "https://api.github.com/users/jiafatom/repos",
            "events_url": "https://api.github.com/users/jiafatom/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jiafatom/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-10T01:46:53Z",
        "updated_at": "2022-03-10T01:46:53Z",
        "author_association": "MEMBER",
        "body": "@thiagocrepaldi the background is that I have a big model, and I want to wrap part of the model using `ORTModule`. I just wrap several submodules, and then the forward pass crashes. Then it takes some time to find the reason because I don't know one submodule is a non-trainable model. So for non-trainable model, is there a way to make it pass without crashing?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1063569235/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]