[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1086717889",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11085#issuecomment-1086717889",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11085",
        "id": 1086717889,
        "node_id": "IC_kwDOCVq1mM5Axf_B",
        "user": {
            "login": "chausner",
            "id": 15180557,
            "node_id": "MDQ6VXNlcjE1MTgwNTU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/15180557?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chausner",
            "html_url": "https://github.com/chausner",
            "followers_url": "https://api.github.com/users/chausner/followers",
            "following_url": "https://api.github.com/users/chausner/following{/other_user}",
            "gists_url": "https://api.github.com/users/chausner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chausner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chausner/subscriptions",
            "organizations_url": "https://api.github.com/users/chausner/orgs",
            "repos_url": "https://api.github.com/users/chausner/repos",
            "events_url": "https://api.github.com/users/chausner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chausner/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-02T20:33:37Z",
        "updated_at": "2022-04-02T20:33:37Z",
        "author_association": "CONTRIBUTOR",
        "body": "Agree, it would be nice to have an easier solution for this than manually feeding back the state into the network. I've seen many users asking about this because it is not documented and there are no samples.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1086717889/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1087313540",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11085#issuecomment-1087313540",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11085",
        "id": 1087313540,
        "node_id": "IC_kwDOCVq1mM5AzxaE",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-04T09:16:58Z",
        "updated_at": "2022-04-04T09:16:58Z",
        "author_association": "MEMBER",
        "body": "ORT is stateless so that concurrent inferencing is supported. Whilst it may be more convenient for your scenario to internally store the state, that change would have significant performance and implementation implications. For ORT you will need to make the hidden state a graph output to capture it, and a graph input so it can be passed back in. \r\n\r\nProbably best to ask on the PyTorch GitHub page about how the export of nn.Parameter to ONNX works, and whether anything could/should be done to automatically setup this sort of pass-through mechanism if the parameter is being used to cache state. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1087313540/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1090111046",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11085#issuecomment-1090111046",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11085",
        "id": 1090111046,
        "node_id": "IC_kwDOCVq1mM5A-cZG",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-06T10:30:30Z",
        "updated_at": "2022-04-06T23:38:19Z",
        "author_association": "MEMBER",
        "body": "As it's somewhat non-trivial to update the model correctly, here's a helper script that _should_ work. Limited testing. Tweak as needed. @chausner hopefully this helps convert a model so that the state is easily fed back in.\r\n\r\nhttps://gist.github.com/skottmckay/ff23c03752dfb9873eb15888e5892c78\r\n\r\nFor all the RNN/LSTM/GRU nodes in the main graph it will\r\n  - add a graph output for the Y_h output so it can be retrieved\r\n  - add a graph input for the initial_h input so the previous state in the Y_h output can be passed back in\r\n  - if possible, adds an initializer for the default value of initial_h\r\n    - this makes the graph input for initial_h optional, so on the first run or if you don't want/need to break up your sequence into multiple calls to InferenceSession::Run you don't have to pass in the zeros for initial_h\r\n    - this can only be done if the batch dimension is a fixed value\r\n      - need a fixed shape for an initializer \r\n\r\nIt does not look at subgraphs in Scan/Loop/If nodes. That could be done but is more complicated as the Y_h output needs to be wired back through all levels of the ancestor graphs. The initial_h input just needs to be added to the main graph though.\r\n\r\nExample output from running against this model which has 5 RNN layers: https://github.com/bedilbek/onnx_models/tree/master/text/machine_comprehension/bidirectional_attention_flow\r\n```\r\nProcessing bidaf-9.onnx...\r\nUpdated LSTM node with name 'OptimizedRNNStack105580'. Optional graph input named LSTM_0_initial_h was added. Graph output named LSTM_0_Y_h was added\r\nUpdated LSTM node with name 'OptimizedRNNStack103980'. Optional graph input named LSTM_1_initial_h was added. Graph output named LSTM_1_Y_h was added\r\nUpdated LSTM node with name 'OptimizedRNNStack111910'. Optional graph input named LSTM_2_initial_h was added. Graph output named LSTM_2_Y_h was added\r\nUpdated LSTM node with name 'OptimizedRNNStack112030'. Optional graph input named LSTM_3_initial_h was added. Graph output named LSTM_3_Y_h was added\r\nUpdated LSTM node with name 'OptimizedRNNStack115740'. Optional graph input named LSTM_4_initial_h was added. Graph output named LSTM_4_Y_h was added\r\nWriting updated model to bidaf-9.updated.onnx\r\n```\r\n\r\nIf people test the script out and can validate it works I can make it more official.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1090111046/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1090114542",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11085#issuecomment-1090114542",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11085",
        "id": 1090114542,
        "node_id": "IC_kwDOCVq1mM5A-dPu",
        "user": {
            "login": "okankop",
            "id": 38323395,
            "node_id": "MDQ6VXNlcjM4MzIzMzk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/38323395?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/okankop",
            "html_url": "https://github.com/okankop",
            "followers_url": "https://api.github.com/users/okankop/followers",
            "following_url": "https://api.github.com/users/okankop/following{/other_user}",
            "gists_url": "https://api.github.com/users/okankop/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/okankop/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/okankop/subscriptions",
            "organizations_url": "https://api.github.com/users/okankop/orgs",
            "repos_url": "https://api.github.com/users/okankop/repos",
            "events_url": "https://api.github.com/users/okankop/events{/privacy}",
            "received_events_url": "https://api.github.com/users/okankop/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-06T10:34:31Z",
        "updated_at": "2022-04-06T10:34:31Z",
        "author_association": "NONE",
        "body": "@skottmckay Sure, I will test it and let you know the outcome. Thanks for your effort.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1090114542/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1090927687",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11085#issuecomment-1090927687",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11085",
        "id": 1090927687,
        "node_id": "IC_kwDOCVq1mM5BBjxH",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-06T23:37:47Z",
        "updated_at": "2022-04-06T23:37:47Z",
        "author_association": "MEMBER",
        "body": "There was a bug when creating an initializer with the default value as it didn't take into account the layout. That's fixed, and it now also handles an existing initializer providing the default value.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1090927687/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1093555748",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11085#issuecomment-1093555748",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11085",
        "id": 1093555748,
        "node_id": "IC_kwDOCVq1mM5BLlYk",
        "user": {
            "login": "okankop",
            "id": 38323395,
            "node_id": "MDQ6VXNlcjM4MzIzMzk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/38323395?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/okankop",
            "html_url": "https://github.com/okankop",
            "followers_url": "https://api.github.com/users/okankop/followers",
            "following_url": "https://api.github.com/users/okankop/following{/other_user}",
            "gists_url": "https://api.github.com/users/okankop/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/okankop/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/okankop/subscriptions",
            "organizations_url": "https://api.github.com/users/okankop/orgs",
            "repos_url": "https://api.github.com/users/okankop/repos",
            "events_url": "https://api.github.com/users/okankop/events{/privacy}",
            "received_events_url": "https://api.github.com/users/okankop/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-09T01:19:59Z",
        "updated_at": "2022-04-09T01:19:59Z",
        "author_association": "NONE",
        "body": "@skottmckay I have tried the code you have provided on my Onnx model exported from PyTorch. Let me share my observations:\r\n\r\n1. First of all, at the onnx exporting part, if I do not provide the initial_h in the inference (i.e. `Y, Y_H = self.rnn(input)` ), initial_h is neither in graph_inputs nor initializers. Therefore, your script does not do the binding part.\r\n2. In order to work around the issue above, I provided a fixed initial_h at the inference time, so that initial_h gets into the initializers list.\r\n3. Once I get the binding, I tried to run the model, but the hidden state in the RNN part is not updated as expected. So the output was corrupted.\r\n\r\nWhat I would really appreciate from you is to provide us how to do the binding for the dummy onnx model created by the script that I am sharing.\r\n[export_dummy.zip](https://github.com/microsoft/onnxruntime/files/8455990/export_dummy.zip)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1093555748/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1094127266",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11085#issuecomment-1094127266",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11085",
        "id": 1094127266,
        "node_id": "IC_kwDOCVq1mM5BNw6i",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-09T21:30:26Z",
        "updated_at": "2022-04-09T21:30:26Z",
        "author_association": "MEMBER",
        "body": "Can you share the output from when your ran the script on your model?\r\n\r\nAs there might be multiple RNN/LSTM/GRU nodes the script tries to use a unique name. This is where it adds an initial_h input to the node if one doesn't already exist:\r\n\r\nhttps://gist.github.com/skottmckay/ff23c03752dfb9873eb15888e5892c78#file-make_rnn_state_graph_input-py-L76-L84\r\n\r\n```python\r\n            if not initial_h:\r\n                # create name for new initial_h input and add to node. TODO: add checks to ensure new name is unique\r\n                initial_h = f'{node.op_type}_{rnn_idx}_initial_h'\r\n\r\n                # add any missing optional inputs so that we're guaranteed to have 6 or more inputs\r\n                while len(node.input) < 6:\r\n                    node.input.append('')\r\n\r\n                node.input[5] = initial_h\r\n```\r\n\r\nThis is where it adds the graph input\r\n\r\nhttps://gist.github.com/skottmckay/ff23c03752dfb9873eb15888e5892c78#file-make_rnn_state_graph_input-py-L112-L115\r\n```python\r\n            # add graph input. create matching ValueInfo based on the graph output\r\n            input_vi = copy.copy(output_vi)\r\n            input_vi.name = initial_h\r\n            m.graph.input.append(input_vi)\r\n```\r\n\r\nThis is where it adds the initializer\r\n\r\nhttps://gist.github.com/skottmckay/ff23c03752dfb9873eb15888e5892c78#file-make_rnn_state_graph_input-py-L122-L127\r\n```python\r\n            if initial_h not in initializers and batch_dim.HasField('dim_value'):\r\n                dims = [directions, batch_dim.dim_value, hidden_size] if layout == 0 \\\r\n                    else [batch_dim.dim_value, directions, hidden_size]\r\n                vals = [float(0)] * (batch_dim.dim_value * directions * hidden_size)\r\n                default_vals = onnx.helper.make_tensor(initial_h, output_vi.type.tensor_type.elem_type, dims, vals)\r\n                m.graph.initializer.append(default_vals)\r\n```\r\n\r\nIf you dump the onnx model to text you should see these things.\r\n\r\n```\r\nimport onnx\r\nmodel = 'model.onnx'\r\nm = onnx.load(model)\r\nwith open(model + '.txt', \"w\", encoding=\"utf-8\") as ofile:\r\n    ofile.write(onnx.helper.printable_graph(m.graph))\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1094127266/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1094514338",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11085#issuecomment-1094514338",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11085",
        "id": 1094514338,
        "node_id": "IC_kwDOCVq1mM5BPPai",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-11T03:49:44Z",
        "updated_at": "2022-04-11T03:49:44Z",
        "author_association": "MEMBER",
        "body": "Note: I updated the script to also handle the initial_c/Y_c input/output of RNN so the line numbers don't match the above. It still makes the state a graph output/input the same way though. Doesn't matter to your model as it has a GRU node. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1094514338/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1094560170",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11085#issuecomment-1094560170",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11085",
        "id": 1094560170,
        "node_id": "IC_kwDOCVq1mM5BPamq",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-11T05:14:28Z",
        "updated_at": "2022-04-11T05:15:49Z",
        "author_association": "MEMBER",
        "body": "The reason your dummy model can't be updated is that the input for initial_h is coming from another node. \r\n\r\n```\r\nProcessing model_dummy.onnx...\r\nSkipping GRU node with name 'GRU_9' as the initial_h input is provided by another node.\r\nModel was not updated.\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/979079/162669129-37c99e9c-189f-45a7-90eb-c02fb9c3db8f.png)\r\n\r\nLooks like the pytorch exporter is adding some logic to broadcast the initial state using the batch size, and this is used as the initial_h input. That means it's not a simple case of setting up graph outputs/inputs to pass state through, with an initializer directly providing the initial_h value.\r\n\r\nIt may be simpler to define the initial states as input of the model prior to export to onnx. I assume this is possible given the pytorch exporter output mentions doing so:\r\n\r\n```\r\nsite-packages\\torch\\onnx\\symbolic_opset9.py:2255: UserWarning: Exporting a model to ONNX with a batch_size other than 1, with a variable length with GRU can cause an error when running the ONNX model with a different batch size. Make sure to save the model with a batch size of 1, or define the initial states (h0/c0) as inputs of the model. or define the initial states (h0/c0) as inputs of the model. \")\r\n```\r\n\r\nI've added some more logic to the script to allow for the initial state input to come from an initializer being broadcast via an Expand node. The graph input needs to match the name of the initializer that is the input to the Expand node. The graph input can have a different shape though.\r\n\r\ne.g. say the input to the Expand node is an initializer called 'x' with shape {1, 1, 128} containing the default value. it is broadcast to the batch size by the Expand node at runtime.\r\n\r\nif you want to pass in the state, the graph input will also be called 'x' but should contain entries for all items in the batch. say the batch size is 3, the shape of the input provided would be {1, 3, 128}. as that will match the output shape of the Expand node, it doesn't have anything it needs to expand. \r\n\r\nWith those changes I can execute the dummy model and pass in the state via an input called 'onnx::Expand_5'\r\n\r\n```python\r\nimport numpy as np\r\nimport onnxruntime as ort\r\n\r\nso = ort.SessionOptions()\r\ns0 = ort.InferenceSession('model_dummy.onnx', so, providers=['CPUExecutionProvider'])\r\ns1 = ort.InferenceSession('model_dummy.updated.onnx', so, providers=['CPUExecutionProvider'])\r\n\r\n# Run the models using the same input to prove they produce the same output\r\ni = np.random.random(size=[1, 1, 128]).astype(np.float32)\r\ninitial_h = np.zeros([1, 1, 128]).astype(np.float32)\r\n\r\ninputs0 = {'inputs': i}\r\n\r\n# run orig and new model the current way\r\noutputs0 = s0.run(['outputs'], inputs0)\r\noutputs1 = s1.run(['outputs'], inputs0)\r\nassert(np.all(outputs0[0] == outputs1[0]))\r\n\r\n# run new version with initial state passed in with default value\r\ninputs1 = {'inputs': i, 'onnx::Expand_5': initial_h}\r\noutputs2 = s1.run(['outputs', '74'], inputs1)\r\nassert(np.all(outputs0[0] == outputs2[0]))\r\n\r\n# now run with state passed from previous output passed in\r\ninputs2 = {'inputs': i, 'onnx::Expand_5': outputs2[1]}\r\noutput2 = s1.run(['outputs'], inputs2)\r\n\r\n# print(output2[0])\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1094560170/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1097279204",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11085#issuecomment-1097279204",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11085",
        "id": 1097279204,
        "node_id": "IC_kwDOCVq1mM5BZybk",
        "user": {
            "login": "okankop",
            "id": 38323395,
            "node_id": "MDQ6VXNlcjM4MzIzMzk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/38323395?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/okankop",
            "html_url": "https://github.com/okankop",
            "followers_url": "https://api.github.com/users/okankop/followers",
            "following_url": "https://api.github.com/users/okankop/following{/other_user}",
            "gists_url": "https://api.github.com/users/okankop/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/okankop/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/okankop/subscriptions",
            "organizations_url": "https://api.github.com/users/okankop/orgs",
            "repos_url": "https://api.github.com/users/okankop/repos",
            "events_url": "https://api.github.com/users/okankop/events{/privacy}",
            "received_events_url": "https://api.github.com/users/okankop/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-12T22:11:25Z",
        "updated_at": "2022-04-12T22:12:03Z",
        "author_association": "NONE",
        "body": "Thank you very much @skottmckay. Your guide is super useful and I have reproduced all your steps. In my trained model, I even got the desired outputs with the modified onnx model. However, in order to get the desired output, I have to provide the previously created hidden state vector as a second input to the inference run as you did in the above example:\r\n\r\n`inputs2 = {'inputs': i, 'onnx::Expand_5': outputs2[1]}`\r\n`output2 = s1.run(['outputs'], inputs2)`\r\n\r\nThis being said, what I want to achieve is to provide only RNN input to the model, and the hidden state is automatically updated within the model. So that, when I call the inference the second time, the model uses the previously created hidden state in the RNN. I do not want to carry the hidden state of RNN back and forth at each inference time. Is it possible to achieve this?\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1097279204/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1097282540",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11085#issuecomment-1097282540",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11085",
        "id": 1097282540,
        "node_id": "IC_kwDOCVq1mM5BZzPs",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-12T22:16:08Z",
        "updated_at": "2022-04-12T22:16:08Z",
        "author_association": "MEMBER",
        "body": "Not currently. ORT is intentionally stateless so it can be called concurrently. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1097282540/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1097313544",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11085#issuecomment-1097313544",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11085",
        "id": 1097313544,
        "node_id": "IC_kwDOCVq1mM5BZ60I",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-12T22:54:11Z",
        "updated_at": "2022-04-12T22:54:11Z",
        "author_association": "MEMBER",
        "body": "FWIW I have another script that can wrap all the state variables into a single opaque Sequence<Tensor> value. More convenient as the number of state variables grows. Slight perf cost with some extra copies to pack/unpack that opaque value. \r\n\r\nhttps://gist.github.com/skottmckay/f9df4e2bdb526ca3895340de7a8dff86\r\n\r\nExample usage for test model with 2 LSTM state variables:\r\n\r\n```python\r\n# with individual state vars\r\ninputs = {'input': i0}\r\noutput1 = s1.run(['output', 'LSTM_0_Y_h', 'LSTM_0_Y_c'], inputs)\r\ninputs = {'input': i1, 'LSTM_0_initial_h': output1[1], 'LSTM_0_initial_c': output1[2]}\r\n...\r\n```\r\n\r\n```python\r\n# with aggregated state var\r\ninputs2 = {'input': i0, 'internal_state_in': []}  # internal_state_in is array for empty Sequence<Tensor>\r\noutput2 = s2.run(['output', 'internal_state_out'], inputs2)\r\ninputs2_with_state = {'input': i1, 'internal_state_in': output2[1]}\r\n...\r\n```\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1097313544/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1097935220",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11085#issuecomment-1097935220",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11085",
        "id": 1097935220,
        "node_id": "IC_kwDOCVq1mM5BcSl0",
        "user": {
            "login": "okankop",
            "id": 38323395,
            "node_id": "MDQ6VXNlcjM4MzIzMzk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/38323395?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/okankop",
            "html_url": "https://github.com/okankop",
            "followers_url": "https://api.github.com/users/okankop/followers",
            "following_url": "https://api.github.com/users/okankop/following{/other_user}",
            "gists_url": "https://api.github.com/users/okankop/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/okankop/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/okankop/subscriptions",
            "organizations_url": "https://api.github.com/users/okankop/orgs",
            "repos_url": "https://api.github.com/users/okankop/repos",
            "events_url": "https://api.github.com/users/okankop/events{/privacy}",
            "received_events_url": "https://api.github.com/users/okankop/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-13T11:24:42Z",
        "updated_at": "2022-04-13T11:24:42Z",
        "author_association": "NONE",
        "body": "Thank you very much @skottmckay I am closing the issue since I got all my answers. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1097935220/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]