[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1106747679",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11313#issuecomment-1106747679",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11313",
        "id": 1106747679,
        "node_id": "IC_kwDOCVq1mM5B96Ef",
        "user": {
            "login": "yufenglee",
            "id": 30486710,
            "node_id": "MDQ6VXNlcjMwNDg2NzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30486710?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yufenglee",
            "html_url": "https://github.com/yufenglee",
            "followers_url": "https://api.github.com/users/yufenglee/followers",
            "following_url": "https://api.github.com/users/yufenglee/following{/other_user}",
            "gists_url": "https://api.github.com/users/yufenglee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yufenglee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yufenglee/subscriptions",
            "organizations_url": "https://api.github.com/users/yufenglee/orgs",
            "repos_url": "https://api.github.com/users/yufenglee/repos",
            "events_url": "https://api.github.com/users/yufenglee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yufenglee/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-22T18:11:27Z",
        "updated_at": "2022-04-22T18:19:18Z",
        "author_association": "MEMBER",
        "body": "Which version are you using? I cannot repro it with 1.11 and master with script like below: \r\n\r\n```\r\nimport numpy as np\r\nfrom onnx import helper, TensorProto, numpy_helper, save\r\nfrom onnxruntime.quantization import quantize_static, QuantFormat, CalibrationDataReader\r\n\r\nclass TestDataFeeds(CalibrationDataReader):\r\n    def __init__(self, data_feeds):\r\n        '''\r\n        parameter data_feeds: list of input feed, each input feed is diction of {input_name: np_array}\r\n        '''\r\n        self.data_feeds = data_feeds\r\n        self.iter_next = iter(self.data_feeds)\r\n\r\n    def get_next(self):\r\n        return next(self.iter_next, None)\r\n\r\n    def rewind(self):\r\n        self.iter_next = iter(self.data_feeds)\r\n\r\n\r\ndef InputFeedsNegOneZeroOne(n, name2shape, is_input_int64):\r\n    '''\r\n    randomize n feed according to shape, its values are from -1, 0, and 1\r\n    '''\r\n    input_data_list = []\r\n    for i in range(n):\r\n        inputs = {}\r\n        for name, shape in name2shape.items():\r\n            inputs.update({name: np.random.randint(-1, 2, shape).astype(np.int64 if is_input_int64 else np.float32)})\r\n        input_data_list.extend([inputs])\r\n    dr = TestDataFeeds(input_data_list)\r\n    return dr\r\n\r\nclass TestONNXModel:\r\n    def construct_model(self, model_path, is_input_int64):\r\n        input = helper.make_tensor_value_info('input', TensorProto.INT64 if is_input_int64 else TensorProto.FLOAT, [1, 3, 15, 15])\r\n        output = helper.make_tensor_value_info('output', TensorProto.INT64 if is_input_int64 else TensorProto.FLOAT, [1, 13, 15, 15])\r\n\r\n        # Conv1 output [1, 2, 13, 13]\r\n        concat_weight_0 = numpy_helper.from_array(\r\n            np.random.randint(-100, 200, [1, 5, 15, 15]).astype(np.int64 if is_input_int64 else np.float32), name='concat_weight_0')\r\n\r\n        concat_weight_1 = numpy_helper.from_array(\r\n            np.random.randint(-100, 200, [1, 5, 15, 15]).astype(np.int64 if is_input_int64 else np.float32), name='concat_weight_1')\r\n\r\n        initializers = [concat_weight_0, concat_weight_1]\r\n\r\n        concat_node = helper.make_node('Concat', ['input', 'concat_weight_0', 'concat_weight_1'], [\r\n                                            'output'], name='concat_node', axis=1)\r\n\r\n        graph = helper.make_graph([concat_node],\r\n                                  'qlinear_concat_op_test', [input], [output], initializer=initializers)\r\n        model = helper.make_model(graph, opset_imports=[helper.make_opsetid(\"\", 13)])\r\n        save(model, model_path)\r\n\r\n    def test_quantize_concat(self, is_input_int64):\r\n        np.random.seed(1)\r\n\r\n        suffix = '.int64.onnx' if is_input_int64 else '.float32.onnx'\r\n        model_fp32_path = 'concat' + suffix\r\n        model_int8_path = 'concat_quant' + suffix\r\n        model_int8_qdq_path = 'concat_quant_qdq' + suffix\r\n\r\n        self.construct_model(model_fp32_path, is_input_int64)\r\n\r\n        # Verify QOperator mode\r\n        data_reader = InputFeedsNegOneZeroOne(1, {'input': [1, 3, 15, 15]}, is_input_int64)\r\n        quantize_static(model_fp32_path, model_int8_path, data_reader, quant_format=QuantFormat.QOperator)\r\n\r\n        # Verify QDQ mode\r\n        data_reader.rewind()\r\n        quantize_static(model_fp32_path, model_int8_qdq_path, data_reader)\r\n\r\n\r\nTestONNXModel().test_quantize_concat(True)\r\nTestONNXModel().test_quantize_concat(False)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1106747679/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1146764593",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11313#issuecomment-1146764593",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11313",
        "id": 1146764593,
        "node_id": "IC_kwDOCVq1mM5EWj0x",
        "user": {
            "login": "NeonBohdan",
            "id": 96498856,
            "node_id": "U_kgDOBcB0qA",
            "avatar_url": "https://avatars.githubusercontent.com/u/96498856?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NeonBohdan",
            "html_url": "https://github.com/NeonBohdan",
            "followers_url": "https://api.github.com/users/NeonBohdan/followers",
            "following_url": "https://api.github.com/users/NeonBohdan/following{/other_user}",
            "gists_url": "https://api.github.com/users/NeonBohdan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NeonBohdan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NeonBohdan/subscriptions",
            "organizations_url": "https://api.github.com/users/NeonBohdan/orgs",
            "repos_url": "https://api.github.com/users/NeonBohdan/repos",
            "events_url": "https://api.github.com/users/NeonBohdan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NeonBohdan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-05T08:31:10Z",
        "updated_at": "2022-06-05T08:31:10Z",
        "author_association": "NONE",
        "body": "The same, error fixed by switching onnxruntime 1.10->1.11",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1146764593/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]