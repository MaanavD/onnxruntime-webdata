[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1170909479",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11994#issuecomment-1170909479",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11994",
        "id": 1170909479,
        "node_id": "IC_kwDOCVq1mM5Fyqkn",
        "user": {
            "login": "fefe982",
            "id": 3244578,
            "node_id": "MDQ6VXNlcjMyNDQ1Nzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3244578?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fefe982",
            "html_url": "https://github.com/fefe982",
            "followers_url": "https://api.github.com/users/fefe982/followers",
            "following_url": "https://api.github.com/users/fefe982/following{/other_user}",
            "gists_url": "https://api.github.com/users/fefe982/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fefe982/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fefe982/subscriptions",
            "organizations_url": "https://api.github.com/users/fefe982/orgs",
            "repos_url": "https://api.github.com/users/fefe982/repos",
            "events_url": "https://api.github.com/users/fefe982/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fefe982/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-30T08:14:29Z",
        "updated_at": "2022-06-30T08:14:29Z",
        "author_association": "NONE",
        "body": "May be caused by the `RemoveDuplicateCastTransformer` called at the end of `InsertCastTransformer::ApplyImpl`, which is called by  `InferenceSession::TransformGraph`.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1170909479/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1172928280",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11994#issuecomment-1172928280",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11994",
        "id": 1172928280,
        "node_id": "IC_kwDOCVq1mM5F6XcY",
        "user": {
            "login": "lazycal",
            "id": 7333325,
            "node_id": "MDQ6VXNlcjczMzMzMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7333325?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lazycal",
            "html_url": "https://github.com/lazycal",
            "followers_url": "https://api.github.com/users/lazycal/followers",
            "following_url": "https://api.github.com/users/lazycal/following{/other_user}",
            "gists_url": "https://api.github.com/users/lazycal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lazycal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lazycal/subscriptions",
            "organizations_url": "https://api.github.com/users/lazycal/orgs",
            "repos_url": "https://api.github.com/users/lazycal/repos",
            "events_url": "https://api.github.com/users/lazycal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lazycal/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-07-02T16:59:54Z",
        "updated_at": "2022-07-02T16:59:54Z",
        "author_association": "NONE",
        "body": "Thanks @fefe982 for the datapoint. That does sound probable. I read the code and I guess ORT considers my case as high->low->lower precision so it removes the first cast?\r\nhttps://github.com/microsoft/onnxruntime/blob/df712d80ca33b56ce7d63ca3acdb6a4888638c58/onnxruntime/core/optimizer/insert_cast_transformer.cc#L223-L226\r\nSo maybe having a better function to determine if this is a loss of precision can solve this problem? The current way does not make sense to me:\r\nhttps://github.com/microsoft/onnxruntime/blob/df712d80ca33b56ce7d63ca3acdb6a4888638c58/onnxruntime/core/optimizer/insert_cast_transformer.cc#L241-L243\r\nAnd these are the type group:\r\nhttps://github.com/microsoft/onnxruntime/blob/df712d80ca33b56ce7d63ca3acdb6a4888638c58/onnxruntime/core/optimizer/insert_cast_transformer.cc#L171-L176\r\nIt does not account for float64->float32 kind of things, and it loses precision when casting int32 to float32 but is considered not here.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1172928280/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]