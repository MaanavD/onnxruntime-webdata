[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1182785080",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/12145#issuecomment-1182785080",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/12145",
        "id": 1182785080,
        "node_id": "IC_kwDOCVq1mM5Gf944",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-07-13T05:34:38Z",
        "updated_at": "2022-07-13T05:34:38Z",
        "author_association": "MEMBER",
        "body": "If a thread pool is not fixed sized, NumThreads  makes no sense.\r\nCurrentThreadId  is also very tricky. Linux even does not want to expose such a function, then why do we? The value returned from CurrentThreadId() has no real use except being used for logging/debugging. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1182785080/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1183419235",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/12145#issuecomment-1183419235",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/12145",
        "id": 1183419235,
        "node_id": "IC_kwDOCVq1mM5GiYtj",
        "user": {
            "login": "eralmual",
            "id": 22269643,
            "node_id": "MDQ6VXNlcjIyMjY5NjQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/22269643?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eralmual",
            "html_url": "https://github.com/eralmual",
            "followers_url": "https://api.github.com/users/eralmual/followers",
            "following_url": "https://api.github.com/users/eralmual/following{/other_user}",
            "gists_url": "https://api.github.com/users/eralmual/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eralmual/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eralmual/subscriptions",
            "organizations_url": "https://api.github.com/users/eralmual/orgs",
            "repos_url": "https://api.github.com/users/eralmual/repos",
            "events_url": "https://api.github.com/users/eralmual/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eralmual/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-07-13T16:14:58Z",
        "updated_at": "2022-07-13T16:23:46Z",
        "author_association": "CONTRIBUTOR",
        "body": "We would like to use the same threadpool as the default provider, as far as I know this threadpool has a fixed number of threads but can be changed (By using the inference session set intra op threads) at points where we cant access with our ep code, we would like to be aware of this changes by calling _NumThreads()_ directly, if we can't access this function the number of threads could be reduced without our ep being aware and cause errors.\r\nAbout _CurrentThreadId()_, I understand Linux not exposing that information, but other machine learning frameworks like [Tensorflow (over here)](https://github.com/tensorflow/tensorflow/blob/5dcfc51118817f27fad5246812d83e5dccdc5f72/tensorflow/core/platform/threadpool.h#L211) and Pytorch (The thread id is a bit harder to get but is still available) expose both functions. Even the the [NonBlockingThreadPool.h](https://gitlab.com/libeigen/eigen/-/blob/master/unsupported/Eigen/CXX11/src/ThreadPool/NonBlockingThreadPool.h#L157), the base for the ORT threadpool exposes this values.\r\n\r\nBeing able to access this values would allow for better integration between ep's and the default provider since there is no way to customize it's threadpool (at least that I'm aware of, please correct me if I'm wrong). And at least in our case it's needed since those functions are required to interface ORT threadpool with oneDNN.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1183419235/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]