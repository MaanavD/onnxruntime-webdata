[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/507834173",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1331#issuecomment-507834173",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1331",
        "id": 507834173,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwNzgzNDE3Mw==",
        "user": {
            "login": "yuslepukhin",
            "id": 11303988,
            "node_id": "MDQ6VXNlcjExMzAzOTg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11303988?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yuslepukhin",
            "html_url": "https://github.com/yuslepukhin",
            "followers_url": "https://api.github.com/users/yuslepukhin/followers",
            "following_url": "https://api.github.com/users/yuslepukhin/following{/other_user}",
            "gists_url": "https://api.github.com/users/yuslepukhin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yuslepukhin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yuslepukhin/subscriptions",
            "organizations_url": "https://api.github.com/users/yuslepukhin/orgs",
            "repos_url": "https://api.github.com/users/yuslepukhin/repos",
            "events_url": "https://api.github.com/users/yuslepukhin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yuslepukhin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-07-02T20:34:00Z",
        "updated_at": "2019-07-02T20:34:00Z",
        "author_association": "MEMBER",
        "body": "@xadupre The python version worries me a bit. My tests did not often worked until I downgraded it to 3.6.7.\r\n\r\nWhat's pandas version?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/507834173/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/507843011",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1331#issuecomment-507843011",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1331",
        "id": 507843011,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwNzg0MzAxMQ==",
        "user": {
            "login": "yuslepukhin",
            "id": 11303988,
            "node_id": "MDQ6VXNlcjExMzAzOTg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11303988?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yuslepukhin",
            "html_url": "https://github.com/yuslepukhin",
            "followers_url": "https://api.github.com/users/yuslepukhin/followers",
            "following_url": "https://api.github.com/users/yuslepukhin/following{/other_user}",
            "gists_url": "https://api.github.com/users/yuslepukhin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yuslepukhin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yuslepukhin/subscriptions",
            "organizations_url": "https://api.github.com/users/yuslepukhin/orgs",
            "repos_url": "https://api.github.com/users/yuslepukhin/repos",
            "events_url": "https://api.github.com/users/yuslepukhin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yuslepukhin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-07-02T21:01:31Z",
        "updated_at": "2019-07-02T21:02:10Z",
        "author_association": "MEMBER",
        "body": "Yes, I have a repro in a debug build. It is enough to disable the arenas which incidentally helps with debugging as well.\r\n\r\n![image](https://user-images.githubusercontent.com/11303988/60546315-e3798280-9cd1-11e9-8924-fb7b335768dc.png)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/507843011/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/508313268",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1331#issuecomment-508313268",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1331",
        "id": 508313268,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwODMxMzI2OA==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-07-04T02:18:45Z",
        "updated_at": "2019-07-04T02:18:45Z",
        "author_association": "MEMBER",
        "body": "I believe your model is bad. \r\n\r\nBoth the Scan nodes in the model have 2 outputs, and the output shape for both outputs in both Scan nodes is {'None', 'None'}. The problem is that 'None' is not a special name in ONNX and is treated as a variable name, which equates to the model saying all 4 outputs have exactly the same shape, and not to all 4 having unknown shapes. \r\n\r\nPlease see https://github.com/onnx/onnx/blob/master/docs/IR.md#tensor-shapes\r\n\r\nThat leads to the allocation planner thinking that it can re-use the output buffers from the first Scan node when running the second Scan node. The buffer sizes don't match, and we lack a sanity check at runtime to detect that.\r\n\r\nDebugger output showing the dim_value instances for one of the Scan nodes.\r\n```\r\n-- | -- | -- | --\r\n▶ | *pnode | {index_=13 name_=\"Scan\" op_type_=\"Scan\" ...} | const onnxruntime::Node\r\n▶ | ((*pnode).definitions_.output_defs[0])->node_arg_info_.type_->value_.tensor_type_->shape().dim().Get(0).dim_param() | \"None\" | \r\n▶ | ((*pnode).definitions_.output_defs[0])->node_arg_info_.type_->value_.tensor_type_->shape().dim().Get(1).dim_param() | \"None\" | \r\n▶ | ((*pnode).definitions_.output_defs[1])->node_arg_info_.type_->value_.tensor_type_->shape().dim().Get(0).dim_param() | \"None\" | \r\n▶ | ((*pnode).definitions_.output_defs[1])->node_arg_info_.type_->value_.tensor_type_->shape().dim().Get(1).dim_param() | \"None\" | \r\n```\r\n\r\nWe can add a check at runtime when re-using a buffer to detect a size mismatch. \r\n\r\n@gramalingam should the allocation planner also special case an empty string and an '*' in a dim_param in SameShape()? Currently the check involving dim_param values doesn't take into account those special cases\r\n      `if (val1.has_dim_param() && val2.has_dim_param() && (val1.dim_param() == val2.dim_param()))`\r\n\r\n\r\nTo fix the model I would suggest removing the shape info from the Scan node outputs completely. I believe if you do that it can be inferred at runtime (i.e. has_shape() for the TensorProto should return false).",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/508313268/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/508350270",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1331#issuecomment-508350270",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1331",
        "id": 508350270,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwODM1MDI3MA==",
        "user": {
            "login": "xadupre",
            "id": 22452781,
            "node_id": "MDQ6VXNlcjIyNDUyNzgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22452781?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xadupre",
            "html_url": "https://github.com/xadupre",
            "followers_url": "https://api.github.com/users/xadupre/followers",
            "following_url": "https://api.github.com/users/xadupre/following{/other_user}",
            "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions",
            "organizations_url": "https://api.github.com/users/xadupre/orgs",
            "repos_url": "https://api.github.com/users/xadupre/repos",
            "events_url": "https://api.github.com/users/xadupre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xadupre/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-07-04T06:02:18Z",
        "updated_at": "2019-07-04T06:02:18Z",
        "author_association": "MEMBER",
        "body": "Ok I see. I did not about the variables for shapes. I'll try to find the proper values. I faced other issues when leaving the values empty but I don't remember which ones. I was confused by the fact the same graph was working with less nodes so it did not seem related to the way I defined nodes. The allocation planner should be able to detect this kind of inconsistencies? From what you say, I guess using variables instead of * or empty shape may help the allocation planner and make the model faster but it is unclear why. onnx has a function onnx_checker which checks the consistency of a model. Maybe onnxruntime could have a similar function instead of looking for shape mismatch at every prediction call.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/508350270/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/508448465",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1331#issuecomment-508448465",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1331",
        "id": 508448465,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwODQ0ODQ2NQ==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-07-04T11:27:21Z",
        "updated_at": "2019-07-04T11:27:21Z",
        "author_association": "MEMBER",
        "body": "I found out today that being able to use '*' or an empty string for dim_param was accidentally added to the ONNX spec and that text is slated for removal in a pending PR, so having no shape information would be best. Alternatively you could use a unique string in the dim_param for each unknown value instead of using 'None' in multiple places.\r\n\r\nAs the dim_param is essentially a variable name, I'm not sure what the allocation planner can do if the model incorrectly uses the variable name in multiple places. I will however add something to fail a prediction call if there's a mismatch.\r\n\r\nThere should be no significant difference to execution speed though. Not having a value just means the allocation planner will not incorrectly think two output shapes are equal and attempt to re-use a buffer for them. At worst there may be some extra allocations. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/508448465/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/508702136",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1331#issuecomment-508702136",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1331",
        "id": 508702136,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwODcwMjEzNg==",
        "user": {
            "login": "xadupre",
            "id": 22452781,
            "node_id": "MDQ6VXNlcjIyNDUyNzgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22452781?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xadupre",
            "html_url": "https://github.com/xadupre",
            "followers_url": "https://api.github.com/users/xadupre/followers",
            "following_url": "https://api.github.com/users/xadupre/following{/other_user}",
            "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions",
            "organizations_url": "https://api.github.com/users/xadupre/orgs",
            "repos_url": "https://api.github.com/users/xadupre/repos",
            "events_url": "https://api.github.com/users/xadupre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xadupre/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-07-05T09:48:58Z",
        "updated_at": "2019-07-05T09:48:58Z",
        "author_association": "MEMBER",
        "body": "I chose empty shapes. It works but I think it would better with some error messages. I'll close the issue.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/508702136/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]