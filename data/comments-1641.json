[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/523589937",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1641#issuecomment-523589937",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1641",
        "id": 523589937,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzU4OTkzNw==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-21T18:23:20Z",
        "updated_at": "2019-08-21T18:23:20Z",
        "author_association": "MEMBER",
        "body": "Hi @fdwr,\r\n\r\nIf my understanding is correct, yes, a 2D tensor needn't have to be wrapped in a 4D tensor to have to invoke \"bilinear\" resizing. But it is  hard to make a general statement like \"the validation code should just treat the squeezed dimensions all the same: [1,1,m,n]\". It is conditioned upon the corresponding \"scales\" value as well. Only if the corresponding \"scales\" value is 1.0, we may amount it to \"bilinear\" resizing. In fact, there is no pure N-D case (N != 2) that should invoke \"bilinear\" interpolation. It may \"boil down\" to bilinear if every dimension except the innermost 2 dimensions have scale values 1.0. This is what we seem to currently support (NCHW input with scales_n = 1.0 and scales_c = 1.0). \r\n\r\nDoes this seem correct ?\r\n  ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/523589937/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/523668529",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1641#issuecomment-523668529",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1641",
        "id": 523668529,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzY2ODUyOQ==",
        "user": {
            "login": "fdwr",
            "id": 1809166,
            "node_id": "MDQ6VXNlcjE4MDkxNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1809166?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fdwr",
            "html_url": "https://github.com/fdwr",
            "followers_url": "https://api.github.com/users/fdwr/followers",
            "following_url": "https://api.github.com/users/fdwr/following{/other_user}",
            "gists_url": "https://api.github.com/users/fdwr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fdwr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fdwr/subscriptions",
            "organizations_url": "https://api.github.com/users/fdwr/orgs",
            "repos_url": "https://api.github.com/users/fdwr/repos",
            "events_url": "https://api.github.com/users/fdwr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fdwr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-21T22:08:40Z",
        "updated_at": "2019-08-21T22:09:50Z",
        "author_association": "MEMBER",
        "body": "> Does this seem correct ?\r\n\r\n@hariharans29 : Yep, you are correct Hari that the corresponding scales also should be a nop. We have such logic in WinML for the GPU case that checks whether the leading scales are 1's and selects a faster shader of pure bilinear resampling if it only affects the last channels, since it's faster than quadrilinear sampling and returns identical results anyway.\r\n\r\nGiven a 4D tensor, for a specific output element, we read 16 samples and compute the interpolation fractions along each dimension:\r\n\r\n    // INTERPOLATED_DIMENSION_COUNT >= 4\r\n    samples[0] = lerp(samples[0], samples[ 8], inputCoordinateFractions[0]);\r\n    samples[1] = lerp(samples[1], samples[ 9], inputCoordinateFractions[0]);\r\n    samples[2] = lerp(samples[2], samples[10], inputCoordinateFractions[0]);\r\n    samples[3] = lerp(samples[3], samples[11], inputCoordinateFractions[0]);\r\n    samples[4] = lerp(samples[4], samples[12], inputCoordinateFractions[0]);\r\n    samples[5] = lerp(samples[5], samples[13], inputCoordinateFractions[0]);\r\n    samples[6] = lerp(samples[6], samples[14], inputCoordinateFractions[0]);\r\n    samples[7] = lerp(samples[7], samples[15], inputCoordinateFractions[0]);\r\n\r\n    // INTERPOLATED_DIMENSION_COUNT >= 3\r\n    samples[0] = lerp(samples[0], samples[4], inputCoordinateFractions[1]);\r\n    samples[1] = lerp(samples[1], samples[5], inputCoordinateFractions[1]);\r\n    samples[2] = lerp(samples[2], samples[6], inputCoordinateFractions[1]);\r\n    samples[3] = lerp(samples[3], samples[7], inputCoordinateFractions[1]);\r\n\r\n    // INTERPOLATED_DIMENSION_COUNT >= 2\r\n    samples[0] = lerp(samples[0], samples[2], inputCoordinateFractions[2]);\r\n    samples[1] = lerp(samples[1], samples[3], inputCoordinateFractions[2]);\r\n\r\n    outputValue = lerp(samples[0], samples[1], inputCoordinateFractions[3]);\r\n\r\nWhen the first 2 scales are 1 (meaning the fractions are either fully 0 or 1), then all those equations disappear, leaving just:\r\n\r\n    // INTERPOLATED_DIMENSION_COUNT >= 2\r\n    samples[0] = lerp(samples[0], samples[2], inputCoordinateFractions[2]);\r\n    samples[1] = lerp(samples[1], samples[3], inputCoordinateFractions[2]);\r\n\r\n    outputValue = lerp(samples[0], samples[1], inputCoordinateFractions[3]);\r\n\r\n...which is the bilinear logic that ORT supports currently.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/523668529/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/524501273",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1641#issuecomment-524501273",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1641",
        "id": 524501273,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDUwMTI3Mw==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-24T00:48:05Z",
        "updated_at": "2019-08-24T00:48:05Z",
        "author_association": "MEMBER",
        "body": "Hi @fdwr,\r\n\r\nThe open PR should be address your major concern - Pure 2D inputs will now be supported for the 'bilinear' case. It still supports the case of a 4D input boiling down to a 'bilinear' case (with outermost 2 scales being 1), but it stops short of adding support for the may other special N-D cases that boil down to a 'bilinear' case. So it should be a conservative middle-ground.\r\n\r\nThanks! ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/524501273/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/526035850",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1641#issuecomment-526035850",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1641",
        "id": 526035850,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjAzNTg1MA==",
        "user": {
            "login": "cjt222",
            "id": 17508662,
            "node_id": "MDQ6VXNlcjE3NTA4NjYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/17508662?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cjt222",
            "html_url": "https://github.com/cjt222",
            "followers_url": "https://api.github.com/users/cjt222/followers",
            "following_url": "https://api.github.com/users/cjt222/following{/other_user}",
            "gists_url": "https://api.github.com/users/cjt222/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cjt222/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cjt222/subscriptions",
            "organizations_url": "https://api.github.com/users/cjt222/orgs",
            "repos_url": "https://api.github.com/users/cjt222/repos",
            "events_url": "https://api.github.com/users/cjt222/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cjt222/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-29T05:56:24Z",
        "updated_at": "2019-08-29T06:03:42Z",
        "author_association": "NONE",
        "body": "hi @hariharans29   i meet a problem when i use resize op, could you help me?\r\nrefer to issue reported in ONNX onnx/onnx#2267.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/526035850/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]