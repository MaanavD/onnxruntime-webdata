[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/556490389",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/2435#issuecomment-556490389",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/2435",
        "id": 556490389,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjQ5MDM4OQ==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-11-20T22:32:30Z",
        "updated_at": "2019-11-20T22:32:30Z",
        "author_association": "MEMBER",
        "body": "How are you measuring performance? Is there a warmup request or not? How many times are you calling Run to determine the average?\r\n\r\nAre you using a Debug (the default when building from source) or Release (--config Release) build?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/556490389/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/556792286",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/2435#issuecomment-556792286",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/2435",
        "id": 556792286,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1Njc5MjI4Ng==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-11-21T01:36:39Z",
        "updated_at": "2019-11-21T01:49:06Z",
        "author_association": "MEMBER",
        "body": "The implementation of Transpose needs to handle any re-ordering of the axes, and any number of axes. Your implementation is highly optimized for one specific use case where you can simply do forward iteration of the input and directly write to a fixed number of output locations.\r\n\r\nThe generic handling requires calculating the input offset for every write by calling both ComputeOffset and IncrementIndex. That's massively more expensive than the two pointer increments per write in your implementation. \r\n\r\nhttps://github.com/microsoft/onnxruntime/blob/6bcf95477eca78e283a1282f545bcc4c34e4e82c/onnxruntime/core/providers/cpu/tensor/transpose.cc#L17-L33\r\n\r\nThe Transpose implementation is optimized if larger blocks can be moved at a time, but in this case as the last axis is moving the block size is 1. \r\n\r\nA specialized Transpose implementation could possibly be added for handling NHWC -> NCHW transpose operations, but alternatively the ONNX model could be completely NCHW based (as that's the layout ONNX supports) and a more optimal transpose could be done in pre-processing.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/556792286/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/556946165",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/2435#issuecomment-556946165",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/2435",
        "id": 556946165,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1Njk0NjE2NQ==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-11-21T06:50:44Z",
        "updated_at": "2019-11-21T06:50:44Z",
        "author_association": "MEMBER",
        "body": "FWIW a quickly hacked up optimization for when the last axis is moving forward makes it ~5x faster (release build, uint8_t input of shape {1, 1024, 1024, 3}). Could probably generalize the optimization further to handle when a single axis moves either forward or backwards, but there are pros/cons/risks to be considered.\r\n\r\ne.g. if the axis being moved is of size 1024 do you really want 1024 pointers to write locations being used concurrently?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/556946165/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/557581455",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/2435#issuecomment-557581455",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/2435",
        "id": 557581455,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzU4MTQ1NQ==",
        "user": {
            "login": "mika-fischer",
            "id": 426158,
            "node_id": "MDQ6VXNlcjQyNjE1OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/426158?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mika-fischer",
            "html_url": "https://github.com/mika-fischer",
            "followers_url": "https://api.github.com/users/mika-fischer/followers",
            "following_url": "https://api.github.com/users/mika-fischer/following{/other_user}",
            "gists_url": "https://api.github.com/users/mika-fischer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mika-fischer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mika-fischer/subscriptions",
            "organizations_url": "https://api.github.com/users/mika-fischer/orgs",
            "repos_url": "https://api.github.com/users/mika-fischer/repos",
            "events_url": "https://api.github.com/users/mika-fischer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mika-fischer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-11-22T15:39:51Z",
        "updated_at": "2019-11-22T15:39:51Z",
        "author_association": "CONTRIBUTOR",
        "body": "> How are you measuring performance?\r\n\r\nRunning the graph several times, and measuring the wall clock time.\r\n\r\n> Is there a warmup request or not?\r\n\r\nYes\r\n\r\n> How many times are you calling Run to determine the average?\r\n\r\nI'm using 2 runs for warmup and then 100 runs to measure.\r\n\r\n> Are you using a Debug (the default when building from source) or Release (--config Release) build?\r\n\r\nRelease\r\n\r\n> The implementation of Transpose needs to handle any re-ordering of the axes, and any number of axes. Your implementation is highly optimized for one specific use case where you can simply do forward iteration of the input and directly write to a fixed number of output locations.\r\n\r\nSure, I get that this is not trivial. But still, I think NCHW -> NHWC and the reverse deserve some special treatment (IIRC tf2onnx builds these into the graph by default, or at least used to).\r\n\r\nAnd for the generic case, it might make sense to have a look at how numpy or Eigen do this. Presumably a lot of thought has gone into their implementations.\r\n\r\n> The generic handling requires calculating the input offset for every write by calling both ComputeOffset and IncrementIndex. That's massively more expensive than the two pointer increments per write in your implementation.\r\n\r\nI wouldn't agree that it *requires* this, this is just a side-effect of the staight-forward way Transpose is currently implemented in onnxruntime. But I agree that a generic *and* performant solution is not trivial.\r\n\r\n> A specialized Transpose implementation could possibly be added for handling NHWC -> NCHW transpose operations\r\n\r\nThat would be great!\r\n\r\n> but alternatively the ONNX model could be completely NCHW based (as that's the layout ONNX supports) and a more optimal transpose could be done in pre-processing.\r\n\r\nThis is what we did in the meantime. So solving this is not that urgent from our side, we now just avoid Transpose ops...",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/557581455/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/565867155",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/2435#issuecomment-565867155",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/2435",
        "id": 565867155,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTg2NzE1NQ==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-12-16T00:58:56Z",
        "updated_at": "2019-12-16T00:58:56Z",
        "author_association": "MEMBER",
        "body": "Added a new optimized path for when a single axis is moving.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/565867155/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]