[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/583066486",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/2983#issuecomment-583066486",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/2983",
        "id": 583066486,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzA2NjQ4Ng==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-02-06T19:19:53Z",
        "updated_at": "2020-02-06T19:19:53Z",
        "author_association": "MEMBER",
        "body": "Can you share the model please ?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/583066486/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/583068599",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/2983#issuecomment-583068599",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/2983",
        "id": 583068599,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzA2ODU5OQ==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-02-06T19:24:36Z",
        "updated_at": "2020-02-06T19:24:36Z",
        "author_association": "MEMBER",
        "body": "Also, are you able to run both the models individually ? ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/583068599/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/583279561",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/2983#issuecomment-583279561",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/2983",
        "id": 583279561,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzI3OTU2MQ==",
        "user": {
            "login": "erikbrntsn",
            "id": 7210405,
            "node_id": "MDQ6VXNlcjcyMTA0MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7210405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/erikbrntsn",
            "html_url": "https://github.com/erikbrntsn",
            "followers_url": "https://api.github.com/users/erikbrntsn/followers",
            "following_url": "https://api.github.com/users/erikbrntsn/following{/other_user}",
            "gists_url": "https://api.github.com/users/erikbrntsn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/erikbrntsn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/erikbrntsn/subscriptions",
            "organizations_url": "https://api.github.com/users/erikbrntsn/orgs",
            "repos_url": "https://api.github.com/users/erikbrntsn/repos",
            "events_url": "https://api.github.com/users/erikbrntsn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/erikbrntsn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-02-07T08:07:55Z",
        "updated_at": "2020-02-07T08:49:38Z",
        "author_association": "NONE",
        "body": "I just tried a few things and doing the following works:\r\n\r\n```\r\nmodel2.Run(Fix(model1.Run(data), model2))\r\n\r\nprivate static List<NamedOnnxValue> Fix(IDisposableReadOnlyCollection<DisposableNamedOnnxValue> t, InferenceSession model)\r\n{\r\n    var q = t.First().AsTensor<float>();\r\n    var dims = q.Dimensions;\r\n    var data = q.ToArray();\r\n    var tensor = new DenseTensor<float>(data, dims);\r\n    var name = model.InputMetadata.Keys.First();\r\n    return new List<NamedOnnxValue> { NamedOnnxValue.CreateFromTensor(name, tensor) };\r\n}\r\n```\r\nSo yes, both models work individually.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/583279561/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/584578681",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/2983#issuecomment-584578681",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/2983",
        "id": 584578681,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDU3ODY4MQ==",
        "user": {
            "login": "erikbrntsn",
            "id": 7210405,
            "node_id": "MDQ6VXNlcjcyMTA0MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7210405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/erikbrntsn",
            "html_url": "https://github.com/erikbrntsn",
            "followers_url": "https://api.github.com/users/erikbrntsn/followers",
            "following_url": "https://api.github.com/users/erikbrntsn/following{/other_user}",
            "gists_url": "https://api.github.com/users/erikbrntsn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/erikbrntsn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/erikbrntsn/subscriptions",
            "organizations_url": "https://api.github.com/users/erikbrntsn/orgs",
            "repos_url": "https://api.github.com/users/erikbrntsn/repos",
            "events_url": "https://api.github.com/users/erikbrntsn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/erikbrntsn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-02-11T10:54:38Z",
        "updated_at": "2020-02-11T15:53:28Z",
        "author_association": "NONE",
        "body": "I have created a minimal model that reproduces the problem:\r\n\r\n[models.zip](https://github.com/microsoft/onnxruntime/files/4185375/models.zip)\r\n\r\nRun the following in a c# application after having loaded the models:\r\n```\r\nhead.Run(base.Run(data))\r\n```\r\n\r\nThe two models are implemented in PyTorch like this:\r\n\r\n```\r\nclass BaseModel(nn.Module):\r\n    def __init__(self):\r\n        super(BaseModel, self).__init__()\r\n        self.conv = torch.nn.Conv2d(1, 64, kernel_size=3, stride=1, padding=1)\r\n\r\n    def forward(self, x):\r\n        return self.conv(x)\r\n\r\n\r\nclass Head(nn.Module):\r\n    def __init__(self):\r\n        super(Head, self).__init__()\r\n        self.conv = torch.nn.Conv2d(64, 128, kernel_size=3, stride=1, padding=1)\r\n\r\n    def forward(self, x):\r\n        return self.conv(x)\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/584578681/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/597459329",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/2983#issuecomment-597459329",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/2983",
        "id": 597459329,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzQ1OTMyOQ==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-11T06:03:34Z",
        "updated_at": "2020-03-11T06:09:14Z",
        "author_association": "MEMBER",
        "body": "Hi,\r\n\r\nI finally got around to investigating this. I used your sample models (thanks) and there are several takeaways:\r\n\r\n1) The output (tensor) of Run() is of type `DisposableNamedOnnxValue` and the input tensor of Run() is of type `NamedOnnxValue`. `DisposableNamedOnnxValue` is a derived class of `NamedOnnxValue` and hence Run() accepts the output of another Run(). Unfortunately, there is logic in the Run() to pin managed memory buffer in the `NamedOnnxValue` which doesn't play well with `DisposableNamedOnnxValue` since `DisposableNamedOnnxValue` just maintains a wrapper over the native memory containing the output of Run(). \r\n\r\n2) We could support an input to Run() containing `DisposableNamedOnnxValue`  by adding some guard logic to prevent pinning in that case and directly re-using the native memory but chances of that being useful are very low because both `NamedOnnxValue` and `DisposableNamedOnnxValue` are bound to \"feed names\" and hence validation of the input will eventually fail unless we run into the very rare chance that the output name of one model exactly matches the input name of the next model. Even in your toy example, even though the shapes match the names are different. \r\n\r\n3) As it stands, you can get it to work with something like this - \r\n```\r\n                var container1 = new List<NamedOnnxValue>();\r\n                var tensorIn = new DenseTensor<float>(....);\r\n                var nov1 = NamedOnnxValue.CreateFromTensor(\"input\", tensorIn);\r\n                container1.Add(nov1);\r\n                var res1 = session1.Run(container1); // This is not disposed\r\n\r\n                var container2 = new List<NamedOnnxValue>();\r\n                var nov2 = NamedOnnxValue.CreateFromTensor(\"input\", res1.First().AsTensor<float>().ToDenseTensor()); // .ToDenseTensor() copies contents over\r\n                container2.Add(nov2 );\r\n                var res2 = session.Run(container2);\r\n```\r\n4) The above will work but is not optimal -\r\n     i) It will create another managed buffer and copy over the contents of the results of the first run\r\n    ii) It will create another OrtValue instance (for the new input) before calling into native code. Ideally we should be able to re-use the OrtValue instance created from the output of the first Run()\r\n\r\n5) There is a PR by @fs-eire (https://github.com/microsoft/onnxruntime/pull/3171) that will eventually solve it. It introduces a new class `PinnedOnnxValue` that can help re-use the underlying OrtValue value instances and there are several Run() overloads that will take in PinnedOnnxValues. You can use PinnedOnnxValue for the output of the first Run() and use the same for the input of the next Run() and that will solve the problem. \r\n\r\nCC: @jignparm ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/597459329/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/598365369",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/2983#issuecomment-598365369",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/2983",
        "id": 598365369,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODM2NTM2OQ==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-12T19:04:06Z",
        "updated_at": "2020-03-12T19:04:06Z",
        "author_association": "MEMBER",
        "body": "Synced offline with @fs-eire. After discussing, we felt DisposableNamedOnnxValue inputs in Run() should be accommodated as DisposableNamedOnnxValue is NamedOnnxValue (it is a derived class). Adjusted the PR contents accordingly.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/598365369/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/603087305",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/2983#issuecomment-603087305",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/2983",
        "id": 603087305,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYwMzA4NzMwNQ==",
        "user": {
            "login": "erikbrntsn",
            "id": 7210405,
            "node_id": "MDQ6VXNlcjcyMTA0MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7210405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/erikbrntsn",
            "html_url": "https://github.com/erikbrntsn",
            "followers_url": "https://api.github.com/users/erikbrntsn/followers",
            "following_url": "https://api.github.com/users/erikbrntsn/following{/other_user}",
            "gists_url": "https://api.github.com/users/erikbrntsn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/erikbrntsn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/erikbrntsn/subscriptions",
            "organizations_url": "https://api.github.com/users/erikbrntsn/orgs",
            "repos_url": "https://api.github.com/users/erikbrntsn/repos",
            "events_url": "https://api.github.com/users/erikbrntsn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/erikbrntsn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-24T08:01:39Z",
        "updated_at": "2020-03-24T08:01:39Z",
        "author_association": "NONE",
        "body": "Thank you guys!",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/603087305/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]