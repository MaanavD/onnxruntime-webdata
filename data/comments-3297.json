[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/606346463",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/3297#issuecomment-606346463",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/3297",
        "id": 606346463,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYwNjM0NjQ2Mw==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-31T01:40:22Z",
        "updated_at": "2020-03-31T01:40:22Z",
        "author_association": "MEMBER",
        "body": "Based on this output I would have assumed that the opset 8 version wasn't actually doing the interpolation. As such, it would be fast but incorrect. Is that not the case?\r\n\r\n> env/lib/python3.7/site-packages/torch/onnx/symbolic_helper.py:246: UserWarning: You are trying to export the model with onnx:Upsample for ONNX opset version 8. This operator might cause results to not match the expected results by PyTorch.\r\n> ONNX's Upsample/Resize operator did not match Pytorch's Interpolation until opset 11. Attributes to determine how to transform the input were added in onnx:Resize in opset 11 to support Pytorch's behavior (like coordinate_transformation_mode and nearest_mode).\r\n> We recommend using opset 11 and above for models using this operator.\r\n> ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/606346463/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/606438220",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/3297#issuecomment-606438220",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/3297",
        "id": 606438220,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYwNjQzODIyMA==",
        "user": {
            "login": "tracysh",
            "id": 42477615,
            "node_id": "MDQ6VXNlcjQyNDc3NjE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/42477615?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tracysh",
            "html_url": "https://github.com/tracysh",
            "followers_url": "https://api.github.com/users/tracysh/followers",
            "following_url": "https://api.github.com/users/tracysh/following{/other_user}",
            "gists_url": "https://api.github.com/users/tracysh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tracysh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tracysh/subscriptions",
            "organizations_url": "https://api.github.com/users/tracysh/orgs",
            "repos_url": "https://api.github.com/users/tracysh/repos",
            "events_url": "https://api.github.com/users/tracysh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tracysh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-31T06:58:00Z",
        "updated_at": "2020-03-31T06:58:00Z",
        "author_association": "CONTRIBUTOR",
        "body": "@skottmckay This may be related to the use_nearest_2x_optimization_ path in upsample.h. This isn't enabled in opset 11 because more of the options need to be checked to use the existing fast path. The NCHWc optimizer checks for the needed options to use its fast path.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/606438220/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/606514968",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/3297#issuecomment-606514968",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/3297",
        "id": 606514968,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYwNjUxNDk2OA==",
        "user": {
            "login": "emilianavt",
            "id": 38952746,
            "node_id": "MDQ6VXNlcjM4OTUyNzQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/38952746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/emilianavt",
            "html_url": "https://github.com/emilianavt",
            "followers_url": "https://api.github.com/users/emilianavt/followers",
            "following_url": "https://api.github.com/users/emilianavt/following{/other_user}",
            "gists_url": "https://api.github.com/users/emilianavt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/emilianavt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/emilianavt/subscriptions",
            "organizations_url": "https://api.github.com/users/emilianavt/orgs",
            "repos_url": "https://api.github.com/users/emilianavt/repos",
            "events_url": "https://api.github.com/users/emilianavt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/emilianavt/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-31T09:42:52Z",
        "updated_at": "2020-03-31T09:42:52Z",
        "author_association": "NONE",
        "body": "\r\n\r\n> Based on this output I would have assumed that the opset 8 version wasn't actually doing the interpolation. As such, it would be fast but incorrect. Is that not the case?\r\n\r\nEven if that case does not work correctly, nearest neighbour would still be more than five times slower than bilinear in opset 11. However, you can confirm that even in the first case the upsampling is working correctly using this modified script:\r\n\r\n    from pathlib import Path\r\n    import numpy as np\r\n    import time\r\n    import torch\r\n    import torch.nn as nn\r\n    import onnxruntime\r\n\r\n    class UpsampleTest(nn.Module):\r\n        def __init__(self, mode, corners):\r\n            super(UpsampleTest, self).__init__()\r\n            self.upsample = nn.Sequential(\r\n                nn.Upsample(size=(14,14), mode=mode, align_corners=corners),\r\n                nn.Upsample(size=(28,28), mode=mode, align_corners=corners),\r\n                nn.Upsample(size=(56,56), mode=mode, align_corners=corners)\r\n            )   \r\n        def forward(self, x): \r\n            return self.upsample(x)\r\n\r\n    x = torch.randn(1,256,7,7).numpy()\r\n    results = {}\r\n\r\n    def run_test(mode, corners, opset, runs=10000):\r\n        global results\r\n        global x\r\n        print(\"============================\")\r\n        print(f\"Testing mode={mode}, align_corners={corners}, opset={opset}, runs={runs}\")\r\n        model = UpsampleTest(mode, corners)\r\n        sample = torch.randn(1, 256, 7, 7, requires_grad=True)\r\n        sample_out = model(sample)\r\n        torch.onnx.export(model, sample, f\"upsample_test_{mode}_{corners}_{opset}.onnx\", example_outputs=sample_out, export_params=True, opset_version=opset, do_constant_folding=True, input_names=['input'], output_names=['output'], dynamic_axes={'input':{0:'batch_size'},'output':{0:'batch_size'}})\r\n        size = Path(f\"upsample_test_{mode}_{corners}_{opset}.onnx\").stat().st_size\r\n        print(f\"Exported ({size} bytes), running test...\")\r\n\r\n        options = onnxruntime.SessionOptions()\r\n        options.inter_op_num_threads = 1 \r\n        options.intra_op_num_threads = 4 \r\n        options.execution_mode = onnxruntime.ExecutionMode.ORT_SEQUENTIAL\r\n        options.graph_optimization_level = onnxruntime.GraphOptimizationLevel.ORT_ENABLE_ALL\r\n        session = onnxruntime.InferenceSession(f\"upsample_test_{mode}_{corners}_{opset}.onnx\", sess_options=options)\r\n\r\n        total_time = 0.\r\n        for i in range(runs):\r\n            start = time.perf_counter()\r\n            y = session.run([], {'input': x}) \r\n            results[f\"upsample_test_{mode}_{corners}_{opset}\"] = y \r\n            total_time += time.perf_counter() - start\r\n        corner = np.array(results[f'upsample_test_{mode}_{corners}_{opset}'][0])\r\n        print(f\"Output shape: {corner.shape}\")\r\n        corner = corner[0,0,0:16:4,0:16:4]\r\n        print(f\"Upper corner (stride=4 for brevity):\\n{corner}\")\r\n        avg_time = 1000. * (total_time / runs)\r\n        print(f\"Average duration: {avg_time:.2f}ms\")\r\n\r\n    print(f\"Versions:\\n- pytorch: {torch.__version__}\\n- numpy: {np.__version__}\\n- onnxruntime: {onnxruntime.__version__}\")\r\n    print(\"============================\")\r\n    print(f\"Upper corner (x[0,0,0:2,0:2]):\\n{x[0,0,0:2,0:2]}\")\r\n    run_test(\"nearest\", None, 8)\r\n    run_test(\"bilinear\", False, 8)\r\n    run_test(\"nearest\", None, 11) \r\n    run_test(\"bilinear\", False, 11) \r\n    run_test(\"bilinear\", True, 11) \r\n\r\nHere is the output:\r\n\r\n    Versions:\r\n    - pytorch: 1.4.0\r\n    - numpy: 1.18.2\r\n    - onnxruntime: 1.2.0\r\n    ============================\r\n    Upper corner (x[0,0,0:2,0:2]):\r\n    [[-0.20079376 -2.0216615 ]\r\n     [-1.6920412   0.6700317 ]]\r\n    ============================\r\n    Testing mode=nearest, align_corners=None, opset=8, runs=10000\r\n    env/lib/python3.7/site-packages/torch/onnx/symbolic_helper.py:246: UserWarning: You are trying to export the model with onnx:Upsample for ONNX opset version 8. This operator might cause results to not match the expected results by PyTorch.\r\n    ONNX's Upsample/Resize operator did not match Pytorch's Interpolation until opset 11. Attributes to determine how to transform the input were added in onnx:Resize in opset 11 to support Pytorch's behavior (like coordinate_transformation_mode and nearest_mode).\r\n    We recommend using opset 11 and above for models using this operator. \r\n      \"\" + str(_export_onnx_opset_version) + \". \"\r\n    Exported (352 bytes), running test...\r\n    Output shape: (1, 256, 56, 56) \r\n    Upper corner (stride=4 for brevity):\r\n    [[-0.20079376 -0.20079376 -2.0216615  -2.0216615 ]\r\n     [-0.20079376 -0.20079376 -2.0216615  -2.0216615 ]\r\n     [-1.6920412  -1.6920412   0.6700317   0.6700317 ]\r\n     [-1.6920412  -1.6920412   0.6700317   0.6700317 ]]\r\n    Average duration: 0.67ms\r\n    ============================\r\n    Testing mode=bilinear, align_corners=False, opset=8, runs=10000\r\n    Exported (349 bytes), running test...\r\n    Output shape: (1, 256, 56, 56) \r\n    Upper corner (stride=4 for brevity):\r\n    [[-0.20079376 -1.1112276  -2.0216615   0.48527098]\r\n     [-0.94641745 -0.81111616 -0.67581487  0.04495898]\r\n     [-1.6920412  -0.5110047   0.6700317  -0.39535305]\r\n     [-1.1086332  -0.19004475  0.72854364 -0.2877992 ]]\r\n    Average duration: 3.36ms\r\n    ============================\r\n    Testing mode=nearest, align_corners=None, opset=11, runs=10000\r\n    Exported (1409 bytes), running test...\r\n    Output shape: (1, 256, 56, 56) \r\n    Upper corner (stride=4 for brevity):\r\n    [[-0.20079376 -0.20079376 -2.0216615  -2.0216615 ]\r\n     [-0.20079376 -0.20079376 -2.0216615  -2.0216615 ]\r\n     [-1.6920412  -1.6920412   0.6700317   0.6700317 ]\r\n     [-1.6920412  -1.6920412   0.6700317   0.6700317 ]]\r\n    Average duration: 16.06ms\r\n    ============================\r\n    Testing mode=bilinear, align_corners=False, opset=11, runs=10000\r\n    Exported (1430 bytes), running test...\r\n    Output shape: (1, 256, 56, 56) \r\n    Upper corner (stride=4 for brevity):\r\n    [[-0.20079376 -0.48530433 -1.2250319  -1.0675387 ]\r\n     [-0.43380114 -0.6161892  -1.090398   -0.8826648 ]\r\n     [-1.0396204  -0.9564897  -0.74035    -0.40199247]\r\n     [-1.3699216  -1.087751   -0.35410735  0.04318229]]\r\n    Average duration: 3.38ms\r\n    ============================\r\n    Testing mode=bilinear, align_corners=True, opset=11, runs=10000\r\n    Exported (1415 bytes), running test...\r\n    Output shape: (1, 256, 56, 56) \r\n    Upper corner (stride=4 for brevity):\r\n    [[-0.20079376 -0.9953541  -1.7899147  -0.38588974]\r\n     [-0.85152    -0.8495933  -0.8476664  -0.23719151]\r\n     [-1.502246   -0.7038321   0.09458197 -0.08849339]\r\n     [-1.2979308  -0.43754163  0.4228475   0.01278109]]\r\n    Average duration: 3.39ms\r\n\r\nThe upsampling is clearly happening as intended even for opset 8 nearest neighbour.\r\n\r\n> @skottmckay This may be related to the use_nearest_2x_optimization_ path in upsample.h. This isn't enabled in opset 11 because more of the options need to be checked to use the existing fast path. The NCHWc optimizer checks for the needed options to use its fast path.\r\n\r\nThank you. This sounds like a plausible cause for this behaviour.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/606514968/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/606579201",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/3297#issuecomment-606579201",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/3297",
        "id": 606579201,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYwNjU3OTIwMQ==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-31T11:50:35Z",
        "updated_at": "2020-03-31T12:01:27Z",
        "author_association": "MEMBER",
        "body": "> @skottmckay This may be related to the use_nearest_2x_optimization_ path in upsample.h. This isn't enabled in opset 11 because more of the options need to be checked to use the existing fast path. The NCHWc optimizer checks for the needed options to use its fast path.\r\n\r\nYou're correct that path isn't being taken. I have changes to do the same check in Upsample as the NCHWc optimizer does, but it still won't help this model yet as the Resize node has the 'sizes' input. \r\n\r\nI assume it is valid to allow the optimization if we convert sizes to scales and the last two dims in scales are 2. Is that correct? \r\n\r\nInitial changes without support for 'sizes' are in https://github.com/microsoft/onnxruntime/compare/master...skottmckay/ResizeOpset11Optimization. It would be nicer to do the check on 'scales' upfront if it's a constant initializer, however when the kernel is being constructed the initializers have been removed from the Graph instance and put into SessionState (converted from TensorProto to OrtValue instances), and SessionState isn't available in the UpsampleBase ctor. It should be possible to leave them in the Graph a bit longer so they're available, if performance of checking 'scales' and potentially 'sizes' in every call to Compute is a concern.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/606579201/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/631158247",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/3297#issuecomment-631158247",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/3297",
        "id": 631158247,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTE1ODI0Nw==",
        "user": {
            "login": "emilianavt",
            "id": 38952746,
            "node_id": "MDQ6VXNlcjM4OTUyNzQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/38952746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/emilianavt",
            "html_url": "https://github.com/emilianavt",
            "followers_url": "https://api.github.com/users/emilianavt/followers",
            "following_url": "https://api.github.com/users/emilianavt/following{/other_user}",
            "gists_url": "https://api.github.com/users/emilianavt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/emilianavt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/emilianavt/subscriptions",
            "organizations_url": "https://api.github.com/users/emilianavt/orgs",
            "repos_url": "https://api.github.com/users/emilianavt/repos",
            "events_url": "https://api.github.com/users/emilianavt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/emilianavt/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-05-20T00:14:04Z",
        "updated_at": "2020-05-20T00:14:04Z",
        "author_association": "NONE",
        "body": "Thank you, with 1.3.0 this issue is solved!\r\n\r\n    Versions:\r\n    - pytorch: 1.4.0\r\n    - numpy: 1.18.2\r\n    - onnxruntime: 1.3.0\r\n    ============================\r\n    Testing mode=nearest, align_corners=None, opset=8, runs=500\r\n    env/lib/python3.7/site-packages/torch/onnx/symbolic_helper.py:246: UserWarning: You are trying to export the model with onnx:Upsample for ONNX opset version 8. This operator might cause results to not match the expected results by PyTorch.\r\n    ONNX's Upsample/Resize operator did not match Pytorch's Interpolation until opset 11. Attributes to determine how to transform the input were added in onnx:Resize in opset 11 to support Pytorch's behavior (like coordinate_transformation_mode and nearest_mode).\r\n    We recommend using opset 11 and above for models using this operator.\r\n      \"\" + str(_export_onnx_opset_version) + \". \"\r\n    Exported (352 bytes), running test...\r\n    Average duration: 0.75ms\r\n    ============================\r\n    Testing mode=bilinear, align_corners=None, opset=8, runs=500\r\n    env/lib/python3.7/site-packages/torch/nn/functional.py:2506: UserWarning: Default upsampling behavior when mode=bilinear is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.\r\n      \"See the documentation of nn.Upsample for details.\".format(mode))\r\n    Exported (349 bytes), running test...\r\n    Average duration: 3.44ms\r\n    ============================\r\n    Testing mode=bilinear, align_corners=False, opset=8, runs=500\r\n    Exported (349 bytes), running test...\r\n    Average duration: 3.38ms\r\n    ============================\r\n    Testing mode=nearest, align_corners=None, opset=11, runs=500\r\n    Exported (1409 bytes), running test...\r\n    Average duration: 0.63ms\r\n    ============================\r\n    Testing mode=bilinear, align_corners=None, opset=11, runs=500\r\n    Exported (1430 bytes), running test...\r\n    Average duration: 3.35ms\r\n    ============================\r\n    Testing mode=bilinear, align_corners=False, opset=11, runs=500\r\n    Exported (1430 bytes), running test...\r\n    Average duration: 3.36ms\r\n    ============================\r\n    Testing mode=bilinear, align_corners=True, opset=11, runs=500\r\n    Exported (1415 bytes), running test...\r\n    Average duration: 3.32ms\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/631158247/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]