[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/620760462",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/3706#issuecomment-620760462",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/3706",
        "id": 620760462,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDc2MDQ2Mg==",
        "user": {
            "login": "liqunfu",
            "id": 3318051,
            "node_id": "MDQ6VXNlcjMzMTgwNTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3318051?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liqunfu",
            "html_url": "https://github.com/liqunfu",
            "followers_url": "https://api.github.com/users/liqunfu/followers",
            "following_url": "https://api.github.com/users/liqunfu/following{/other_user}",
            "gists_url": "https://api.github.com/users/liqunfu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liqunfu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liqunfu/subscriptions",
            "organizations_url": "https://api.github.com/users/liqunfu/orgs",
            "repos_url": "https://api.github.com/users/liqunfu/repos",
            "events_url": "https://api.github.com/users/liqunfu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liqunfu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-28T17:52:24Z",
        "updated_at": "2020-04-28T17:52:24Z",
        "author_association": "MEMBER",
        "body": "The recommended way to use ort training feature is with ORT python front end. You may use ORTTrainer to train a PyTorch or an ONNX model. \r\n\r\nThere is a MNIST example to train a PyTorch model.  \r\nhttps://github.com/microsoft/onnxruntime/blob/78fde2c4cbeaaaf46fa97e1ffaea0fa01cbbcb33/onnxruntime/test/python/onnxruntime_test_ort_trainer.py#L250\r\nModel conversion and augmentation with gradient ops are handed in ORTTrainer and the ORT backend.\r\n\r\nIf you already have an ONNX model. there is an example too (which also uses ORTTrainer). However in this case the ONNX model needs to output loss as well). Please be noted that this approach is only used for testing purpose for now. We will see if there are strong need to really support this use case:\r\nhttps://github.com/microsoft/onnxruntime/blob/78fde2c4cbeaaaf46fa97e1ffaea0fa01cbbcb33/onnxruntime/test/python/onnxruntime_test_ort_trainer.py#L342\r\n\r\nIn both cases, we like to make the train script as nature to the PyTorch training as possible. Please give it a try and let us know.\r\nThanks\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/620760462/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/620821279",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/3706#issuecomment-620821279",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/3706",
        "id": 620821279,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDgyMTI3OQ==",
        "user": {
            "login": "pranav-prakash",
            "id": 10335022,
            "node_id": "MDQ6VXNlcjEwMzM1MDIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/10335022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranav-prakash",
            "html_url": "https://github.com/pranav-prakash",
            "followers_url": "https://api.github.com/users/pranav-prakash/followers",
            "following_url": "https://api.github.com/users/pranav-prakash/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranav-prakash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranav-prakash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranav-prakash/subscriptions",
            "organizations_url": "https://api.github.com/users/pranav-prakash/orgs",
            "repos_url": "https://api.github.com/users/pranav-prakash/repos",
            "events_url": "https://api.github.com/users/pranav-prakash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranav-prakash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-28T19:55:36Z",
        "updated_at": "2020-04-28T19:55:36Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thank you for the response!\r\n\r\n>recommended way to use ort training feature is with ORT python front end\r\n\r\nOur use case (training on embedded/edge devices) prevents us from using the Python API; instead we're limited to native binaries and therefore need to call into the C/C++ APIs directly. It seems like this *should* be possible given the existence of the training example in\r\n\r\nhttps://github.com/microsoft/onnxruntime/blob/78fde2c4cbeaaaf46fa97e1ffaea0fa01cbbcb33/orttraining/orttraining/models/mnist/main.cc#L40\r\n\r\nDoes this example require \"the ONNX model.. to output loss as well\" as you mentioned? If so, how would one go about adding the necessary gradient ops to construct such a model? I noticed there's also: \r\n\r\nhttps://github.com/microsoft/onnxruntime/blob/78fde2c4cbeaaaf46fa97e1ffaea0fa01cbbcb33/orttraining/orttraining/models/mnist/test_grad_graph_builder.cc#L72\r\n\r\nIs this meant to be used with `orttraining/orttraining/models/mnist/main.cc`?\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/620821279/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/620879484",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/3706#issuecomment-620879484",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/3706",
        "id": 620879484,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDg3OTQ4NA==",
        "user": {
            "login": "pranav-prakash",
            "id": 10335022,
            "node_id": "MDQ6VXNlcjEwMzM1MDIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/10335022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranav-prakash",
            "html_url": "https://github.com/pranav-prakash",
            "followers_url": "https://api.github.com/users/pranav-prakash/followers",
            "following_url": "https://api.github.com/users/pranav-prakash/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranav-prakash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranav-prakash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranav-prakash/subscriptions",
            "organizations_url": "https://api.github.com/users/pranav-prakash/orgs",
            "repos_url": "https://api.github.com/users/pranav-prakash/repos",
            "events_url": "https://api.github.com/users/pranav-prakash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranav-prakash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-28T22:04:09Z",
        "updated_at": "2020-04-28T22:30:18Z",
        "author_association": "CONTRIBUTOR",
        "body": "Adding on, I tried running the `onnxruntime_training_mnist` example binary (the code below) https://github.com/microsoft/onnxruntime/blob/78fde2c4cbeaaaf46fa97e1ffaea0fa01cbbcb33/orttraining/orttraining/models/mnist/main.cc#L40\r\n\r\non the Conv/Relu/Maxpool MNIST model builder provided at `orttraining/tools/mnist_model_builder/mnist_conv_builder.ipynb`\r\n\r\nThis seems to throw an exception:\r\n```\r\nterminate called after throwing an instance of 'onnxruntime::OnnxRuntimeException'\r\n  what():  /home/onnxruntime/onnxruntime/orttraining/orttraining/core/graph/gradient_builder_base.h:63 onnxruntime::training::ArgDef onnxruntime::training::GradientBuilderBase::O(size_t) const i < node_->OutputDefs().size() was false. \r\n```\r\n\r\n at the line\r\nhttps://github.com/microsoft/onnxruntime/blob/f1a948fd62da4a66b37a5e6d1717519042c15d32/orttraining/orttraining/core/framework/gradient_graph_builder.cc#L190\r\n\r\nwhich calls into \r\n\r\nhttps://github.com/microsoft/onnxruntime/blob/f1a948fd62da4a66b37a5e6d1717519042c15d32/orttraining/orttraining/core/graph/gradient_builder_base.h#L39\r\n\r\nFor reference, the node type and input/output args that need grad are:\r\n```\r\nNode type MaxPool\r\nOutput args need grad:\r\n         T3\r\nInput args need grad:\r\n         T2\r\n```\r\n\r\nThis seems to be because the gradient builder for `MaxPool` is defined as:\r\n\r\nhttps://github.com/microsoft/onnxruntime/blob/9a4d1c772094ba2518b39d77207a2f852a9fedcb/orttraining/orttraining/core/graph/gradient_builder.cc#L492-L498\r\n\r\neven though we only have 1 input/output def. Given that `AveragePoolGradient` doesn't have ` O(1)` I'm not sure if this is an issue with my model or a possible bug. (ONNX operator spec mentions that the second output for `MaxPool`: `Indices (optional) : I` is optional.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/620879484/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/621372668",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/3706#issuecomment-621372668",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/3706",
        "id": 621372668,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTM3MjY2OA==",
        "user": {
            "login": "liqunfu",
            "id": 3318051,
            "node_id": "MDQ6VXNlcjMzMTgwNTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3318051?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liqunfu",
            "html_url": "https://github.com/liqunfu",
            "followers_url": "https://api.github.com/users/liqunfu/followers",
            "following_url": "https://api.github.com/users/liqunfu/following{/other_user}",
            "gists_url": "https://api.github.com/users/liqunfu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liqunfu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liqunfu/subscriptions",
            "organizations_url": "https://api.github.com/users/liqunfu/orgs",
            "repos_url": "https://api.github.com/users/liqunfu/repos",
            "events_url": "https://api.github.com/users/liqunfu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liqunfu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-29T18:04:47Z",
        "updated_at": "2020-04-29T18:04:47Z",
        "author_association": "MEMBER",
        "body": "I attached the mnist test data and models. Please run with provided command line. As you can see, to work with cpp API, you need to follow the mnist example to build the graph with loss output so that backprop graph can be constructed.\r\n\r\n[mnist.zip](https://github.com/microsoft/onnxruntime/files/4553416/mnist.zip)\r\n./onnxruntime_training_mnist  --model_name ~/mnist/mnist_gemm_simple --train_data_dir ~/mnist/mnist_data/\r\n\r\nThanks",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/621372668/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]