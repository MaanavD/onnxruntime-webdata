[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/647743241",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4292#issuecomment-647743241",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4292",
        "id": 647743241,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0Nzc0MzI0MQ==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-22T20:06:52Z",
        "updated_at": "2020-06-22T20:06:52Z",
        "author_association": "MEMBER",
        "body": "Any chance you could share the .onnx model file with the inputs in .pb format ?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/647743241/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/647766909",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4292#issuecomment-647766909",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4292",
        "id": 647766909,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0Nzc2NjkwOQ==",
        "user": {
            "login": "pommedeterresautee",
            "id": 1029874,
            "node_id": "MDQ6VXNlcjEwMjk4NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pommedeterresautee",
            "html_url": "https://github.com/pommedeterresautee",
            "followers_url": "https://api.github.com/users/pommedeterresautee/followers",
            "following_url": "https://api.github.com/users/pommedeterresautee/following{/other_user}",
            "gists_url": "https://api.github.com/users/pommedeterresautee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pommedeterresautee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pommedeterresautee/subscriptions",
            "organizations_url": "https://api.github.com/users/pommedeterresautee/orgs",
            "repos_url": "https://api.github.com/users/pommedeterresautee/repos",
            "events_url": "https://api.github.com/users/pommedeterresautee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pommedeterresautee/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-22T21:00:16Z",
        "updated_at": "2020-06-23T06:17:39Z",
        "author_association": "NONE",
        "body": "The non optimized model is that one:\r\nhttps://itlab-public-data.s3-eu-west-1.amazonaws.com/onnx/bert-base-cased.zip\r\n(same as https://github.com/microsoft/onnxruntime/issues/4293)\r\n\r\nInput (16 tokens):\r\n```python\r\n{'input_ids': tensor([[     0,    581,  25545,  75678,    111,   1614,  54916,    136,     70,\r\n         118055,   5700,   2481,    111,    479,  35662,      2]]), 'attention_mask': tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])}\r\n```\r\nThis model doesn't use `token_type_ids`.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/647766909/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/648481562",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4292#issuecomment-648481562",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4292",
        "id": 648481562,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODQ4MTU2Mg==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-23T23:34:18Z",
        "updated_at": "2020-06-23T23:55:04Z",
        "author_association": "MEMBER",
        "body": "This is not a bug in the runtime as it seems like the model has had a weird conversion issue pertaining to one of the initializers. \r\n\r\nAttention masks can take 2 values - 0 or 1. It seems like the initializer has only data corresponding to mask == 0 and somehow missing stuff pertaining to mask == 1 (which is the provided input).\r\n\r\nHow did I get to this conclusion ? Please see below - \r\n\r\nThe `Gather` node that the exception is being thrown at (marked in red) has a `data` initializer of shape [**1**, 768]. Here is the Gather spec: https://github.com/onnx/onnx/blob/master/docs/Operators.md#Gather. The provided masks which flow in as `indices` of Gather now hold values of 1, which by definition of the spec are outside the range of dim value (axis defaulting to 0).\r\n\r\n![image](https://user-images.githubusercontent.com/9969784/85476833-f97cf480-b56d-11ea-83b7-2d9018e36be7.png)\r\n\r\nThis initializer needs to have been of shape [**2**, 768] and it is missing a set of 768 values corresponding to mask == 1.\r\n\r\nTo further add justification, I took another BERT based onnx model to see if I could confirm this suspicion and sure enough that model had masks fed into a Gather node that had an initializer of shape [2, 768] - \r\n\r\n![image](https://user-images.githubusercontent.com/9969784/85477236-c0914f80-b56e-11ea-9f6b-836ac17b8934.png)\r\n\r\n\r\nPlease open an issue with the Torch ONNX exporter project with these details.\r\n\r\nP.S. - As for the model only failing in the CPU EP, the CUDA EP by design doesn't  throw when it notices an index out of bound, it treats it as a no-op (i.e.) the output value is 0. This is because the operation is performed on multiple CUDA threads, whereas CPU has validation logic which throws. This design is common across other frameworks - pasting tf link - https://www.tensorflow.org/api_docs/python/tf/gather.\r\n\r\nClosing as this is a converter issue and not an ORT issue.\r\n\r\nCC: @neginraoof @spandantiwari for the PyTorch export issue",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/648481562/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/648776822",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4292#issuecomment-648776822",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4292",
        "id": 648776822,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODc3NjgyMg==",
        "user": {
            "login": "pommedeterresautee",
            "id": 1029874,
            "node_id": "MDQ6VXNlcjEwMjk4NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pommedeterresautee",
            "html_url": "https://github.com/pommedeterresautee",
            "followers_url": "https://api.github.com/users/pommedeterresautee/followers",
            "following_url": "https://api.github.com/users/pommedeterresautee/following{/other_user}",
            "gists_url": "https://api.github.com/users/pommedeterresautee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pommedeterresautee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pommedeterresautee/subscriptions",
            "organizations_url": "https://api.github.com/users/pommedeterresautee/orgs",
            "repos_url": "https://api.github.com/users/pommedeterresautee/repos",
            "events_url": "https://api.github.com/users/pommedeterresautee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pommedeterresautee/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-24T11:59:56Z",
        "updated_at": "2020-06-24T11:59:56Z",
        "author_association": "NONE",
        "body": "Thank you a lot for the tip!\r\nGoing deeper, I realize that the Gather operation is linked to `roberta.embeddings.token_type_embeddings.weight` matrix... but this model (and all Roberta based AFAIK) doesn't use token type input (as you can see in the code above, during input generation we set this parameter: `return_token_type_ids=False,`).\r\n\r\nSo basically it's using a matrix which should not be here (it's here because of the `Roberta` class inheritance from `Bert` class in Transformers). Clearly, it doesn't make any sense.\r\n\r\n![image](https://user-images.githubusercontent.com/1029874/85551249-1a068680-b622-11ea-8d68-ae386f922873.png)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/648776822/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/648895016",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4292#issuecomment-648895016",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4292",
        "id": 648895016,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODg5NTAxNg==",
        "user": {
            "login": "neginraoof",
            "id": 16928382,
            "node_id": "MDQ6VXNlcjE2OTI4Mzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16928382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neginraoof",
            "html_url": "https://github.com/neginraoof",
            "followers_url": "https://api.github.com/users/neginraoof/followers",
            "following_url": "https://api.github.com/users/neginraoof/following{/other_user}",
            "gists_url": "https://api.github.com/users/neginraoof/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neginraoof/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neginraoof/subscriptions",
            "organizations_url": "https://api.github.com/users/neginraoof/orgs",
            "repos_url": "https://api.github.com/users/neginraoof/repos",
            "events_url": "https://api.github.com/users/neginraoof/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neginraoof/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-24T15:33:15Z",
        "updated_at": "2020-06-24T15:51:55Z",
        "author_association": "CONTRIBUTOR",
        "body": "I tried your repro script, and I'm seeing the error below when running pytorch model:\r\n\r\nIndexError: index out of range in self: from torch.embedding(weight, input, padding_idx, scale_grad_by_freq, sparse)\r\n\r\nLooks like attentions_mask and input_type_ids are swapped in BertModel. Can you confirm this?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/648895016/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/648931222",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4292#issuecomment-648931222",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4292",
        "id": 648931222,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODkzMTIyMg==",
        "user": {
            "login": "pommedeterresautee",
            "id": 1029874,
            "node_id": "MDQ6VXNlcjEwMjk4NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pommedeterresautee",
            "html_url": "https://github.com/pommedeterresautee",
            "followers_url": "https://api.github.com/users/pommedeterresautee/followers",
            "following_url": "https://api.github.com/users/pommedeterresautee/following{/other_user}",
            "gists_url": "https://api.github.com/users/pommedeterresautee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pommedeterresautee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pommedeterresautee/subscriptions",
            "organizations_url": "https://api.github.com/users/pommedeterresautee/orgs",
            "repos_url": "https://api.github.com/users/pommedeterresautee/repos",
            "events_url": "https://api.github.com/users/pommedeterresautee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pommedeterresautee/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-24T16:37:06Z",
        "updated_at": "2020-06-24T16:38:10Z",
        "author_association": "NONE",
        "body": "I get the same error only if I run pytorch on CPU (which I was not doing). I checked on my machine and a fresh one from our cloud.\r\nIt seems to match the explanation of @hariharans29 about most ML frameworks don't error on out of range when you are on GPU.\r\n@neginraoof did you modified the code I posted to run torch on CPU?\r\n\r\nRegarding the input_type_ids, I will work on it and report here... but it seems crazy to me they did such mistake and no one noticed.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/648931222/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/648940972",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4292#issuecomment-648940972",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4292",
        "id": 648940972,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODk0MDk3Mg==",
        "user": {
            "login": "neginraoof",
            "id": 16928382,
            "node_id": "MDQ6VXNlcjE2OTI4Mzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16928382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neginraoof",
            "html_url": "https://github.com/neginraoof",
            "followers_url": "https://api.github.com/users/neginraoof/followers",
            "following_url": "https://api.github.com/users/neginraoof/following{/other_user}",
            "gists_url": "https://api.github.com/users/neginraoof/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neginraoof/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neginraoof/subscriptions",
            "organizations_url": "https://api.github.com/users/neginraoof/orgs",
            "repos_url": "https://api.github.com/users/neginraoof/repos",
            "events_url": "https://api.github.com/users/neginraoof/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neginraoof/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-24T16:55:27Z",
        "updated_at": "2020-06-24T18:23:02Z",
        "author_association": "CONTRIBUTOR",
        "body": "I copied your script and just changed CUDA to CPU, and hit this error on PyTorch.\r\n\r\nI think the problem happens when passing inputs_ids and attention_masks as a tuple, instead of dict, for ONNX export.\r\nThis could be due to lack of support for named optional parameters for model export. I'll look more into this.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/648940972/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/649007015",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4292#issuecomment-649007015",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4292",
        "id": 649007015,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTAwNzAxNQ==",
        "user": {
            "login": "neginraoof",
            "id": 16928382,
            "node_id": "MDQ6VXNlcjE2OTI4Mzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16928382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neginraoof",
            "html_url": "https://github.com/neginraoof",
            "followers_url": "https://api.github.com/users/neginraoof/followers",
            "following_url": "https://api.github.com/users/neginraoof/following{/other_user}",
            "gists_url": "https://api.github.com/users/neginraoof/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neginraoof/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neginraoof/subscriptions",
            "organizations_url": "https://api.github.com/users/neginraoof/orgs",
            "repos_url": "https://api.github.com/users/neginraoof/repos",
            "events_url": "https://api.github.com/users/neginraoof/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neginraoof/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-24T19:00:19Z",
        "updated_at": "2020-06-24T19:00:19Z",
        "author_association": "CONTRIBUTOR",
        "body": "Yes, this is actually a known missing feature in exporter.\r\n\r\nCan you try the workaround below (using a wrapper class) to export the model?\r\n\r\n```\r\n        class MyAutoModel(torch.nn.Module):\r\n            def __init__(self):\r\n                super(MyAutoModel, self).__init__()\r\n                self.auto_model = AutoModelForMultipleChoice.from_pretrained(\"xlm-roberta-base\")\r\n\r\n            def forward(self,\r\n                        input_ids,\r\n                        attention_mask=None,\r\n                        labels=None,\r\n                        position_ids=None,\r\n                        head_mask=None,\r\n                        inputs_embeds=None):\r\n                return self.auto_model(input_ids,\r\n                                       token_type_ids=None,\r\n                                       attention_mask=attention_mask,\r\n                                       labels=labels,\r\n                                       position_ids=position_ids,\r\n                                       head_mask=head_mask,\r\n                                       inputs_embeds=inputs_embeds)\r\n\r\n        model = MyAutoModel()\r\n        # try export ...\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/649007015/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/649083817",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4292#issuecomment-649083817",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4292",
        "id": 649083817,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTA4MzgxNw==",
        "user": {
            "login": "pommedeterresautee",
            "id": 1029874,
            "node_id": "MDQ6VXNlcjEwMjk4NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pommedeterresautee",
            "html_url": "https://github.com/pommedeterresautee",
            "followers_url": "https://api.github.com/users/pommedeterresautee/followers",
            "following_url": "https://api.github.com/users/pommedeterresautee/following{/other_user}",
            "gists_url": "https://api.github.com/users/pommedeterresautee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pommedeterresautee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pommedeterresautee/subscriptions",
            "organizations_url": "https://api.github.com/users/pommedeterresautee/orgs",
            "repos_url": "https://api.github.com/users/pommedeterresautee/repos",
            "events_url": "https://api.github.com/users/pommedeterresautee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pommedeterresautee/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-24T21:31:31Z",
        "updated_at": "2020-06-24T21:38:49Z",
        "author_association": "NONE",
        "body": "The custom class didn't fixed it. It seems to be related : https://github.com/huggingface/transformers/issues/4523 (but right the workaround doesn't work may be because here token ids is of no use unlike classical BERT?)",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/649083817/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/649091358",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4292#issuecomment-649091358",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4292",
        "id": 649091358,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTA5MTM1OA==",
        "user": {
            "login": "pommedeterresautee",
            "id": 1029874,
            "node_id": "MDQ6VXNlcjEwMjk4NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pommedeterresautee",
            "html_url": "https://github.com/pommedeterresautee",
            "followers_url": "https://api.github.com/users/pommedeterresautee/followers",
            "following_url": "https://api.github.com/users/pommedeterresautee/following{/other_user}",
            "gists_url": "https://api.github.com/users/pommedeterresautee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pommedeterresautee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pommedeterresautee/subscriptions",
            "organizations_url": "https://api.github.com/users/pommedeterresautee/orgs",
            "repos_url": "https://api.github.com/users/pommedeterresautee/repos",
            "events_url": "https://api.github.com/users/pommedeterresautee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pommedeterresautee/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-24T21:49:07Z",
        "updated_at": "2020-06-24T21:54:15Z",
        "author_association": "NONE",
        "body": "Ok it also requires to reverse input as described in the issue linked in the previous message...\r\n\r\n```python\r\nfrom transformers import  AutoTokenizer, AutoModelForMultipleChoice\r\n\r\nfrom os import environ\r\n\r\nimport torch\r\nfrom psutil import cpu_count\r\n\r\nfrom onnxruntime import InferenceSession, SessionOptions, get_all_providers\r\n\r\nclass MyAutoModel(torch.nn.Module):\r\n    def __init__(self):\r\n        super(MyAutoModel, self).__init__()\r\n        self.auto_model = AutoModelForMultipleChoice.from_pretrained(\"xlm-roberta-base\")\r\n\r\n    def forward(self,\r\n                input_ids,\r\n                token_type_ids=None,\r\n                attention_mask=None,\r\n                labels=None,\r\n                position_ids=None,\r\n                head_mask=None,\r\n                inputs_embeds=None):\r\n        print(\"0---\")\r\n        print(input_ids)\r\n        print(\"1---\")\r\n        print(attention_mask)\r\n        print(\"2---\")\r\n        print(token_type_ids)\r\n        print(\"3---\")\r\n        return self.auto_model(input_ids,\r\n                                token_type_ids=token_type_ids,\r\n                                attention_mask=attention_mask,\r\n                                labels=labels,\r\n                                position_ids=position_ids,\r\n                                head_mask=head_mask,\r\n                                inputs_embeds=inputs_embeds)\r\n\r\nmodel_pt = MyAutoModel()\r\n# model_pt.to(device=\"cuda\")\r\nmodel_pt.eval()\r\ntokenizer = AutoTokenizer.from_pretrained(\"xlm-roberta-base\")\r\n\r\n\r\ntext = \"\"\"The rapid growth of submissions and the increasing popularity of preprints have caused several problems to the current ACL reviewing system. To address these problems, the ACL Committee on Reviewing has been working on two proposals for reforming the reviewing system of ACL-related conferences: short-term and long-term. The following document presents the short-term proposals: https://www.aclweb.org/adminwiki/index.php?title=Short-Term_Reform_Propo... It consists of four complementary actions that can be realistically implemented to improve the ACL review process in the near future (while the committee continues to investigate changes that require a longer lead time). These actions address several of the problems identified in the proposal. The ACL Executive Committee has adopted these proposals. We hope that their implementation will have a quick positive impact on reviewing at ACL conferences.\"\"\"\r\n\r\n# Inputs are provided through numpy array\r\nmodel_inputs = tokenizer.encode_plus(text=text,\r\n                                 add_special_tokens=True,\r\n                                 max_length=16, # short to make print easy\r\n                                 pad_to_max_length=False,\r\n                                 return_token_type_ids=True,\r\n                                 return_attention_mask=True,\r\n                                 return_overflowing_tokens=False,\r\n                                 return_special_tokens_mask=False,\r\n                                 return_tensors='pt',\r\n                                 )\r\n\r\n# \r\nmodel_inputs = {k: v.unsqueeze(dim=0) for k, v in model_inputs.items()}  # .to(device=\"cuda\")\r\nwith torch.no_grad():\r\n    score_pytorch, = model_pt(**model_inputs) # type: torch.Tensor\r\n\r\nprint(score_pytorch)\r\n\r\n\r\ndef create_model_for_provider(model_path: str, provider: str) -> InferenceSession:\r\n\r\n  assert provider in get_all_providers(), f\"provider {provider} not found, {get_all_providers()}\"\r\n\r\n  # Few properties than might have an impact on performances (provided by MS)\r\n  options = SessionOptions()\r\n  options.intra_op_num_threads = 1\r\n\r\n  # Load the model as a graph and prepare the CPU backend\r\n  return InferenceSession(model_path, options, providers=[provider])\r\n\r\n\r\n!rm -rf onnx/\r\n!mkdir onnx\r\n\r\nsymbolic_names = {0: 'batch_size', 1: 'answers', 2: 'sequence'}\r\n\r\n# order issue\r\ninputs = {\r\n    'input_ids':      model_inputs[\"input_ids\"],\r\n    'attention_mask': model_inputs[\"token_type_ids\"],\r\n    'token_type_ids': model_inputs[\"attention_mask\"],\r\n}\r\n\r\nwith torch.no_grad():\r\n    torch.onnx.export(model_pt,                                         # model being run\r\n                      args=tuple(inputs.values()),                      # model input (or a tuple for multiple inputs)\r\n                      f=\"onnx/bert-base-cased.onnx\",                    # where to save the model (can be a file or file-like object)\r\n                      opset_version=11,                                 # the ONNX version to export the model to\r\n                      do_constant_folding=True,                         # whether to execute constant folding for optimization\r\n                      input_names=['input_ids',                         # the model's input names\r\n                                   'attention_mask',\r\n                                   'token_type_ids',\r\n                                   ],\r\n                      output_names=['score'],                    # the model's output names\r\n                      dynamic_axes={'input_ids': symbolic_names,        # variable length axes\r\n                                    'attention_mask' : symbolic_names,\r\n                                    'token_type_ids': symbolic_names,\r\n                                    'score' : symbolic_names,\r\n                                    },\r\n                      enable_onnx_checker=False,\r\n                      verbose=False,\r\n                      use_external_data_format=False,\r\n                      )\r\n\r\n\r\ninputs_onnx = {k: v.detach().cpu().numpy() for k, v in inputs.items()}\r\n\r\ncpu_model = create_model_for_provider(\"onnx/bert-base-cased.onnx\", \"CPUExecutionProvider\")\r\n\r\n# Run the model (None = get all the outputs)\r\nscore_onnx = cpu_model.run(None, inputs_onnx)\r\n\r\n# Print information about outputs\r\nprint(f\"score output: {score_onnx}\")\r\n```\r\n\r\nIt will print:\r\n```\r\n0---\r\ntensor([[[     0,    581,  25545,  75678,    111,   1614,  54916,    136,\r\n              70, 118055,   5700,   2481,    111,    479,  35662,      2]]])\r\n1---\r\ntensor([[[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]])\r\n2---\r\ntensor([[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]])\r\n3---\r\ntensor([[0.1764]])\r\n0---\r\ntensor([[[     0,    581,  25545,  75678,    111,   1614,  54916,    136,\r\n              70, 118055,   5700,   2481,    111,    479,  35662,      2]]])\r\n1---\r\ntensor([[[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]])\r\n2---\r\ntensor([[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]])\r\n3---\r\n/usr/local/lib/python3.6/dist-packages/torch/tensor.py:467: RuntimeWarning: Iterating over a tensor might cause the trace to be incorrect. Passing a tensor of different shape won't change the number of iterations executed (and might lead to errors or silently give incorrect results).\r\n  'incorrect results).', category=RuntimeWarning)\r\nscore output: [array([[0.17644826]], dtype=float32)]\r\n```\r\n-> **0.1764** in both pytorch and onnx runtime!\r\n\r\nTks a lot for the help!",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/649091358/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/649152205",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4292#issuecomment-649152205",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4292",
        "id": 649152205,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTE1MjIwNQ==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-25T01:01:37Z",
        "updated_at": "2020-06-25T01:01:37Z",
        "author_association": "MEMBER",
        "body": "Thanks @neginraoof  for the help and thanks @pommedeterresautee  for confirming that it works now.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/649152205/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]