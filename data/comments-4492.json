[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/657731130",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4492#issuecomment-657731130",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4492",
        "id": 657731130,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzczMTEzMA==",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-13T18:52:16Z",
        "updated_at": "2020-07-13T18:52:16Z",
        "author_association": "MEMBER",
        "body": "CreateEnv will always return the same environment instance on every invocation since only one env can be created in a process. This way you can get hold of an existing env ptr. The creation of the env is guarded by a mutex as seen [here](https://github.com/microsoft/onnxruntime/blob/master/onnxruntime/core/session/ort_env.cc#L39), so calling it from multiple threads should be thread-safe.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/657731130/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/659200522",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4492#issuecomment-659200522",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4492",
        "id": 659200522,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTIwMDUyMg==",
        "user": {
            "login": "mayeut",
            "id": 9768336,
            "node_id": "MDQ6VXNlcjk3NjgzMzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9768336?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mayeut",
            "html_url": "https://github.com/mayeut",
            "followers_url": "https://api.github.com/users/mayeut/followers",
            "following_url": "https://api.github.com/users/mayeut/following{/other_user}",
            "gists_url": "https://api.github.com/users/mayeut/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mayeut/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mayeut/subscriptions",
            "organizations_url": "https://api.github.com/users/mayeut/orgs",
            "repos_url": "https://api.github.com/users/mayeut/repos",
            "events_url": "https://api.github.com/users/mayeut/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mayeut/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-16T06:59:44Z",
        "updated_at": "2020-07-16T06:59:44Z",
        "author_association": "CONTRIBUTOR",
        "body": "If I'm not mistaken, CreateEnv will return an error on the second call because of this [line](https://github.com/microsoft/onnxruntime/blob/master/onnxruntime/core/common/logging/logging.cc#L105) which will be called whether an environment already exists or doesn't. This exception is thrown when creating a logging manager from [here](https://github.com/microsoft/onnxruntime/blob/master/onnxruntime/core/session/ort_env.cc#L42-L56) which is not in the block checking that an environment already exists.\r\n\r\nMoving the creation of the logging manager seems like a bad idea (since the user could decide to pass different options and not know they've been ignored the second time around).\r\n\r\nIf you have a layout like the one described in the issue (I guess) with both plug-in A & B depending on onnxruntime:\r\nPlugInA.dll\r\nPluginB.dll\r\nonnxruntime.dll\r\n\r\nThen, managing to get only one environment created for the whole process is a bit challenging.\r\nOf course, one could decide to build a static version of the library (if at all possible) but would lead in unnecessary growth of the binaries.\r\nOne easy option I'm seeing is to create an intermediate onnxruntime_env.dll that creates the environment upon loading & destroys it when unloading and acts as a kind of proxy with an accessor to get this singleton environment. It doesn't fit all scenarios though since all plug-ins in this case would need to use this onnxruntime_env.dll rather than depending only on onnxruntime.dll & create their own environment thinking they're the only ones using onnxruntime. This proxy could use the static library of onnxruntime and reexpose the same API in order to prevent this latter scenario.\r\n\r\nIMHO, the \"correct\" way to fix this issue would be not to rely on a single global environment in onnxruntime but rather only rely on the ones provided by the user (& there can be multiple ones). I think this would a topic for another discussion if being considered.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/659200522/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/659681272",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4492#issuecomment-659681272",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4492",
        "id": 659681272,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTY4MTI3Mg==",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-16T21:23:05Z",
        "updated_at": "2020-07-16T21:23:05Z",
        "author_association": "MEMBER",
        "body": "> If I'm not mistaken, CreateEnv will return an error on the second call because of this [line](https://github.com/microsoft/onnxruntime/blob/master/onnxruntime/core/common/logging/logging.cc#L105) which will be called whether an environment already exists or doesn't. This exception is thrown when creating a logging manager from [here](https://github.com/microsoft/onnxruntime/blob/master/onnxruntime/core/session/ort_env.cc#L42-L56) which is not in the block checking that an environment already exists.\r\n\r\nWe'll fix this. Also fyi the env returned is refcounted, so calling CreateEnv again will simply increase the refcount and return the same instance.\r\n\r\n> Moving the creation of the logging manager seems like a bad idea (since the user could decide to pass different options and not know they've been ignored the second time around).\r\n> IMHO, the \"correct\" way to fix this issue would be not to rely on a single global environment in onnxruntime but rather only rely on the ones provided by the user (& there can be multiple ones). I think this would a topic for another discussion if being considered.\r\n\r\nFair points. Marking this as an enhancement for now; we'll consider it.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/659681272/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/659917559",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4492#issuecomment-659917559",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4492",
        "id": 659917559,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTkxNzU1OQ==",
        "user": {
            "login": "brnd42",
            "id": 68229816,
            "node_id": "MDQ6VXNlcjY4MjI5ODE2",
            "avatar_url": "https://avatars.githubusercontent.com/u/68229816?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brnd42",
            "html_url": "https://github.com/brnd42",
            "followers_url": "https://api.github.com/users/brnd42/followers",
            "following_url": "https://api.github.com/users/brnd42/following{/other_user}",
            "gists_url": "https://api.github.com/users/brnd42/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brnd42/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brnd42/subscriptions",
            "organizations_url": "https://api.github.com/users/brnd42/orgs",
            "repos_url": "https://api.github.com/users/brnd42/repos",
            "events_url": "https://api.github.com/users/brnd42/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brnd42/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-17T07:21:07Z",
        "updated_at": "2020-07-17T07:21:07Z",
        "author_association": "NONE",
        "body": "Thank you very much for the insight. We are using the C API CreateEnv for now and then construct a smart pointer on an Ort::Env from the returned OrtEnv from CreateEnv. The logger exception is only thrown when using the Ort::Env default constructor.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/659917559/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]