[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/666094798",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4656#issuecomment-666094798",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4656",
        "id": 666094798,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2NjA5NDc5OA==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-30T04:22:05Z",
        "updated_at": "2020-07-30T04:22:05Z",
        "author_association": "MEMBER",
        "body": "Isn't this somewhat equivalent to cross-compiling? You're building something that can't run on the current machine. \r\n\r\nIs there a viable way to detect this scenario from a unit test? \r\nEven if there is a way, having to update lots of tests to handle this sort of thing doesn't really add value to the product.\r\n\r\nYou can skip the tests by passing the `--skip_tests` flag to the build script. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/666094798/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/667187387",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4656#issuecomment-667187387",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4656",
        "id": 667187387,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzE4NzM4Nw==",
        "user": {
            "login": "xkszltl",
            "id": 5203025,
            "node_id": "MDQ6VXNlcjUyMDMwMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5203025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xkszltl",
            "html_url": "https://github.com/xkszltl",
            "followers_url": "https://api.github.com/users/xkszltl/followers",
            "following_url": "https://api.github.com/users/xkszltl/following{/other_user}",
            "gists_url": "https://api.github.com/users/xkszltl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xkszltl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xkszltl/subscriptions",
            "organizations_url": "https://api.github.com/users/xkszltl/orgs",
            "repos_url": "https://api.github.com/users/xkszltl/repos",
            "events_url": "https://api.github.com/users/xkszltl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xkszltl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-31T15:39:57Z",
        "updated_at": "2020-07-31T15:39:57Z",
        "author_association": "CONTRIBUTOR",
        "body": "We do rely on unit test to make sure our build quality is good and no missing dll dependency.\r\n\r\nI understand your point, but we don't want to skip CPU test as well when building CUDA.\r\nSince GPU is pluggable device, should any CUDA test start with a `cudaGetDevice()`, also to set the correct device id?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/667187387/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/667190506",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4656#issuecomment-667190506",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4656",
        "id": 667190506,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzE5MDUwNg==",
        "user": {
            "login": "xkszltl",
            "id": 5203025,
            "node_id": "MDQ6VXNlcjUyMDMwMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5203025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xkszltl",
            "html_url": "https://github.com/xkszltl",
            "followers_url": "https://api.github.com/users/xkszltl/followers",
            "following_url": "https://api.github.com/users/xkszltl/following{/other_user}",
            "gists_url": "https://api.github.com/users/xkszltl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xkszltl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xkszltl/subscriptions",
            "organizations_url": "https://api.github.com/users/xkszltl/orgs",
            "repos_url": "https://api.github.com/users/xkszltl/repos",
            "events_url": "https://api.github.com/users/xkszltl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xkszltl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-31T15:45:59Z",
        "updated_at": "2020-07-31T15:45:59Z",
        "author_association": "CONTRIBUTOR",
        "body": "Also, to clarify, the problematic part is not \"it doesn't work\", but \"it doesn't quit\".\r\nIMO even segfault is a test result.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/667190506/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/667430522",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4656#issuecomment-667430522",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4656",
        "id": 667430522,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzQzMDUyMg==",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-31T23:53:07Z",
        "updated_at": "2020-07-31T23:53:07Z",
        "author_association": "MEMBER",
        "body": "So, you're saying, you build onnxruntime with CUDA, then run it on a machine with CUDA installed, but without Nvidia driver because the machine doesn't have the hardware, and you expect when you run the tests they should pass?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/667430522/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/667447010",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4656#issuecomment-667447010",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4656",
        "id": 667447010,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzQ0NzAxMA==",
        "user": {
            "login": "xkszltl",
            "id": 5203025,
            "node_id": "MDQ6VXNlcjUyMDMwMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5203025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xkszltl",
            "html_url": "https://github.com/xkszltl",
            "followers_url": "https://api.github.com/users/xkszltl/followers",
            "following_url": "https://api.github.com/users/xkszltl/following{/other_user}",
            "gists_url": "https://api.github.com/users/xkszltl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xkszltl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xkszltl/subscriptions",
            "organizations_url": "https://api.github.com/users/xkszltl/orgs",
            "repos_url": "https://api.github.com/users/xkszltl/repos",
            "events_url": "https://api.github.com/users/xkszltl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xkszltl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-01T01:29:46Z",
        "updated_at": "2020-08-01T01:29:46Z",
        "author_association": "CONTRIBUTOR",
        "body": "No, I said they can fail, but not hang. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/667447010/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/668265970",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4656#issuecomment-668265970",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4656",
        "id": 668265970,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODI2NTk3MA==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-03T22:09:40Z",
        "updated_at": "2020-08-03T22:09:40Z",
        "author_association": "MEMBER",
        "body": "I did a build on a VM with no CUDA device (Ubuntu 18.04) and the test fails for me with a reasonable error message. Not sure why it hangs for you. \r\n\r\nI tested with CUDA 10.2 with CUDNN 7.6.5 installed.\r\n\r\n>[ RUN      ] AllocatorTest.CUDAAllocatorTest\r\nunknown file: Failure\r\nC++ exception with description \"/home/scott/src/github/onnxruntime/onnxruntime/core/providers/cuda/cuda_call.cc:123 bool onnxruntime::CudaCall(ERRTYPE, const char*, const char*, ERRTYPE, const char*) [with ERRTYPE = cudaError; bool THRW = true] /home/scott/src/github/onnxruntime/onnxruntime/core/providers/cuda/cuda_call.cc:117 bool onnxruntime::CudaCall(ERRTYPE, const char*, const char*, ERRTYPE, const char*) [with ERRTYPE = cudaError; bool THRW = true] CUDA failure 100: no CUDA-capable device is detected ; GPU=0 ; hostname=Ubuntu1804 ; expr=cuda_err; \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/668265970/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/669241743",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4656#issuecomment-669241743",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4656",
        "id": 669241743,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTI0MTc0Mw==",
        "user": {
            "login": "xkszltl",
            "id": 5203025,
            "node_id": "MDQ6VXNlcjUyMDMwMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5203025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xkszltl",
            "html_url": "https://github.com/xkszltl",
            "followers_url": "https://api.github.com/users/xkszltl/followers",
            "following_url": "https://api.github.com/users/xkszltl/following{/other_user}",
            "gists_url": "https://api.github.com/users/xkszltl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xkszltl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xkszltl/subscriptions",
            "organizations_url": "https://api.github.com/users/xkszltl/orgs",
            "repos_url": "https://api.github.com/users/xkszltl/repos",
            "events_url": "https://api.github.com/users/xkszltl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xkszltl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-05T14:55:55Z",
        "updated_at": "2020-08-05T14:55:55Z",
        "author_association": "CONTRIBUTOR",
        "body": "Are you testing master or 1.4.0?\r\nOn Windows I get this from other tests, but not AllocatorTest.CUDAAllocatorTest\r\n```\r\nProvider:CUDAExecutionProvider\r\nunknown file: error: C++ exception with description \"D:\\roaster-scratch\\onnxruntime\\onnxruntime\\core\\providers\\cuda\\cuda_call.cc:123 onnxruntime::CudaCall D:\\roaster-scratch\\onnxruntime\\onnxruntime\\core\\providers\\cuda\\cuda_call.cc:117 onnxruntime::CudaCall CUDA failure 35: CUDA driver version is insufficient for CUDA runtime version ; GPU=-679215104 ; hostname=Roaster-Win ; expr=cudaSetDevice(device_id_);\r\n\r\n\" thrown in the test body.\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/669241743/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/669242236",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4656#issuecomment-669242236",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4656",
        "id": 669242236,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTI0MjIzNg==",
        "user": {
            "login": "xkszltl",
            "id": 5203025,
            "node_id": "MDQ6VXNlcjUyMDMwMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5203025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xkszltl",
            "html_url": "https://github.com/xkszltl",
            "followers_url": "https://api.github.com/users/xkszltl/followers",
            "following_url": "https://api.github.com/users/xkszltl/following{/other_user}",
            "gists_url": "https://api.github.com/users/xkszltl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xkszltl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xkszltl/subscriptions",
            "organizations_url": "https://api.github.com/users/xkszltl/orgs",
            "repos_url": "https://api.github.com/users/xkszltl/repos",
            "events_url": "https://api.github.com/users/xkszltl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xkszltl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-05T14:56:47Z",
        "updated_at": "2020-08-05T14:56:47Z",
        "author_association": "CONTRIBUTOR",
        "body": "And that's the only one hang.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/669242236/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/669514199",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4656#issuecomment-669514199",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4656",
        "id": 669514199,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTUxNDE5OQ==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-05T21:13:55Z",
        "updated_at": "2020-08-05T21:13:55Z",
        "author_association": "MEMBER",
        "body": "Are you able to step through AllocatorTest.CUDAAllocatorTest in a debugger (can be done via Test Explorer) and identify the call where it hangs? ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/669514199/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/670242023",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4656#issuecomment-670242023",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4656",
        "id": 670242023,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDI0MjAyMw==",
        "user": {
            "login": "xkszltl",
            "id": 5203025,
            "node_id": "MDQ6VXNlcjUyMDMwMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5203025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xkszltl",
            "html_url": "https://github.com/xkszltl",
            "followers_url": "https://api.github.com/users/xkszltl/followers",
            "following_url": "https://api.github.com/users/xkszltl/following{/other_user}",
            "gists_url": "https://api.github.com/users/xkszltl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xkszltl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xkszltl/subscriptions",
            "organizations_url": "https://api.github.com/users/xkszltl/orgs",
            "repos_url": "https://api.github.com/users/xkszltl/repos",
            "events_url": "https://api.github.com/users/xkszltl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xkszltl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-06T23:34:59Z",
        "updated_at": "2020-09-02T19:42:40Z",
        "author_association": "CONTRIBUTOR",
        "body": "Not really....RDP experience from China to Azure VM is too bad recently...",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/670242023/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/678132719",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4656#issuecomment-678132719",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4656",
        "id": 678132719,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY3ODEzMjcxOQ==",
        "user": {
            "login": "xkszltl",
            "id": 5203025,
            "node_id": "MDQ6VXNlcjUyMDMwMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5203025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xkszltl",
            "html_url": "https://github.com/xkszltl",
            "followers_url": "https://api.github.com/users/xkszltl/followers",
            "following_url": "https://api.github.com/users/xkszltl/following{/other_user}",
            "gists_url": "https://api.github.com/users/xkszltl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xkszltl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xkszltl/subscriptions",
            "organizations_url": "https://api.github.com/users/xkszltl/orgs",
            "repos_url": "https://api.github.com/users/xkszltl/repos",
            "events_url": "https://api.github.com/users/xkszltl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xkszltl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-21T09:10:25Z",
        "updated_at": "2020-08-21T09:11:31Z",
        "author_association": "CONTRIBUTOR",
        "body": "@skottmckay \r\nI got a stack trace on Linux about where is hang:\r\n```\r\nroot@64e141d47b68:/tmp/scratch/onnxruntime/build#  gdb --ex 'r' --args ./onnxruntime_test_all --gtest_filter='AllocatorTest.CUDAAllocatorTest'\r\nGNU gdb (Ubuntu 8.1-0ubuntu3.2) 8.1.0.20180409-git\r\nCopyright (C) 2018 Free Software Foundation, Inc.\r\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\r\nThis is free software: you are free to change and redistribute it.\r\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\r\nand \"show warranty\" for details.\r\nThis GDB was configured as \"x86_64-linux-gnu\".\r\nType \"show configuration\" for configuration details.\r\nFor bug reporting instructions, please see:\r\n<http://www.gnu.org/software/gdb/bugs/>.\r\nFind the GDB manual and other documentation resources online at:\r\n<http://www.gnu.org/software/gdb/documentation/>.\r\nFor help, type \"help\".\r\nType \"apropos word\" to search for commands related to \"word\"...\r\nReading symbols from ./onnxruntime_test_all...done.\r\nStarting program: /tmp/scratch/onnxruntime/build/onnxruntime_test_all --gtest_filter=AllocatorTest.CUDAAllocatorTest\r\nwarning: Error disabling address space randomization: Operation not permitted\r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\nNote: Google Test filter = AllocatorTest.CUDAAllocatorTest\r\n[==========] Running 1 test from 1 test suite.\r\n[----------] Global test environment set-up.\r\n[----------] 1 test from AllocatorTest\r\n[ RUN      ] AllocatorTest.CUDAAllocatorTest\r\n^C\r\nProgram received signal SIGINT, Interrupt.\r\n0x00007fda9d3ab412 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n(gdb) bt\r\n#0  0x00007fda9d3ab412 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n#1  0x00007fda9d3ab469 in std::locale::locale() () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n#2  0x00007fda9d3a8d8b in std::ios_base::_M_init() () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n#3  0x00007fda9d3fdf11 in std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n#4  0x000055b05832fc7e in std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::basic_ostringstream (__mode=std::_S_out, this=0x7fffdaa6b580, __in_chrg=<optimized out>, __vtt_parm=<optimized out>)\r\n    at /usr/include/c++/8/bits/char_traits.h:287\r\n#5  onnxruntime::OnnxRuntimeException::OnnxRuntimeException (this=0x55b05e561ea0, location=..., failed_condition=0x0, \r\n    msg=\"../onnxruntime/core/providers/cuda/cuda_call.cc:117 bool onnxruntime::CudaCall(ERRTYPE, const char*, const char*, ERRTYPE, const char*) [with ERRTYPE = cudaError; bool THRW = true] CUDA failure 35: CU\"...)\r\n    at ../include/onnxruntime/core/common/exceptions.h:44\r\n#6  0x000055b05894cf55 in onnxruntime::OnnxRuntimeException::OnnxRuntimeException (\r\n    msg=\"../onnxruntime/core/providers/cuda/cuda_call.cc:117 bool onnxruntime::CudaCall(ERRTYPE, const char*, const char*, ERRTYPE, const char*) [with ERRTYPE = cudaError; bool THRW = true] CUDA failure 35: CU\"..., location=..., this=0x55b05e561ea0)\r\n    at ../include/onnxruntime/core/common/exceptions.h:31\r\n#7  onnxruntime::CudaCall<cudaError, true> (retCode=<optimized out>, exprString=exprString@entry=0x55b05959bb71 \"cudaMalloc((void**)&p, size)\", libName=libName@entry=0x55b0594bcfde \"CUDA\", successCode=successCode@entry=cudaSuccess, \r\n    msg=msg@entry=0x55b059671b29 \"\") at ../onnxruntime/core/providers/cuda/cuda_call.cc:123\r\n#8  0x000055b058949209 in onnxruntime::CUDAAllocator::Alloc (this=<optimized out>, size=2304) at ../onnxruntime/core/providers/cuda/cuda_allocator.cc:40\r\n#9  0x000055b0591ded66 in onnxruntime::BFCArena::<lambda(size_t)>::operator() (__closure=<synthetic pointer>, alloc_bytes=2304) at /usr/include/c++/8/bits/unique_ptr.h:345\r\n#10 onnxruntime::BFCArena::Extend(unsigned long) () at ../onnxruntime/core/framework/bfc_arena.cc:140\r\n#11 0x000055b0591e47ef in onnxruntime::BFCArena::AllocateRawInternal(unsigned long, bool) () at ../onnxruntime/core/framework/bfc_arena.cc:267\r\n#12 0x000055b05842a3ed in onnxruntime::test::AllocatorTest_CUDAAllocatorTest_Test::TestBody() () at /usr/include/c++/8/bits/shared_ptr_base.h:1018\r\n#13 0x00007fda9db7452a in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x7fda9db75992 \"the test body\", method=<optimized out>, object=0x55b05e55dd00) at ../googletest/src/gtest.cc:2414\r\n#14 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object@entry=0x55b05e55dd00, method=<optimized out>, location=location@entry=0x7fda9db75992 \"the test body\") at ../googletest/src/gtest.cc:2469\r\n#15 0x00007fda9db6a3a3 in testing::Test::Run (this=0x55b05e55dd00) at ../googletest/src/gtest.cc:2508\r\n#16 testing::Test::Run (this=0x55b05e55dd00) at ../googletest/src/gtest.cc:2498\r\n#17 0x00007fda9db6a505 in testing::TestInfo::Run (this=0x55b05e23cfd0) at ../googletest/src/gtest.cc:2684\r\n#18 testing::TestInfo::Run (this=0x55b05e23cfd0) at ../googletest/src/gtest.cc:2657\r\n#19 0x00007fda9db6a5e5 in testing::TestSuite::Run (this=0x55b05e23bb60) at ../googletest/src/gtest.cc:2816\r\n#20 testing::TestSuite::Run (this=0x55b05e23bb60) at ../googletest/src/gtest.cc:2795\r\n#21 0x00007fda9db6ab03 in testing::internal::UnitTestImpl::RunAllTests() () at /usr/include/c++/8/bits/stl_vector.h:930\r\n#22 0x00007fda9db6ad21 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x7fda9db77be0 \"auxiliary test code (environments or event listeners)\", method=<optimized out>, object=0x55b05e21e1f0)\r\n    at ../googletest/src/gtest.cc:2414\r\n#23 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x7fda9db77be0 \"auxiliary test code (environments or event listeners)\", \r\n    method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x7fda9db6a680 <testing::internal::UnitTestImpl::RunAllTests()>, object=0x55b05e21e1f0) at ../googletest/src/gtest.cc:2469\r\n#24 testing::UnitTest::Run() () at ../googletest/src/gtest.cc:4925\r\n#25 0x000055b0582f00e6 in RUN_ALL_TESTS () at /usr/local/include/gtest/gtest.h:2473\r\n#26 main () at ../onnxruntime/test/providers/test_main.cc:50\r\n#27 0x00007fda9c97fb97 in __libc_start_main (main=0x55b0582f0060 <main>, argc=2, argv=0x7fffdaa6c5d8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffdaa6c5c8) at ../csu/libc-start.c:310\r\n#28 0x000055b0583130fa in _start () at /usr/include/c++/8/bits/char_traits.h:322\r\n```\r\n\r\nAnd from cuda-gdb:\r\n```\r\nroot@64e141d47b68:/tmp/scratch/onnxruntime/build# cuda-gdb --ex 'r' --args ./onnxruntime_test_all --gtest_filter='AllocatorTest.CUDAAllocatorTest'\r\nNVIDIA (R) CUDA Debugger\r\n11.0 release\r\nPortions Copyright (C) 2007-2020 NVIDIA Corporation\r\nGNU gdb (GDB) 8.2\r\nCopyright (C) 2018 Free Software Foundation, Inc.\r\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\r\nThis is free software: you are free to change and redistribute it.\r\nThere is NO WARRANTY, to the extent permitted by law.\r\nType \"show copying\" and \"show warranty\" for details.\r\nThis GDB was configured as \"x86_64-pc-linux-gnu\".\r\nType \"show configuration\" for configuration details.\r\nFor bug reporting instructions, please see:\r\n<http://www.gnu.org/software/gdb/bugs/>.\r\nFind the GDB manual and other documentation resources online at:\r\n    <http://www.gnu.org/software/gdb/documentation/>.\r\n\r\nFor help, type \"help\".\r\nType \"apropos word\" to search for commands related to \"word\"...\r\nReading symbols from ./onnxruntime_test_all...done.\r\nStarting program: /tmp/scratch/onnxruntime/build/onnxruntime_test_all --gtest_filter=AllocatorTest.CUDAAllocatorTest\r\nwarning: Error disabling address space randomization: Operation not permitted\r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\nNote: Google Test filter = AllocatorTest.CUDAAllocatorTest\r\n[==========] Running 1 test from 1 test suite.\r\n[----------] Global test environment set-up.\r\n[----------] 1 test from AllocatorTest\r\n[ RUN      ] AllocatorTest.CUDAAllocatorTest\r\n^C\r\nProgram received signal SIGINT, Interrupt.\r\n0x00007f5324ab7f28 in ?? () from /lib/x86_64-linux-gnu/libc.so.6\r\n(cuda-gdb) bt\r\n#0  0x00007f5324ab7f28 in ?? () from /lib/x86_64-linux-gnu/libc.so.6\r\n#1  0x00007f53253fa51b in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n#2  0x000055586901bb58 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find (__pos=0, __s=0x55586a4472c5 \"cudaMalloc\", this=0x7fff23fba8a0) at /usr/include/c++/8/bits/char_traits.h:322\r\n#3  onnxruntime::BFCArena::<lambda(size_t)>::operator() (__closure=<synthetic pointer>, alloc_bytes=2304) at ../onnxruntime/core/framework/bfc_arena.cc:90\r\n#4  onnxruntime::BFCArena::Extend (this=0x55586fedf7f0, rounded_bytes=1024) at ../onnxruntime/core/framework/bfc_arena.cc:140\r\n#5  0x0000555869fd77ef in onnxruntime::BFCArena::AllocateRawInternal (this=0x55586fedf7f0, num_bytes=1024, dump_log_on_failure=<optimized out>) at ../onnxruntime/core/framework/bfc_arena.cc:267\r\n#6  0x000055586921d3ed in onnxruntime::test::AllocatorTest_CUDAAllocatorTest_Test::TestBody (this=<optimized out>) at /usr/include/c++/8/bits/shared_ptr_base.h:1018\r\n#7  0x00007f5325b4352a in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x7f5325b44992 \"the test body\", method=<optimized out>, object=0x55586fedbd00) at ../googletest/src/gtest.cc:2414\r\n#8  testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object@entry=0x55586fedbd00, method=<optimized out>, location=location@entry=0x7f5325b44992 \"the test body\") at ../googletest/src/gtest.cc:2469\r\n#9  0x00007f5325b393a3 in testing::Test::Run (this=0x55586fedbd00) at ../googletest/src/gtest.cc:2508\r\n#10 testing::Test::Run (this=0x55586fedbd00) at ../googletest/src/gtest.cc:2498\r\n#11 0x00007f5325b39505 in testing::TestInfo::Run (this=0x55586fbbafd0) at ../googletest/src/gtest.cc:2684\r\n#12 testing::TestInfo::Run (this=0x55586fbbafd0) at ../googletest/src/gtest.cc:2657\r\n#13 0x00007f5325b395e5 in testing::TestSuite::Run (this=0x55586fbb9b60) at ../googletest/src/gtest.cc:2816\r\n#14 testing::TestSuite::Run (this=0x55586fbb9b60) at ../googletest/src/gtest.cc:2795\r\n#15 0x00007f5325b39b03 in testing::internal::UnitTestImpl::RunAllTests (this=0x55586fb9c1f0) at /usr/include/c++/8/bits/stl_vector.h:930\r\n#16 0x00007f5325b39d21 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x7f5325b46be0 \"auxiliary test code (environments or event listeners)\", method=<optimized out>, object=0x55586fb9c1f0)\r\n    at ../googletest/src/gtest.cc:2414\r\n#17 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x7f5325b46be0 \"auxiliary test code (environments or event listeners)\", \r\n    method=(bool (testing::internal::UnitTestImpl::*)(class testing::internal::UnitTestImpl * const)) 0x7f5325b39680 <testing::internal::UnitTestImpl::RunAllTests()>, object=0x55586fb9c1f0) at ../googletest/src/gtest.cc:2469\r\n#18 testing::UnitTest::Run (this=0x7f5325d58100 <testing::UnitTest::GetInstance()::instance>) at ../googletest/src/gtest.cc:4925\r\n#19 0x00005558690e30e6 in RUN_ALL_TESTS () at /usr/local/include/gtest/gtest.h:2473\r\n#20 main (argc=<optimized out>, argv=<optimized out>) at ../onnxruntime/test/providers/test_main.cc:50\r\n(cuda-gdb) \r\n```\r\n\r\nIt ends up at different places every time so probably something is slowly moving forward (or trapped in a infinite loop).",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/678132719/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/678321177",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4656#issuecomment-678321177",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4656",
        "id": 678321177,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY3ODMyMTE3Nw==",
        "user": {
            "login": "xkszltl",
            "id": 5203025,
            "node_id": "MDQ6VXNlcjUyMDMwMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5203025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xkszltl",
            "html_url": "https://github.com/xkszltl",
            "followers_url": "https://api.github.com/users/xkszltl/followers",
            "following_url": "https://api.github.com/users/xkszltl/following{/other_user}",
            "gists_url": "https://api.github.com/users/xkszltl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xkszltl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xkszltl/subscriptions",
            "organizations_url": "https://api.github.com/users/xkszltl/orgs",
            "repos_url": "https://api.github.com/users/xkszltl/repos",
            "events_url": "https://api.github.com/users/xkszltl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xkszltl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-21T14:31:05Z",
        "updated_at": "2020-08-21T14:31:05Z",
        "author_association": "CONTRIBUTOR",
        "body": "Here's where it is after several hours:\r\n```\r\n#0  0x00007fa29f8af87d in ?? () from /lib/x86_64-linux-gnu/libgcc_s.so.1\r\n#1  0x00007fa29f8b0440 in ?? () from /lib/x86_64-linux-gnu/libgcc_s.so.1\r\n#2  0x00007fa29f8b198b in _Unwind_RaiseException () from /lib/x86_64-linux-gnu/libgcc_s.so.1\r\n#3  0x00007fa29fee9d47 in __cxa_throw () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n#4  0x00005601359a5f8e in onnxruntime::CudaCall<cudaError, true> (retCode=<optimized out>, exprString=exprString@entry=0x5601365f4b71 \"cudaMalloc((void**)&p, size)\", libName=libName@entry=0x560136515fde \"CUDA\", \r\n    successCode=successCode@entry=cudaSuccess, msg=msg@entry=0x5601366cab29 \"\") at /usr/include/c++/8/ext/new_allocator.h:86\r\n#5  0x00005601359a2209 in onnxruntime::CUDAAllocator::Alloc (this=<optimized out>, size=2304) at ../onnxruntime/core/providers/cuda/cuda_allocator.cc:40\r\n#6  0x0000560136237d66 in onnxruntime::BFCArena::<lambda(size_t)>::operator() (__closure=<synthetic pointer>, alloc_bytes=2304) at /usr/include/c++/8/bits/unique_ptr.h:345\r\n#7  onnxruntime::BFCArena::Extend (this=0x56013b1a37f0, rounded_bytes=1024) at ../onnxruntime/core/framework/bfc_arena.cc:140\r\n#8  0x000056013623d7ef in onnxruntime::BFCArena::AllocateRawInternal (this=0x56013b1a37f0, num_bytes=1024, dump_log_on_failure=<optimized out>) at ../onnxruntime/core/framework/bfc_arena.cc:267\r\n#9  0x00005601354833ed in onnxruntime::test::AllocatorTest_CUDAAllocatorTest_Test::TestBody (this=<optimized out>) at /usr/include/c++/8/bits/shared_ptr_base.h:1018\r\n#10 0x00007fa2a06c652a in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x7fa2a06c7992 \"the test body\", method=<optimized out>, object=0x56013b19fd00) at ../googletest/src/gtest.cc:2414\r\n#11 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object@entry=0x56013b19fd00, method=<optimized out>, location=location@entry=0x7fa2a06c7992 \"the test body\") at ../googletest/src/gtest.cc:2469\r\n#12 0x00007fa2a06bc3a3 in testing::Test::Run (this=0x56013b19fd00) at ../googletest/src/gtest.cc:2508\r\n#13 testing::Test::Run (this=0x56013b19fd00) at ../googletest/src/gtest.cc:2498\r\n#14 0x00007fa2a06bc505 in testing::TestInfo::Run (this=0x56013ae7efd0) at ../googletest/src/gtest.cc:2684\r\n#15 testing::TestInfo::Run (this=0x56013ae7efd0) at ../googletest/src/gtest.cc:2657\r\n#16 0x00007fa2a06bc5e5 in testing::TestSuite::Run (this=0x56013ae7db60) at ../googletest/src/gtest.cc:2816\r\n#17 testing::TestSuite::Run (this=0x56013ae7db60) at ../googletest/src/gtest.cc:2795\r\n#18 0x00007fa2a06bcb03 in testing::internal::UnitTestImpl::RunAllTests (this=0x56013ae601f0) at /usr/include/c++/8/bits/stl_vector.h:930\r\n#19 0x00007fa2a06bcd21 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x7fa2a06c9be0 \"auxiliary test code (environments or event listeners)\", method=<optimized out>, object=0x56013ae601f0)\r\n    at ../googletest/src/gtest.cc:2414\r\n#20 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x7fa2a06c9be0 \"auxiliary test code (environments or event listeners)\", \r\n    method=(bool (testing::internal::UnitTestImpl::*)(class testing::internal::UnitTestImpl * const)) 0x7fa2a06bc680 <testing::internal::UnitTestImpl::RunAllTests()>, object=0x56013ae601f0) at ../googletest/src/gtest.cc:2469\r\n#21 testing::UnitTest::Run (this=0x7fa2a08db100 <testing::UnitTest::GetInstance()::instance>) at ../googletest/src/gtest.cc:4925\r\n#22 0x00005601353490e6 in RUN_ALL_TESTS () at /usr/local/include/gtest/gtest.h:2473\r\n#23 main (argc=<optimized out>, argv=<optimized out>) at ../onnxruntime/test/providers/test_main.cc:50\r\n\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/678321177/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/744271856",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4656#issuecomment-744271856",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4656",
        "id": 744271856,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDI3MTg1Ng==",
        "user": {
            "login": "toothache",
            "id": 2187096,
            "node_id": "MDQ6VXNlcjIxODcwOTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2187096?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/toothache",
            "html_url": "https://github.com/toothache",
            "followers_url": "https://api.github.com/users/toothache/followers",
            "following_url": "https://api.github.com/users/toothache/following{/other_user}",
            "gists_url": "https://api.github.com/users/toothache/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/toothache/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/toothache/subscriptions",
            "organizations_url": "https://api.github.com/users/toothache/orgs",
            "repos_url": "https://api.github.com/users/toothache/repos",
            "events_url": "https://api.github.com/users/toothache/events{/privacy}",
            "received_events_url": "https://api.github.com/users/toothache/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-12-14T08:30:21Z",
        "updated_at": "2020-12-14T08:30:21Z",
        "author_association": "MEMBER",
        "body": "I hit the same issue, the test case hang in `AllocatorTest.CUDAAllocatorTest`.\r\n\r\nMachine Environment:\r\n- OS: Windows Server 2019, OS Build 177763\r\n- VM size: DS12v3 (No GPU avaliable)\r\n- Source commit: 718ca7f9\r\n- VS: VS2019 Community Edition\r\n- CUDA: CUDA v11.1 installed\r\n\r\nHere's my call stack:\r\n```\r\n>\tonnxruntime_test_all.exe!`onnxruntime::CudaCall<enum cudaError,1>'::`1'::catch$57() Line 123\tC++\r\n \t[External Code]\t\r\n \tonnxruntime_test_all.exe!onnxruntime::CudaCall<enum cudaError,1>(cudaError retCode, const char * exprString, const char * libName, cudaError successCode, const char * msg) Line 117\tC++\r\n \tonnxruntime_test_all.exe!onnxruntime::CUDAAllocator::Alloc(unsigned __int64 size) Line 42\tC++\r\n \tonnxruntime_test_all.exe!onnxruntime::BFCArena::Extend::__l2::<lambda>(unsigned __int64 alloc_bytes) Line 89\tC++\r\n \tonnxruntime_test_all.exe!onnxruntime::BFCArena::Extend(unsigned __int64 rounded_bytes) Line 150\tC++\r\n \tonnxruntime_test_all.exe!onnxruntime::BFCArena::AllocateRawInternal(unsigned __int64 num_bytes, bool) Line 277\tC++\r\n \tonnxruntime_test_all.exe!onnxruntime::test::AllocatorTest_CUDAAllocatorTest_Test::TestBody() Line 28\tC++\r\n \tonnxruntime_test_all.exe!testing::internal::HandleSehExceptionsInMethodIfSupported<testing::TestSuite,void>(testing::TestSuite * object, void(testing::TestSuite::*)() method, const char * location) Line 2418\tC++\r\n \tonnxruntime_test_all.exe!testing::internal::HandleExceptionsInMethodIfSupported<testing::Test,void>(testing::Test * object, void(testing::Test::*)() method, const char * location) Line 2469\tC++\r\n \tonnxruntime_test_all.exe!testing::Test::Run() Line 2515\tC++\r\n \tonnxruntime_test_all.exe!testing::TestInfo::Run() Line 2687\tC++\r\n \tonnxruntime_test_all.exe!testing::TestSuite::Run() Line 2815\tC++\r\n \tonnxruntime_test_all.exe!testing::internal::UnitTestImpl::RunAllTests() Line 5337\tC++\r\n \tonnxruntime_test_all.exe!testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl,bool>(testing::internal::UnitTestImpl * object, bool(testing::internal::UnitTestImpl::*)()) Line 2418\tC++\r\n \tonnxruntime_test_all.exe!testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl,bool>(testing::internal::UnitTestImpl * object, bool(testing::internal::UnitTestImpl::*)()) Line 2469\tC++\r\n \tonnxruntime_test_all.exe!testing::UnitTest::Run() Line 4925\tC++\r\n \t[Inline Frame] onnxruntime_test_all.exe!RUN_ALL_TESTS() Line 2473\tC++\r\n \tonnxruntime_test_all.exe!main(int argc, char * * argv) Line 67\tC++\r\n\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/744271856/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/744476579",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4656#issuecomment-744476579",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4656",
        "id": 744476579,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDQ3NjU3OQ==",
        "user": {
            "login": "toothache",
            "id": 2187096,
            "node_id": "MDQ6VXNlcjIxODcwOTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2187096?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/toothache",
            "html_url": "https://github.com/toothache",
            "followers_url": "https://api.github.com/users/toothache/followers",
            "following_url": "https://api.github.com/users/toothache/following{/other_user}",
            "gists_url": "https://api.github.com/users/toothache/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/toothache/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/toothache/subscriptions",
            "organizations_url": "https://api.github.com/users/toothache/orgs",
            "repos_url": "https://api.github.com/users/toothache/repos",
            "events_url": "https://api.github.com/users/toothache/events{/privacy}",
            "received_events_url": "https://api.github.com/users/toothache/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-12-14T14:27:59Z",
        "updated_at": "2020-12-14T14:27:59Z",
        "author_association": "MEMBER",
        "body": "Some update:\r\n\r\nThe test is stuck in this line of code:\r\n\r\nhttps://github.com/microsoft/onnxruntime/blob/156368b67f46fc6ab12b59ea39fcc93e51730ae7/onnxruntime/core/providers/cuda/cuda_call.cc#L117\r\n\r\nAnd this issue only repos for Release build, Debug build works fine.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/744476579/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/745015941",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4656#issuecomment-745015941",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4656",
        "id": 745015941,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTAxNTk0MQ==",
        "user": {
            "login": "toothache",
            "id": 2187096,
            "node_id": "MDQ6VXNlcjIxODcwOTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2187096?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/toothache",
            "html_url": "https://github.com/toothache",
            "followers_url": "https://api.github.com/users/toothache/followers",
            "following_url": "https://api.github.com/users/toothache/following{/other_user}",
            "gists_url": "https://api.github.com/users/toothache/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/toothache/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/toothache/subscriptions",
            "organizations_url": "https://api.github.com/users/toothache/orgs",
            "repos_url": "https://api.github.com/users/toothache/repos",
            "events_url": "https://api.github.com/users/toothache/events{/privacy}",
            "received_events_url": "https://api.github.com/users/toothache/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-12-15T02:45:44Z",
        "updated_at": "2020-12-15T02:45:44Z",
        "author_association": "MEMBER",
        "body": "Found the root cause:\r\n\r\n- BFCArena has the logic to swallow exception from a failed `cudaMalloc` call:\r\nhttps://github.com/microsoft/onnxruntime/blob/9810b9e02b5d15e8c3edbe1ade44704e666127b4/onnxruntime/core/framework/bfc_arena.cc#L96-L103\r\n\r\n- BFCArena has the retry logic on memory allocation failure:\r\nhttps://github.com/microsoft/onnxruntime/blob/9810b9e02b5d15e8c3edbe1ade44704e666127b4/onnxruntime/core/framework/bfc_arena.cc#L145-L151\r\n\r\n- In Debug Build, exception throws in `CUDAAllocator::CheckDevice`. However, in Release Build, it simply does nothing.\r\nhttps://github.com/microsoft/onnxruntime/blob/9810b9e02b5d15e8c3edbe1ade44704e666127b4/onnxruntime/core/providers/cuda/cuda_allocator.cc#L19-L33\r\n ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/745015941/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/745023488",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4656#issuecomment-745023488",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4656",
        "id": 745023488,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTAyMzQ4OA==",
        "user": {
            "login": "toothache",
            "id": 2187096,
            "node_id": "MDQ6VXNlcjIxODcwOTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2187096?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/toothache",
            "html_url": "https://github.com/toothache",
            "followers_url": "https://api.github.com/users/toothache/followers",
            "following_url": "https://api.github.com/users/toothache/following{/other_user}",
            "gists_url": "https://api.github.com/users/toothache/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/toothache/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/toothache/subscriptions",
            "organizations_url": "https://api.github.com/users/toothache/orgs",
            "repos_url": "https://api.github.com/users/toothache/repos",
            "events_url": "https://api.github.com/users/toothache/events{/privacy}",
            "received_events_url": "https://api.github.com/users/toothache/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-12-15T03:11:48Z",
        "updated_at": "2020-12-15T03:11:48Z",
        "author_association": "MEMBER",
        "body": "@skottmckay , any suggestion to fix this issue?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/745023488/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/745061633",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4656#issuecomment-745061633",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4656",
        "id": 745061633,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTA2MTYzMw==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-12-15T05:27:55Z",
        "updated_at": "2020-12-15T05:28:26Z",
        "author_association": "MEMBER",
        "body": "In normal usage the CUDA Execution Provider calls cudaSetDevice in its ctor before creating the CUDA Allocator so this prevents the issue. In the test we don't go through that path, so the simplest may be to call cudaSetDevice in the unit test and check that is successful before proceeding.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/745061633/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/745084144",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4656#issuecomment-745084144",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4656",
        "id": 745084144,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTA4NDE0NA==",
        "user": {
            "login": "toothache",
            "id": 2187096,
            "node_id": "MDQ6VXNlcjIxODcwOTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2187096?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/toothache",
            "html_url": "https://github.com/toothache",
            "followers_url": "https://api.github.com/users/toothache/followers",
            "following_url": "https://api.github.com/users/toothache/following{/other_user}",
            "gists_url": "https://api.github.com/users/toothache/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/toothache/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/toothache/subscriptions",
            "organizations_url": "https://api.github.com/users/toothache/orgs",
            "repos_url": "https://api.github.com/users/toothache/repos",
            "events_url": "https://api.github.com/users/toothache/events{/privacy}",
            "received_events_url": "https://api.github.com/users/toothache/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-12-15T06:31:07Z",
        "updated_at": "2020-12-15T06:31:07Z",
        "author_association": "MEMBER",
        "body": "> In normal usage the CUDA Execution Provider calls cudaSetDevice in its ctor before creating the CUDA Allocator so this prevents the issue. In the test we don't go through that path, so the simplest may be to call cudaSetDevice in the unit test and check that is successful before proceeding.\r\n\r\nThanks! I have submitted a PR according to your suggestion.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/745084144/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/745438688",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4656#issuecomment-745438688",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4656",
        "id": 745438688,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTQzODY4OA==",
        "user": {
            "login": "xkszltl",
            "id": 5203025,
            "node_id": "MDQ6VXNlcjUyMDMwMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5203025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xkszltl",
            "html_url": "https://github.com/xkszltl",
            "followers_url": "https://api.github.com/users/xkszltl/followers",
            "following_url": "https://api.github.com/users/xkszltl/following{/other_user}",
            "gists_url": "https://api.github.com/users/xkszltl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xkszltl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xkszltl/subscriptions",
            "organizations_url": "https://api.github.com/users/xkszltl/orgs",
            "repos_url": "https://api.github.com/users/xkszltl/repos",
            "events_url": "https://api.github.com/users/xkszltl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xkszltl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-12-15T17:20:17Z",
        "updated_at": "2020-12-15T17:20:17Z",
        "author_association": "CONTRIBUTOR",
        "body": "@toothache Thanks a lot! Finally this issue can be fixed.\r\n@skottmckay Do you know why it is disabled with `-DNDEBUG`? Does this check has noticeable performance impact?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/745438688/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/745587807",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4656#issuecomment-745587807",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4656",
        "id": 745587807,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTU4NzgwNw==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-12-15T21:46:52Z",
        "updated_at": "2020-12-15T21:46:52Z",
        "author_association": "MEMBER",
        "body": "Sorry - I don't know the history. It looks like a check that the device doesn't change unexpectedly, and may not even be needed at all. @KeDengMS might know more.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/745587807/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/745627169",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4656#issuecomment-745627169",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4656",
        "id": 745627169,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTYyNzE2OQ==",
        "user": {
            "login": "ke1337",
            "id": 22626095,
            "node_id": "MDQ6VXNlcjIyNjI2MDk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/22626095?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ke1337",
            "html_url": "https://github.com/ke1337",
            "followers_url": "https://api.github.com/users/ke1337/followers",
            "following_url": "https://api.github.com/users/ke1337/following{/other_user}",
            "gists_url": "https://api.github.com/users/ke1337/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ke1337/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ke1337/subscriptions",
            "organizations_url": "https://api.github.com/users/ke1337/orgs",
            "repos_url": "https://api.github.com/users/ke1337/repos",
            "events_url": "https://api.github.com/users/ke1337/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ke1337/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-12-15T23:18:06Z",
        "updated_at": "2020-12-15T23:18:06Z",
        "author_association": "CONTRIBUTOR",
        "body": "If I read the thread correctly, it seems the problem is inside BFC arena when it assumes all cudaMalloc failure to be OOM and keeps shrink size and retry. IMO, a better fix would be changing BFC arena to check exactly OOM failures if possible.\r\nAdding CheckDevice for NDEBUG should not add too much overhead, as most allocations are in BFC arena, but we'd better have some tests to confirm.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/745627169/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/745708892",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4656#issuecomment-745708892",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4656",
        "id": 745708892,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTcwODg5Mg==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-12-16T01:44:09Z",
        "updated_at": "2020-12-16T01:44:09Z",
        "author_association": "MEMBER",
        "body": "@KeDengMS I don't think we should get to the point where the BFCArena is created with a CUDA allocator if there's no CUDA device, so I would prefer not to make any check there more expensive. The issue only occurred in a unit test as BFCArena was being tested directly without checking there was a CUDA device first. \r\n\r\nMy question was more about whether we need CheckDevice at all. Assumably the assert there doesn't fire in any CI runs so the device isn't changing unexpectedly there. Not sure if when we test with multiple GPUs that we run models in parallel using multiple CUDA EPs tied to different devices in order to check that the cudaSetDevice call in CUDAExecutionProvider::OnRunStart doesn't break an existing concurrent run using a different device. That said, if unexpected device changes was a real problem I would have expected to have seen it show up in Issues.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/745708892/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/745713235",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4656#issuecomment-745713235",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4656",
        "id": 745713235,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTcxMzIzNQ==",
        "user": {
            "login": "ke1337",
            "id": 22626095,
            "node_id": "MDQ6VXNlcjIyNjI2MDk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/22626095?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ke1337",
            "html_url": "https://github.com/ke1337",
            "followers_url": "https://api.github.com/users/ke1337/followers",
            "following_url": "https://api.github.com/users/ke1337/following{/other_user}",
            "gists_url": "https://api.github.com/users/ke1337/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ke1337/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ke1337/subscriptions",
            "organizations_url": "https://api.github.com/users/ke1337/orgs",
            "repos_url": "https://api.github.com/users/ke1337/repos",
            "events_url": "https://api.github.com/users/ke1337/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ke1337/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-12-16T01:59:00Z",
        "updated_at": "2020-12-16T01:59:00Z",
        "author_association": "CONTRIBUTOR",
        "body": "The current behavior of BFC arena could be faulty in large scale distributed training if there's hardware failure, where error from cudaMalloc is ignored and the code keeps trying. We probably have been lucky not hitting hang in cudaMalloc though.\r\nAs for CheckDevice, I checked the history and didn't find any issues associated with it. However, most of our tests are single GPU with release build, so the error probably won't trigger. cudaSetDevice could be called from user thread, and if there's no much cost of enabling it for Release (as most allocation is from BFC arena), maybe we should consider enable it for all builds.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/745713235/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/745745362",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4656#issuecomment-745745362",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4656",
        "id": 745745362,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTc0NTM2Mg==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-12-16T03:46:45Z",
        "updated_at": "2020-12-16T03:47:37Z",
        "author_association": "MEMBER",
        "body": "The code retries with a backoff in the requested size until it fails to allocate the originally requested size, so it should in general cope with a hardware failure. \r\n\r\nThe unit test hangs because of the unusually small requested allocation size of 1024 bytes. Usually the arena grows in chunks of 1MB or more that are then split up so we would typically get a much larger requested allocation. \r\n\r\n```\r\n  static constexpr float kBackpedalFactor = 0.9f;\r\n  // Try allocating less memory.\r\n  while (mem_addr == nullptr) {\r\n    bytes = RoundedBytes(static_cast<size_t>(bytes * kBackpedalFactor));\r\n    if (bytes < rounded_bytes)\r\n      break;\r\n\r\n    mem_addr = safe_alloc(bytes);\r\n  }\r\n```\r\n\r\nWhen the requested bytes is so small, the backpedal of 10% results in a reduction that is undone by the rounding to a 256 byte boundary in `RoundedBytes` when `bytes` is reduced to 2304. \r\n\r\nI'll send a PR to address that edge case.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/745745362/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/748714804",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4656#issuecomment-748714804",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4656",
        "id": 748714804,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODcxNDgwNA==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-12-21T01:56:54Z",
        "updated_at": "2020-12-21T01:56:54Z",
        "author_association": "MEMBER",
        "body": "Closing as I believe the root issue (BFCArena allocation backoff hit inifinite loop) and related issue (attempting to test CUDA allocator on machine with no CUDA device) are both fixed.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/748714804/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/749745277",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4656#issuecomment-749745277",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4656",
        "id": 749745277,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTc0NTI3Nw==",
        "user": {
            "login": "leimao",
            "id": 17606112,
            "node_id": "MDQ6VXNlcjE3NjA2MTEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/17606112?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leimao",
            "html_url": "https://github.com/leimao",
            "followers_url": "https://api.github.com/users/leimao/followers",
            "following_url": "https://api.github.com/users/leimao/following{/other_user}",
            "gists_url": "https://api.github.com/users/leimao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leimao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leimao/subscriptions",
            "organizations_url": "https://api.github.com/users/leimao/orgs",
            "repos_url": "https://api.github.com/users/leimao/repos",
            "events_url": "https://api.github.com/users/leimao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leimao/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-12-22T19:52:28Z",
        "updated_at": "2020-12-22T19:52:28Z",
        "author_association": "NONE",
        "body": "I also got the same problem when I was building an ONNXRuntime Docker container. I guess it is not a good idea to turn on the test during the Docker image building process.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/749745277/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]