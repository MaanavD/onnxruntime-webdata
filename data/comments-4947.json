[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/682260987",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4947#issuecomment-682260987",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4947",
        "id": 682260987,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjI2MDk4Nw==",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-28T00:41:05Z",
        "updated_at": "2020-08-28T00:41:05Z",
        "author_association": "MEMBER",
        "body": "@yuslepukhin Is it correct?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/682260987/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/682613677",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4947#issuecomment-682613677",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4947",
        "id": 682613677,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjYxMzY3Nw==",
        "user": {
            "login": "Craigacp",
            "id": 729696,
            "node_id": "MDQ6VXNlcjcyOTY5Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/729696?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Craigacp",
            "html_url": "https://github.com/Craigacp",
            "followers_url": "https://api.github.com/users/Craigacp/followers",
            "following_url": "https://api.github.com/users/Craigacp/following{/other_user}",
            "gists_url": "https://api.github.com/users/Craigacp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Craigacp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Craigacp/subscriptions",
            "organizations_url": "https://api.github.com/users/Craigacp/orgs",
            "repos_url": "https://api.github.com/users/Craigacp/repos",
            "events_url": "https://api.github.com/users/Craigacp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Craigacp/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-28T14:26:04Z",
        "updated_at": "2020-08-28T14:34:15Z",
        "author_association": "CONTRIBUTOR",
        "body": "Hmm, I wrote it as capacity because the offset into a `Buffer` wasn't a concept that I thought it should track as it's essentially treating a `java.nio.Buffer` as a complete ndarray that you can't slice. I didn't realise the `Buffer.wrap` call set the offset and that people would expect it to be semantically meaningful. Note that the `IntBuffer.wrap` call uses the whole backing array as the buffer, not the slice that's selected, it just sets the offset into the buffer to be the specified point. I guess at least it should state in the docs that it copies the whole buffer.\r\n\r\nWhat's the use case for passing in chunks of a `Buffer`?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/682613677/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/682713092",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4947#issuecomment-682713092",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4947",
        "id": 682713092,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjcxMzA5Mg==",
        "user": {
            "login": "daveray",
            "id": 51405,
            "node_id": "MDQ6VXNlcjUxNDA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/51405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/daveray",
            "html_url": "https://github.com/daveray",
            "followers_url": "https://api.github.com/users/daveray/followers",
            "following_url": "https://api.github.com/users/daveray/following{/other_user}",
            "gists_url": "https://api.github.com/users/daveray/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/daveray/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/daveray/subscriptions",
            "organizations_url": "https://api.github.com/users/daveray/orgs",
            "repos_url": "https://api.github.com/users/daveray/repos",
            "events_url": "https://api.github.com/users/daveray/events{/privacy}",
            "received_events_url": "https://api.github.com/users/daveray/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-28T15:28:48Z",
        "updated_at": "2020-08-28T15:28:48Z",
        "author_association": "NONE",
        "body": "I have a large array in memory and would like to create tensors from parts of it without another array allocation (I understand that OnnxTensor will have to copy that bit of data at some point, in particular the non-`data.isDirect()` path). \r\n\r\nThe contract of reading from a buffer is you can read from the current position up to the limit (designated via `remaining` or `hasRemaining`). It'll throw `BufferUnderflowException` if you try to read past its limit.\r\n\r\nI think you'll find replacing `capacity()` with `remaining()` will do the right thing. For example the `tmp.put(data)` here will only read from the current position to the limit:\r\n\r\n```\r\nByteBuffer buffer = ByteBuffer.allocateDirect(bufferSize).order(ByteOrder.nativeOrder());\r\n        tmp = buffer.asIntBuffer();\r\n        tmp.put(data);\r\n```\r\n\r\nthe behavior of the `isDirect()` path I guess depends on how the buffer is used in the native code, but I don't have a direct buffer so I guess it isn't affecting me.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/682713092/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/682713444",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4947#issuecomment-682713444",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4947",
        "id": 682713444,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjcxMzQ0NA==",
        "user": {
            "login": "Craigacp",
            "id": 729696,
            "node_id": "MDQ6VXNlcjcyOTY5Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/729696?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Craigacp",
            "html_url": "https://github.com/Craigacp",
            "followers_url": "https://api.github.com/users/Craigacp/followers",
            "following_url": "https://api.github.com/users/Craigacp/following{/other_user}",
            "gists_url": "https://api.github.com/users/Craigacp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Craigacp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Craigacp/subscriptions",
            "organizations_url": "https://api.github.com/users/Craigacp/orgs",
            "repos_url": "https://api.github.com/users/Craigacp/repos",
            "events_url": "https://api.github.com/users/Craigacp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Craigacp/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-28T15:29:03Z",
        "updated_at": "2020-08-28T15:37:50Z",
        "author_association": "CONTRIBUTOR",
        "body": "The method should probably use `buffer.limit()` rather than `buffer.capacity()`, which is a straightforward fix, and definitely should be documented that it operates on the whole of the filled buffer. Potentially it could also have an optional parameter which controlled if it looks at the buffer position or not.\r\n\r\nWhen I use Buffers for moving around tensor data I don't tend to consider the position within that buffer to be a useful piece of state, it's not got a good analogy to an ndarray (as it's too primitive to be a functional slice). Given you can pass in whole batches of data to be scored at once, rather than slicing it into separate buffers inducing a copy, it seems better to do that.\r\n\r\nEdit: I'm happy to switch it over to use limit (as that's a bug on my part, though not the issue you're hitting), and if we add a boolean flag that lets it read the whole buffer vs from the position (i.e. switch `limit` vs `remaining` with the `limit` one doc'd that it will ignore the position) would that meet your need?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/682713444/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/682733982",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4947#issuecomment-682733982",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4947",
        "id": 682733982,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjczMzk4Mg==",
        "user": {
            "login": "daveray",
            "id": 51405,
            "node_id": "MDQ6VXNlcjUxNDA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/51405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/daveray",
            "html_url": "https://github.com/daveray",
            "followers_url": "https://api.github.com/users/daveray/followers",
            "following_url": "https://api.github.com/users/daveray/following{/other_user}",
            "gists_url": "https://api.github.com/users/daveray/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/daveray/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/daveray/subscriptions",
            "organizations_url": "https://api.github.com/users/daveray/orgs",
            "repos_url": "https://api.github.com/users/daveray/repos",
            "events_url": "https://api.github.com/users/daveray/events{/privacy}",
            "received_events_url": "https://api.github.com/users/daveray/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-28T15:42:26Z",
        "updated_at": "2020-08-28T15:42:26Z",
        "author_association": "NONE",
        "body": "The flag would work for me assuming the example above produces the expected behavior. Sorry to be a pest, but why not just follow the contract of `Buffer` so there are no surprises?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/682733982/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/682756012",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4947#issuecomment-682756012",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4947",
        "id": 682756012,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4Mjc1NjAxMg==",
        "user": {
            "login": "Craigacp",
            "id": 729696,
            "node_id": "MDQ6VXNlcjcyOTY5Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/729696?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Craigacp",
            "html_url": "https://github.com/Craigacp",
            "followers_url": "https://api.github.com/users/Craigacp/followers",
            "following_url": "https://api.github.com/users/Craigacp/following{/other_user}",
            "gists_url": "https://api.github.com/users/Craigacp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Craigacp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Craigacp/subscriptions",
            "organizations_url": "https://api.github.com/users/Craigacp/orgs",
            "repos_url": "https://api.github.com/users/Craigacp/repos",
            "events_url": "https://api.github.com/users/Craigacp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Craigacp/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-28T15:51:51Z",
        "updated_at": "2020-08-28T15:53:00Z",
        "author_association": "CONTRIBUTOR",
        "body": "Because the buffer semantics aren't ideal for an interchange format for numerical data as the position is usually irrelevant (and causes issues like needing to be reset each time the buffer is converted into an ONNXTensor which is very confusing if you're coming at it from an ML or Python perspective). Unfortunately until MemorySegment lands it's the only option inside the JDK.\r\n\r\nI'll work up a PR today or Monday, and then we can discuss the exact semantics in reference to some code?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/682756012/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/682794907",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4947#issuecomment-682794907",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4947",
        "id": 682794907,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4Mjc5NDkwNw==",
        "user": {
            "login": "daveray",
            "id": 51405,
            "node_id": "MDQ6VXNlcjUxNDA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/51405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/daveray",
            "html_url": "https://github.com/daveray",
            "followers_url": "https://api.github.com/users/daveray/followers",
            "following_url": "https://api.github.com/users/daveray/following{/other_user}",
            "gists_url": "https://api.github.com/users/daveray/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/daveray/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/daveray/subscriptions",
            "organizations_url": "https://api.github.com/users/daveray/orgs",
            "repos_url": "https://api.github.com/users/daveray/repos",
            "events_url": "https://api.github.com/users/daveray/events{/privacy}",
            "received_events_url": "https://api.github.com/users/daveray/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-28T16:05:50Z",
        "updated_at": "2020-08-28T16:05:50Z",
        "author_association": "NONE",
        "body": "I get that the abstraction isn't perfect for what you want to do, but I don't understand what you gain by ignoring the contract. If you follow the contract it'll still work transparently for everyone that's using it naively (position = 0, limit = capacity), but it'll also work transparently for those who are using more \"advanced\" functionality. No flags required. FWIW, the equivalent TF Java API just works.\r\n\r\nEither way, I appreciate you looking into it and providing a workaround. Thanks!",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/682794907/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/683170880",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4947#issuecomment-683170880",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4947",
        "id": 683170880,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4MzE3MDg4MA==",
        "user": {
            "login": "yuslepukhin",
            "id": 11303988,
            "node_id": "MDQ6VXNlcjExMzAzOTg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11303988?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yuslepukhin",
            "html_url": "https://github.com/yuslepukhin",
            "followers_url": "https://api.github.com/users/yuslepukhin/followers",
            "following_url": "https://api.github.com/users/yuslepukhin/following{/other_user}",
            "gists_url": "https://api.github.com/users/yuslepukhin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yuslepukhin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yuslepukhin/subscriptions",
            "organizations_url": "https://api.github.com/users/yuslepukhin/orgs",
            "repos_url": "https://api.github.com/users/yuslepukhin/repos",
            "events_url": "https://api.github.com/users/yuslepukhin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yuslepukhin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-28T22:20:29Z",
        "updated_at": "2020-08-28T22:20:29Z",
        "author_association": "MEMBER",
        "body": "@daveray would you like to create a PR?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/683170880/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/683934170",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4947#issuecomment-683934170",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4947",
        "id": 683934170,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4MzkzNDE3MA==",
        "user": {
            "login": "Craigacp",
            "id": 729696,
            "node_id": "MDQ6VXNlcjcyOTY5Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/729696?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Craigacp",
            "html_url": "https://github.com/Craigacp",
            "followers_url": "https://api.github.com/users/Craigacp/followers",
            "following_url": "https://api.github.com/users/Craigacp/following{/other_user}",
            "gists_url": "https://api.github.com/users/Craigacp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Craigacp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Craigacp/subscriptions",
            "organizations_url": "https://api.github.com/users/Craigacp/orgs",
            "repos_url": "https://api.github.com/users/Craigacp/repos",
            "events_url": "https://api.github.com/users/Craigacp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Craigacp/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-31T17:56:12Z",
        "updated_at": "2020-08-31T17:56:12Z",
        "author_association": "CONTRIBUTOR",
        "body": "On the JNI side it's harder to access the position of a direct `ByteBuffer` (I'll have to pass in position and remaining into the JNI call to avoid calling back into the JVM) and it'll have to do the pointer arithmetic on the C side to get the right position out, so it's going to be a bigger patch than just a Java side fix.\r\n\r\nThere's also another issue, which is should the create method leave the state of the `Buffer` unchanged (i.e. rewind it to the incoming position). It doesn't do that at the moment, because it's not sensitive to the position. I would prefer it to not change the state of the buffer in an observable way (to ONNX Runtime at least), but I'm not sure if that would cause issues for your usecase. @daveray what do you think?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/683934170/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/684981578",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4947#issuecomment-684981578",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4947",
        "id": 684981578,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NDk4MTU3OA==",
        "user": {
            "login": "daveray",
            "id": 51405,
            "node_id": "MDQ6VXNlcjUxNDA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/51405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/daveray",
            "html_url": "https://github.com/daveray",
            "followers_url": "https://api.github.com/users/daveray/followers",
            "following_url": "https://api.github.com/users/daveray/following{/other_user}",
            "gists_url": "https://api.github.com/users/daveray/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/daveray/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/daveray/subscriptions",
            "organizations_url": "https://api.github.com/users/daveray/orgs",
            "repos_url": "https://api.github.com/users/daveray/repos",
            "events_url": "https://api.github.com/users/daveray/events{/privacy}",
            "received_events_url": "https://api.github.com/users/daveray/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-01T16:30:09Z",
        "updated_at": "2020-09-01T16:30:09Z",
        "author_association": "NONE",
        "body": "Hey. Sorry about the delayed response. I think leaving the state of the buffer unchanged would be fine. Thanks!",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/684981578/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/685290429",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4947#issuecomment-685290429",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4947",
        "id": 685290429,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTI5MDQyOQ==",
        "user": {
            "login": "saudet",
            "id": 3328023,
            "node_id": "MDQ6VXNlcjMzMjgwMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3328023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saudet",
            "html_url": "https://github.com/saudet",
            "followers_url": "https://api.github.com/users/saudet/followers",
            "following_url": "https://api.github.com/users/saudet/following{/other_user}",
            "gists_url": "https://api.github.com/users/saudet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saudet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saudet/subscriptions",
            "organizations_url": "https://api.github.com/users/saudet/orgs",
            "repos_url": "https://api.github.com/users/saudet/repos",
            "events_url": "https://api.github.com/users/saudet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saudet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-02T04:38:56Z",
        "updated_at": "2020-09-02T04:38:56Z",
        "author_association": "NONE",
        "body": "> On the JNI side it's harder to access the position of a direct `ByteBuffer` (I'll have to pass in position and remaining into the JNI call to avoid calling back into the JVM) and it'll have to do the pointer arithmetic on the C side to get the right position out, so it's going to be a bigger patch than just a Java side fix.\r\n\r\nAh, the joys of refusing to use a tool like JavaCPP... That's one more thing you're going to need to reinvent! Like I keep telling you, why not put all that stuff in an external library so that it could be useful to other libraries than ORT? I see you've started to rely on multiple libraries in [Tribuo](https://github.com/oracle/tribuo/). (BTW, is this one an official Oracle project? Or is that also a personal hobby that just happens to be in a repository under Oracle but that isn't endorsed by Oracle in any way?) Do you realize that you'll need to keep patching all the libraries that you support there one by one to fix these kinds of issues when they pop up?\r\n\r\n@daveray FYI, the C/C++ API mapped with JavaCPP has no such issues: \r\nhttps://github.com/bytedeco/javacpp-presets/tree/master/onnxruntime",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/685290429/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 1,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/685299330",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4947#issuecomment-685299330",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4947",
        "id": 685299330,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTI5OTMzMA==",
        "user": {
            "login": "Craigacp",
            "id": 729696,
            "node_id": "MDQ6VXNlcjcyOTY5Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/729696?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Craigacp",
            "html_url": "https://github.com/Craigacp",
            "followers_url": "https://api.github.com/users/Craigacp/followers",
            "following_url": "https://api.github.com/users/Craigacp/following{/other_user}",
            "gists_url": "https://api.github.com/users/Craigacp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Craigacp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Craigacp/subscriptions",
            "organizations_url": "https://api.github.com/users/Craigacp/orgs",
            "repos_url": "https://api.github.com/users/Craigacp/repos",
            "events_url": "https://api.github.com/users/Craigacp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Craigacp/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-02T05:04:42Z",
        "updated_at": "2020-09-02T05:04:42Z",
        "author_association": "CONTRIBUTOR",
        "body": "@saudet [Tribuo](https://tribuo.org) will be officially launched at the Java developer day in a few weeks. It's been used in production inside Oracle for several years and we're excited to share it with everyone. I look forward to your contributions as we help to build the ML ecosystem on the Java platform.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/685299330/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/695070217",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4947#issuecomment-695070217",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4947",
        "id": 695070217,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTA3MDIxNw==",
        "user": {
            "login": "Craigacp",
            "id": 729696,
            "node_id": "MDQ6VXNlcjcyOTY5Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/729696?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Craigacp",
            "html_url": "https://github.com/Craigacp",
            "followers_url": "https://api.github.com/users/Craigacp/followers",
            "following_url": "https://api.github.com/users/Craigacp/following{/other_user}",
            "gists_url": "https://api.github.com/users/Craigacp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Craigacp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Craigacp/subscriptions",
            "organizations_url": "https://api.github.com/users/Craigacp/orgs",
            "repos_url": "https://api.github.com/users/Craigacp/repos",
            "events_url": "https://api.github.com/users/Craigacp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Craigacp/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-18T20:27:11Z",
        "updated_at": "2020-09-18T20:27:11Z",
        "author_association": "CONTRIBUTOR",
        "body": "I've made a PR which should fix this issue. @daveray could you check it over? I think the test case I added accurately captures your usecase, but let me know if it doesn't. Sorry it took a while, got caught up with Tribuo launch stuff.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/695070217/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/703759514",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4947#issuecomment-703759514",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4947",
        "id": 703759514,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcwMzc1OTUxNA==",
        "user": {
            "login": "yuslepukhin",
            "id": 11303988,
            "node_id": "MDQ6VXNlcjExMzAzOTg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11303988?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yuslepukhin",
            "html_url": "https://github.com/yuslepukhin",
            "followers_url": "https://api.github.com/users/yuslepukhin/followers",
            "following_url": "https://api.github.com/users/yuslepukhin/following{/other_user}",
            "gists_url": "https://api.github.com/users/yuslepukhin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yuslepukhin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yuslepukhin/subscriptions",
            "organizations_url": "https://api.github.com/users/yuslepukhin/orgs",
            "repos_url": "https://api.github.com/users/yuslepukhin/repos",
            "events_url": "https://api.github.com/users/yuslepukhin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yuslepukhin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-10-05T16:58:12Z",
        "updated_at": "2020-10-05T16:58:12Z",
        "author_association": "MEMBER",
        "body": "I think we may close it if everyone agrees?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/703759514/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]