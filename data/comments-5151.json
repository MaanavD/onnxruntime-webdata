[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/692448220",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5151#issuecomment-692448220",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5151",
        "id": 692448220,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjQ0ODIyMA==",
        "user": {
            "login": "chenhu-wang",
            "id": 48076916,
            "node_id": "MDQ6VXNlcjQ4MDc2OTE2",
            "avatar_url": "https://avatars.githubusercontent.com/u/48076916?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chenhu-wang",
            "html_url": "https://github.com/chenhu-wang",
            "followers_url": "https://api.github.com/users/chenhu-wang/followers",
            "following_url": "https://api.github.com/users/chenhu-wang/following{/other_user}",
            "gists_url": "https://api.github.com/users/chenhu-wang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chenhu-wang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chenhu-wang/subscriptions",
            "organizations_url": "https://api.github.com/users/chenhu-wang/orgs",
            "repos_url": "https://api.github.com/users/chenhu-wang/repos",
            "events_url": "https://api.github.com/users/chenhu-wang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chenhu-wang/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-15T03:58:55Z",
        "updated_at": "2020-09-16T04:55:56Z",
        "author_association": "NONE",
        "body": "@yufenglee @zhanghuanrong @duli2012 could you please help check? Any feedback would be appreciated.\r\nsome more info:\r\nAs you can see resize in pytorch.interpolate\r\nhttps://pytorch.org/docs/stable/nn.functional.html#interpolate\r\nFor the param size : size (int or Tuple[int] or Tuple[int, int] or Tuple[int, int, int]) â€“ output spatial size.\r\nThis param only specify output spatial size: new depth, new height and new width. Batch and channel dimension are same and processed one by one, which means interpolate by coordination transformation is not applied to batch and channel dimension.\r\n\r\nAnd resize in tensorflow.resize\r\nhttps://www.tensorflow.org/api_docs/python/tf/image/resize\r\nThe size is: int32 tensor of 2 elements: new height, new width. The new size for the images.\r\nThis also means the whole tensor is processed batch by batch, channel by channel, resize subtensor within each channel, not interpolate on batch and channel dimension.\r\n\r\nImagine a model with resize ops is trained by this manner, then converting to ONNX. If we use onnx run time to infer, we should comply with the same behavior as in training process because we are using weights from training to infer. Onnx run time resize batch and channel as well although batch and channel size is the same for input and output tensor, which is not batch by batch, channel by channel resize manner in some case, because coordinate_transform_mode and nearest_mode can affect the output batch for transforming input batch.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/692448220/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/697918375",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5151#issuecomment-697918375",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5151",
        "id": 697918375,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5NzkxODM3NQ==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-23T19:15:19Z",
        "updated_at": "2020-09-23T19:23:02Z",
        "author_association": "MEMBER",
        "body": "Thank you for the detailed analysis - yes, there seems to be some inconsistency between the \"generic\" implementation (each block in \"UpsampleNearest\") and the \"optimized\" implementation (\"UpsampleNearest2x\" - where scale of batch and channel are both 1 scale for H and W are both 2). \r\n\r\n\"Coordinate transformation should not be applied to the batch and channel(scale == 1.0f) dimension. This is a nature behaviour and seemed the behavior of other platform(TF, pytorch...) \" - I think we probably should skip co-ordinate transformation for ANY dimension (not just batch and channel) when scale for that dimension is 1.0. Does this seem like a good generalization that will address the issue that you raised ? ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/697918375/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/698128588",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5151#issuecomment-698128588",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5151",
        "id": 698128588,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODEyODU4OA==",
        "user": {
            "login": "chenhu-wang",
            "id": 48076916,
            "node_id": "MDQ6VXNlcjQ4MDc2OTE2",
            "avatar_url": "https://avatars.githubusercontent.com/u/48076916?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chenhu-wang",
            "html_url": "https://github.com/chenhu-wang",
            "followers_url": "https://api.github.com/users/chenhu-wang/followers",
            "following_url": "https://api.github.com/users/chenhu-wang/following{/other_user}",
            "gists_url": "https://api.github.com/users/chenhu-wang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chenhu-wang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chenhu-wang/subscriptions",
            "organizations_url": "https://api.github.com/users/chenhu-wang/orgs",
            "repos_url": "https://api.github.com/users/chenhu-wang/repos",
            "events_url": "https://api.github.com/users/chenhu-wang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chenhu-wang/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-24T05:52:11Z",
        "updated_at": "2020-09-24T05:52:11Z",
        "author_association": "NONE",
        "body": "@hariharans29, Really thanks for investigating. And I agree that coordinate transformation should be skipped for any dimension which have 1.0 as scale or \"input_size == output_size\". Conduct coordinate map only if we really need a resize, and this is also consistent with pytorch implementation: [linear](https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/cpu/UpSampleMoreKernel.cpp#L23), [nearest](https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/cpu/UpSampleKernel.cpp#L42). Our model infer accuracy is correct when return output_index directly as input_index when scale is 1.0.\r\nBTW, for resize with cubic mode, the [implementation only support bicubic](https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/cpu/UpSampleKernel.cpp#L42) but have no check if input is 2D or 4D. This lead to incorrect result without any exception or warning. The[ same check](https://github.com/microsoft/onnxruntime/blob/master/onnxruntime/core/providers/cpu/tensor/upsample.cc#L644) is done for linear mode.\r\n\r\nRegards!",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/698128588/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/698139842",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5151#issuecomment-698139842",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5151",
        "id": 698139842,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODEzOTg0Mg==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-24T06:22:30Z",
        "updated_at": "2020-09-24T06:22:30Z",
        "author_association": "MEMBER",
        "body": "Thank you.\r\n\r\nI will try and propose a bug fix for the original issue you have raised here. But it won't make the upcoming release. Will be there in master soon.\r\n\r\nRegarding the cubic check, I had the same doubt and checked with the original author  - it is actually done indirectly by validating scales - https://github.com/microsoft/onnxruntime/blob/6ad39819c20c278a4c3ec20ee838373008ed7ec7/onnxruntime/core/providers/cpu/tensor/upsample.h#L280. I will try and streamline the checks so as to not confuse the code reader.\r\n\r\nThanks for raising this.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/698139842/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]