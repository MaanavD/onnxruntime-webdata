[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/703886744",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5379#issuecomment-703886744",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5379",
        "id": 703886744,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcwMzg4Njc0NA==",
        "user": {
            "login": "shivSD",
            "id": 30268517,
            "node_id": "MDQ6VXNlcjMwMjY4NTE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/30268517?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shivSD",
            "html_url": "https://github.com/shivSD",
            "followers_url": "https://api.github.com/users/shivSD/followers",
            "following_url": "https://api.github.com/users/shivSD/following{/other_user}",
            "gists_url": "https://api.github.com/users/shivSD/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shivSD/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shivSD/subscriptions",
            "organizations_url": "https://api.github.com/users/shivSD/orgs",
            "repos_url": "https://api.github.com/users/shivSD/repos",
            "events_url": "https://api.github.com/users/shivSD/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shivSD/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-10-05T21:01:47Z",
        "updated_at": "2020-10-05T21:02:25Z",
        "author_association": "NONE",
        "body": "Update:  i tried using [this](https://github.com/onnx/models/tree/master/vision/object_detection_segmentation/tiny-yolov2) onnx model and it loads without any error but does not give any output (no bounding box). Here is the my inference code. Please let me know if there is any wrong in the implementation\r\n\r\n```\r\nimport numpy as np\r\nimport onnxruntime as rt\r\nfrom PIL import Image,ImageDraw\r\n\r\n\r\nsess = rt.InferenceSession(\"tiny_yolov2/tinyyolov_remove.onnx\")\r\ninput_name = sess.get_inputs()[0].name\r\n\r\nimg = Image.open('test.jpg')\r\nimg = img.resize((416, 416)) #for tiny_yolov2\r\nX = np.asarray(img)\r\nX = X.transpose(2,0,1)\r\nX = X.reshape(1,3,416,416)\r\nout = sess.run(None, {input_name: X.astype(np.float32)})\r\nout = out[0][0]\r\nnumClasses = 20\r\nanchors = [1.08, 1.19, 3.42, 4.41, 6.63, 11.38, 9.42, 5.11, 16.62, 10.52]\r\n\r\ndef sigmoid(x, derivative=False):\r\n    return x*(1-x) if derivative else 1/(1+np.exp(-x))\r\n\r\ndef softmax(x):\r\n    scoreMatExp = np.exp(np.asarray(x))\r\n    return scoreMatExp / scoreMatExp.sum(0)\r\n\r\nclut = [(0,0,0),(255,0,0),(255,0,255),(0,0,255),(0,255,0),(0,255,128),\r\n  (128,255,0),(128,128,0),(0,128,255),(128,0,128),\r\n  (255,0,128),(128,0,255),(255,128,128),(128,255,128),(255,255,0),\r\n  (255,128,128),(128,128,255),(255,128,128),(128,255,128)]\r\n\r\nlabel = [\"aeroplane\",\"bicycle\",\"bird\",\"boat\",\"bottle\",\r\n         \"bus\",\"car\",\"cat\",\"chair\",\"cow\",\"diningtable\",\r\n         \"dog\",\"horse\",\"motorbike\",\"person\",\"pottedplant\",\r\n          \"sheep\",\"sofa\",\"train\",\"tvmonitor\"]\r\n\r\ndraw = ImageDraw.Draw(img)\r\n\r\nfor cy in range(0,13):\r\n    for cx in range(0,13):\r\n        for b in range(0,5):\r\n            channel = b*(numClasses+5)\r\n            tx = out[channel  ][cy][cx]\r\n            ty = out[channel+1][cy][cx]\r\n            tw = out[channel+2][cy][cx]\r\n            th = out[channel+3][cy][cx]\r\n            tc = out[channel+4][cy][cx]\r\n            x = (float(cx) + sigmoid(tx))*32\r\n            y = (float(cy) + sigmoid(ty))*32\r\n\r\n            w = np.exp(tw) * 32 * anchors[2*b  ]\r\n            h = np.exp(th) * 32 * anchors[2*b+1]\r\n\r\n            confidence = sigmoid(tc)\r\n            print(confidence)\r\n\r\nclasses = np.zeros(numClasses)\r\nfor c in range(0,numClasses):\r\n    classes[c] = out[channel + 5 +c][cy][cx]\r\n    classes = softmax(classes)\r\n    detectedClass = classes.argmax()\r\n\r\nif 0.5< classes[detectedClass]*confidence:\r\n    color =clut[detectedClass]\r\n    x = x - w/2\r\n    y = y - h/2\r\n    draw.line((x  ,y  ,x+w,y ),fill=color)\r\n    draw.line((x  ,y  ,x  ,y+h),fill=color)\r\n    draw.line((x+w,y  ,x+w,y+h),fill=color)\r\n    draw.line((x  ,y+h,x+w,y+h),fill=color)\r\n\r\nimg.show()\r\nimg.save(\"result.png\")\r\n```\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/703886744/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/704023605",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5379#issuecomment-704023605",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5379",
        "id": 704023605,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcwNDAyMzYwNQ==",
        "user": {
            "login": "jcwchen",
            "id": 14194980,
            "node_id": "MDQ6VXNlcjE0MTk0OTgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/14194980?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jcwchen",
            "html_url": "https://github.com/jcwchen",
            "followers_url": "https://api.github.com/users/jcwchen/followers",
            "following_url": "https://api.github.com/users/jcwchen/following{/other_user}",
            "gists_url": "https://api.github.com/users/jcwchen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jcwchen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jcwchen/subscriptions",
            "organizations_url": "https://api.github.com/users/jcwchen/orgs",
            "repos_url": "https://api.github.com/users/jcwchen/repos",
            "events_url": "https://api.github.com/users/jcwchen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jcwchen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-10-06T04:43:53Z",
        "updated_at": "2020-10-06T04:56:29Z",
        "author_association": "MEMBER",
        "body": "Hi @shivSD,\r\nI would say onnxruntime is good with this model (tiny yolov2) from onnx/models because it can be correctly inferred by onnxruntime. And there are some bugs in your inference code... IMO, it should not be an onnxruntime issue.\r\n Since I am not very familiar with tiny yolov2, I will suggest you to get the best help from tinyyolo team. Thank you.\r\nHere are some possible bugs I found in the code\r\n- The length of clut should be 20 instead of 19.\r\n- If the model cannot detect the bounding box, you might need to lower the threshold.\r\n- The last section of drawing is in a wrong place. It should be included into the previous nested loop.\r\n\r\nA possible correction might be as follows:\r\n```\r\nimport numpy as np\r\nimport onnxruntime as rt\r\nfrom PIL import Image,ImageDraw\r\n\r\n\r\nsess = rt.InferenceSession(\"tinyyolov2-8.onnx\")\r\ninput_name = sess.get_inputs()[0].name\r\n\r\nimg = Image.open('test.jpg')\r\nimg = img.resize((416, 416)) #for tiny_yolov2\r\nX = np.asarray(img)\r\nX = X.transpose(2,0,1)\r\nX = X.reshape(1,3,416,416)\r\nout = sess.run(None, {input_name: X.astype(np.float32)})\r\nout = out[0][0]\r\nnumClasses = 20\r\nanchors = [1.08, 1.19, 3.42, 4.41, 6.63, 11.38, 9.42, 5.11, 16.62, 10.52]\r\n\r\ndef sigmoid(x, derivative=False):\r\n    return x*(1-x) if derivative else 1/(1+np.exp(-x))\r\n\r\ndef softmax(x):\r\n    scoreMatExp = np.exp(np.asarray(x))\r\n    return scoreMatExp / scoreMatExp.sum(0)\r\n\r\nclut = [(0,0,0),(255,0,0),(255,0,255),(0,0,255),(0,255,0),(0,255,128),\r\n        (128,255,0),(128,128,0),(0,128,255),(128,0,128),\r\n        (255,0,128),(128,0,255),(255,128,128),(128,255,128),(255,255,0),\r\n        (255,128,128),(128,128,255),(255,128,128),(128,255,128),(128,255,128)]\r\n\r\nlabel = [\"aeroplane\",\"bicycle\",\"bird\",\"boat\",\"bottle\",\r\n         \"bus\",\"car\",\"cat\",\"chair\",\"cow\",\"diningtable\",\r\n         \"dog\",\"horse\",\"motorbike\",\"person\",\"pottedplant\",\r\n          \"sheep\",\"sofa\",\"train\",\"tvmonitor\"]\r\n\r\ndraw = ImageDraw.Draw(img)\r\nthreshold = 0.1\r\n\r\nfor cy in range(0,13):\r\n    for cx in range(0,13):\r\n        for b in range(0,5):\r\n            channel = b*(numClasses+5)\r\n            tx = out[channel  ][cy][cx]\r\n            ty = out[channel+1][cy][cx]\r\n            tw = out[channel+2][cy][cx]\r\n            th = out[channel+3][cy][cx]\r\n            tc = out[channel+4][cy][cx]\r\n            x = (float(cx) + sigmoid(tx))*32\r\n            y = (float(cy) + sigmoid(ty))*32\r\n\r\n            w = np.exp(tw) * 32 * anchors[2*b  ]\r\n            h = np.exp(th) * 32 * anchors[2*b+1]\r\n\r\n            confidence = sigmoid(tc)\r\n            print(confidence)\r\n\r\n            classes = np.zeros(numClasses)\r\n            for c in range(0,numClasses):\r\n                classes[c] = out[channel + 5 +c][cy][cx]\r\n                classes = softmax(classes)\r\n                detectedClass = classes.argmax()\r\n\r\n            if threshold < classes[detectedClass]*confidence:\r\n                color =clut[detectedClass]\r\n                x = x - w/2\r\n                y = y - h/2\r\n                draw.line((x  ,y  ,x+w,y ),fill=color)\r\n                draw.line((x  ,y  ,x  ,y+h),fill=color)\r\n                draw.line((x+w,y  ,x+w,y+h),fill=color)\r\n                draw.line((x  ,y+h,x+w,y+h),fill=color)\r\n\r\nimg.show()\r\nimg.save(\"result.png\")\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/704023605/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/748439607",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5379#issuecomment-748439607",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5379",
        "id": 748439607,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODQzOTYwNw==",
        "user": {
            "login": "stale[bot]",
            "id": 26384082,
            "node_id": "MDM6Qm90MjYzODQwODI=",
            "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stale%5Bbot%5D",
            "html_url": "https://github.com/apps/stale",
            "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "created_at": "2020-12-19T08:12:54Z",
        "updated_at": "2020-12-19T08:12:54Z",
        "author_association": "NONE",
        "body": "This issue has been automatically marked as stale due to inactivity and will be closed in 7 days if no further activity occurs. If further support is needed, please provide an update and/or more details.\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/748439607/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]