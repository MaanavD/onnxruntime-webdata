[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/713825785",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5555#issuecomment-713825785",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5555",
        "id": 713825785,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzgyNTc4NQ==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-10-21T19:31:01Z",
        "updated_at": "2020-10-21T19:31:01Z",
        "author_association": "MEMBER",
        "body": "The problem is with this line:\r\n\r\nval = Ort::Value::CreateTensor<float>(cuda_allocator[i]->GetInfo(), input_tensor_values[k].data(), input_tensor_size, input_node_dims.data(), 4);\r\n\r\n`input_tensor_values[k].data()` will provide a pointer to memory on CPU whereas the tensor is advertised to ORT as a tensor on CUDA (`cuda_allocator[i]->GetInfo()`). This is a mis-match - you must provide it a buffer on CUDA to with cuda_allocator[i]->GetInfo() while creating the tensor.\r\n\r\nCould you please try that ?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/713825785/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/714291708",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5555#issuecomment-714291708",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5555",
        "id": 714291708,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDI5MTcwOA==",
        "user": {
            "login": "marcown",
            "id": 17683840,
            "node_id": "MDQ6VXNlcjE3NjgzODQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/17683840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marcown",
            "html_url": "https://github.com/marcown",
            "followers_url": "https://api.github.com/users/marcown/followers",
            "following_url": "https://api.github.com/users/marcown/following{/other_user}",
            "gists_url": "https://api.github.com/users/marcown/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marcown/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marcown/subscriptions",
            "organizations_url": "https://api.github.com/users/marcown/orgs",
            "repos_url": "https://api.github.com/users/marcown/repos",
            "events_url": "https://api.github.com/users/marcown/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marcown/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-10-22T07:27:46Z",
        "updated_at": "2020-10-22T07:27:46Z",
        "author_association": "NONE",
        "body": "Thank you for the response!\r\n\r\nCould you provide an example how to get the data on the gpu / in a cuda buffer before using it as an input to CreateTensor? I cannot find it in the docs or code examples.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/714291708/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/714312284",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5555#issuecomment-714312284",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5555",
        "id": 714312284,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDMxMjI4NA==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-10-22T08:05:54Z",
        "updated_at": "2020-10-22T08:05:54Z",
        "author_association": "MEMBER",
        "body": "I couldnâ€™t find one example directly. But you are almost there- once you have used cuda allocator to allocate memory on CUDA, you can use cudaMempy (not part of ORT API, it is part of part of CUDA toolkit) to memcpy cpu data over to the device allocated memory and you should be able to construct the OrtValue using this buffer and use it. I ll try to add some example soon - but I may not be able to get it done immediately. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/714312284/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/714322866",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5555#issuecomment-714322866",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5555",
        "id": 714322866,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDMyMjg2Ng==",
        "user": {
            "login": "marcown",
            "id": 17683840,
            "node_id": "MDQ6VXNlcjE3NjgzODQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/17683840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marcown",
            "html_url": "https://github.com/marcown",
            "followers_url": "https://api.github.com/users/marcown/followers",
            "following_url": "https://api.github.com/users/marcown/following{/other_user}",
            "gists_url": "https://api.github.com/users/marcown/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marcown/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marcown/subscriptions",
            "organizations_url": "https://api.github.com/users/marcown/orgs",
            "repos_url": "https://api.github.com/users/marcown/repos",
            "events_url": "https://api.github.com/users/marcown/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marcown/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-10-22T08:24:07Z",
        "updated_at": "2020-10-22T08:24:07Z",
        "author_association": "NONE",
        "body": "Ok, I will try it and post my results. Thank you for the fast responses! :)",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/714322866/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/714353626",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5555#issuecomment-714353626",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5555",
        "id": 714353626,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDM1MzYyNg==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-10-22T09:14:52Z",
        "updated_at": "2020-10-22T09:17:29Z",
        "author_association": "MEMBER",
        "body": "Sure - I quickly hacked some code - (maybe a little raw):\r\n\r\n#include <cuda_runtime.h>\r\n\r\nconst std::array<int64_t, 2> x_shape = {3, 2};\r\nstd::array<float, 3 * 2> x_values = {1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f};\r\n\r\n// allocate memory on CUDA \r\n// De-allocate using Free() when the OrtValue using it is no longer going to be used\r\nvoid* input_data = cuda_allocator.Alloc(x_values.size() * sizeof(float));\r\nASSERT_NE(input_data, nullptr);\r\n\r\n// initialize the memory on CUDA with data we want (blocking call)\r\n// MISSING PIECE IN YOUR CODE\r\ncudaMemcpy(input_data, x_values.data(), sizeof(float) * x_values.size(), cudaMemcpyHostToDevice);\r\n\r\n  // Create an OrtValue tensor backed by data on CUDA memory\r\n  Ort::Value bound_x = Ort::Value::CreateTensor(info_cuda, reinterpret_cast<float*>(input_data), x_values.size(),\r\n                                                x_shape.data(), x_shape.size());\r\n\r\ncudaMemcpy() should be defined in cudart (part of CUDA library) , so the app should link to the cuda lib (It is not enough to link with onnxruntime as this is not an onnxruntime api - notice the cuda header include).  It shouldn't be very hard to get it to work as it is a popular method and there should be a lot of snippets on the web. I ll try and add a test for IOBinding in `test_inference.cc`",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/714353626/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/714470122",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5555#issuecomment-714470122",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5555",
        "id": 714470122,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDQ3MDEyMg==",
        "user": {
            "login": "marcown",
            "id": 17683840,
            "node_id": "MDQ6VXNlcjE3NjgzODQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/17683840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marcown",
            "html_url": "https://github.com/marcown",
            "followers_url": "https://api.github.com/users/marcown/followers",
            "following_url": "https://api.github.com/users/marcown/following{/other_user}",
            "gists_url": "https://api.github.com/users/marcown/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marcown/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marcown/subscriptions",
            "organizations_url": "https://api.github.com/users/marcown/orgs",
            "repos_url": "https://api.github.com/users/marcown/repos",
            "events_url": "https://api.github.com/users/marcown/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marcown/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-10-22T12:47:55Z",
        "updated_at": "2020-10-22T12:49:00Z",
        "author_association": "NONE",
        "body": "Thank you, I got it working with the following code:\r\n\r\n```cpp\r\n\r\n    vector<void*> input_data(partitions);\r\n    ....\r\n    \r\n    shared_ptr<Ort::Session> session_ptr = container_collection[0].get_session();\r\n    vector<void*> input_data(partitions);\r\n    Ort::MemoryInfo memory_info_cuda(\"Cuda\", OrtAllocatorType::OrtArenaAllocator, 0, OrtMemTypeDefault);\r\n    Ort::Allocator memory_allocator(*session_ptr, memory_info_cuda);\r\n\r\n    ...\r\n\r\n    input_data[k] = memory_allocator.Alloc(sizeof(float) * input_tensor_size);\r\n    cudaMemcpy(input_data[k], input_tensor_values[k].data(), sizeof(float) * input_tensor_size, cudaMemcpyHostToDevice);\r\n    Ort::Value input_tensor = Ort::Value::CreateTensor<float>(memory_allocator.GetInfo(), reinterpret_cast<float*>(input_data[k]), input_tensor_size, input_node_dims.data(), 4);\r\n\r\n\r\n```\r\n\r\n\r\nHowever, I have another question:\r\n\r\nWhen I set kOrtSessionOptionsConfigUseEnvAllocators to 1 multiple sessions should use the same allocator, is that correct? But we only create the memory_allocator once with the sesssion_ptr pointing to the first session (see above):\r\n\r\n```cpp\r\nOrt::Allocator memory_allocator(*session_ptr, memory_info_cuda);\r\n```\r\n\r\nThere is no difference in the final inference of the multiple sessions if we set this option. \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/714470122/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/714645555",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5555#issuecomment-714645555",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5555",
        "id": 714645555,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDY0NTU1NQ==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-10-22T17:29:23Z",
        "updated_at": "2020-10-22T17:29:38Z",
        "author_association": "MEMBER",
        "body": "Hi @pranavsharma - Could you please help answer the shared allocator question above ?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/714645555/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/716348295",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5555#issuecomment-716348295",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5555",
        "id": 716348295,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxNjM0ODI5NQ==",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-10-26T06:59:58Z",
        "updated_at": "2020-10-26T06:59:58Z",
        "author_association": "MEMBER",
        "body": "> However, I have another question:\r\n> \r\n> When I set kOrtSessionOptionsConfigUseEnvAllocators to 1 multiple sessions should use the same allocator, is that correct? But we only create the memory_allocator once with the sesssion_ptr pointing to the first session (see above):\r\n> \r\n> ```c++\r\n> Ort::Allocator memory_allocator(*session_ptr, memory_info_cuda);\r\n> ```\r\n> \r\n> There is no difference in the final inference of the multiple sessions if we set this option.\r\n\r\nPlease take a look at this test case that demonstrates the usage of the shared allocator feature: https://github.com/microsoft/onnxruntime/blob/master/onnxruntime/test/shared_lib/test_inference.cc#L904. Yes, using a shared allocator shouldn't make any difference to the result of the inference; it might consume less memory though. Also, at this point only CPU allocators can be shared.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/716348295/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/716392787",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5555#issuecomment-716392787",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5555",
        "id": 716392787,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxNjM5Mjc4Nw==",
        "user": {
            "login": "marcown",
            "id": 17683840,
            "node_id": "MDQ6VXNlcjE3NjgzODQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/17683840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marcown",
            "html_url": "https://github.com/marcown",
            "followers_url": "https://api.github.com/users/marcown/followers",
            "following_url": "https://api.github.com/users/marcown/following{/other_user}",
            "gists_url": "https://api.github.com/users/marcown/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marcown/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marcown/subscriptions",
            "organizations_url": "https://api.github.com/users/marcown/orgs",
            "repos_url": "https://api.github.com/users/marcown/repos",
            "events_url": "https://api.github.com/users/marcown/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marcown/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-10-26T08:26:26Z",
        "updated_at": "2020-10-26T08:26:26Z",
        "author_association": "NONE",
        "body": "Ok, thank you!",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/716392787/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]