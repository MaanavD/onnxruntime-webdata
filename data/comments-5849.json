[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/732439955",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5849#issuecomment-732439955",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5849",
        "id": 732439955,
        "node_id": "MDEyOklzc3VlQ29tbWVudDczMjQzOTk1NQ==",
        "user": {
            "login": "zhanghuanrong",
            "id": 5163183,
            "node_id": "MDQ6VXNlcjUxNjMxODM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5163183?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhanghuanrong",
            "html_url": "https://github.com/zhanghuanrong",
            "followers_url": "https://api.github.com/users/zhanghuanrong/followers",
            "following_url": "https://api.github.com/users/zhanghuanrong/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhanghuanrong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhanghuanrong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhanghuanrong/subscriptions",
            "organizations_url": "https://api.github.com/users/zhanghuanrong/orgs",
            "repos_url": "https://api.github.com/users/zhanghuanrong/repos",
            "events_url": "https://api.github.com/users/zhanghuanrong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhanghuanrong/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-11-23T21:34:33Z",
        "updated_at": "2020-11-23T21:34:33Z",
        "author_association": "MEMBER",
        "body": "Thanks for reporting. Onnxruntime does some optimizing to utilizing avx512 vnni. We will investigate it why it has issue without vnni. Could you tell us what is \"unexpected results\" ?  running exception or value different? how many those different are. If possible, please share us with input that cause such issue.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/732439955/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/733011453",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5849#issuecomment-733011453",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5849",
        "id": 733011453,
        "node_id": "MDEyOklzc3VlQ29tbWVudDczMzAxMTQ1Mw==",
        "user": {
            "login": "customer101",
            "id": 60574729,
            "node_id": "MDQ6VXNlcjYwNTc0NzI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/60574729?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/customer101",
            "html_url": "https://github.com/customer101",
            "followers_url": "https://api.github.com/users/customer101/followers",
            "following_url": "https://api.github.com/users/customer101/following{/other_user}",
            "gists_url": "https://api.github.com/users/customer101/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/customer101/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/customer101/subscriptions",
            "organizations_url": "https://api.github.com/users/customer101/orgs",
            "repos_url": "https://api.github.com/users/customer101/repos",
            "events_url": "https://api.github.com/users/customer101/events{/privacy}",
            "received_events_url": "https://api.github.com/users/customer101/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-11-24T14:32:15Z",
        "updated_at": "2020-11-24T14:32:15Z",
        "author_association": "NONE",
        "body": "Thanks @zhanghuanrong, I also tried to run the model on another machine, and the result is awful. What I meant by \"unexpected results\" is that the model gives weird predictions even for easy input examples. Numerically, the accuracy drops significantly from 97.8%(quantized model on vnni machine) to 64.9%. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/733011453/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/733070336",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5849#issuecomment-733070336",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5849",
        "id": 733070336,
        "node_id": "MDEyOklzc3VlQ29tbWVudDczMzA3MDMzNg==",
        "user": {
            "login": "prashantbudania",
            "id": 16194274,
            "node_id": "MDQ6VXNlcjE2MTk0Mjc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/16194274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prashantbudania",
            "html_url": "https://github.com/prashantbudania",
            "followers_url": "https://api.github.com/users/prashantbudania/followers",
            "following_url": "https://api.github.com/users/prashantbudania/following{/other_user}",
            "gists_url": "https://api.github.com/users/prashantbudania/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prashantbudania/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prashantbudania/subscriptions",
            "organizations_url": "https://api.github.com/users/prashantbudania/orgs",
            "repos_url": "https://api.github.com/users/prashantbudania/repos",
            "events_url": "https://api.github.com/users/prashantbudania/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prashantbudania/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-11-24T16:03:11Z",
        "updated_at": "2020-11-24T16:03:11Z",
        "author_association": "NONE",
        "body": "Yeah, I am also encountering something very similar. As per this (https://github.com/microsoft/onnxruntime/issues/5667), I knew that the results weren't going to be exactly reproducible on different hardware but I am seeing a huge difference in the model's predictions on the VNNI and the non-VNNI machines. And I also know that there are a few more optimizations \r\n(https://github.com/microsoft/onnxruntime/blob/master/docs/ONNX_Runtime_Graph_Optimizations.md) done for the VNNI machines but even after disabling all optimizations (ORT_DISABLE_ALL), I was unable to reproduce the results of the quantized models on the VNNI and the non-VNNI machines. Is there any optimization setting for which the results would be reproducible or at least very similar? I am using GCP N1 (non-vnni) and N2 (vnni) machines for my experiments.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/733070336/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/733178450",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5849#issuecomment-733178450",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5849",
        "id": 733178450,
        "node_id": "MDEyOklzc3VlQ29tbWVudDczMzE3ODQ1MA==",
        "user": {
            "login": "yufenglee",
            "id": 30486710,
            "node_id": "MDQ6VXNlcjMwNDg2NzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30486710?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yufenglee",
            "html_url": "https://github.com/yufenglee",
            "followers_url": "https://api.github.com/users/yufenglee/followers",
            "following_url": "https://api.github.com/users/yufenglee/following{/other_user}",
            "gists_url": "https://api.github.com/users/yufenglee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yufenglee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yufenglee/subscriptions",
            "organizations_url": "https://api.github.com/users/yufenglee/orgs",
            "repos_url": "https://api.github.com/users/yufenglee/repos",
            "events_url": "https://api.github.com/users/yufenglee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yufenglee/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-11-24T19:12:33Z",
        "updated_at": "2020-11-24T19:12:33Z",
        "author_association": "MEMBER",
        "body": "@customer101 and @prashantbudania , we uses [VPMADDUBSW ](https://en.wikichip.org/wiki/x86/avx512_vnni) on non-vnni machine. This instruction uses int16 to hold accumulation of 2 pairs of int8 mul ( C= A0*B0 + A1*B1, C is int16, A,B is in8 and C is int16), so it overflows for large number. For models with weight concentrating around 0 (for example, models with weight subject to Gaussian distribution approximately), the overflow is not an issue, but for models with weight distributes equally or not concentrating away from 0, the overflow becomes a big issue.\r\n\r\nWe provide an option [reduce_range ](https://github.com/microsoft/onnxruntime/blob/9ec1ed42a809170b87474f5822c4557101812399/onnxruntime/python/tools/quantization/quantize.py#L143) to reduce the quantization range to [-64, 64] for int8 and [0, 127] to avoid the overflow. Please re-quantize your model with this option and I think it can get back most of the accuracy loss.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/733178450/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/734164659",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5849#issuecomment-734164659",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5849",
        "id": 734164659,
        "node_id": "MDEyOklzc3VlQ29tbWVudDczNDE2NDY1OQ==",
        "user": {
            "login": "customer101",
            "id": 60574729,
            "node_id": "MDQ6VXNlcjYwNTc0NzI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/60574729?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/customer101",
            "html_url": "https://github.com/customer101",
            "followers_url": "https://api.github.com/users/customer101/followers",
            "following_url": "https://api.github.com/users/customer101/following{/other_user}",
            "gists_url": "https://api.github.com/users/customer101/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/customer101/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/customer101/subscriptions",
            "organizations_url": "https://api.github.com/users/customer101/orgs",
            "repos_url": "https://api.github.com/users/customer101/repos",
            "events_url": "https://api.github.com/users/customer101/events{/privacy}",
            "received_events_url": "https://api.github.com/users/customer101/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-11-26T08:55:24Z",
        "updated_at": "2020-11-26T08:55:24Z",
        "author_association": "NONE",
        "body": "I tried [quantize_dynamic](https://github.com/microsoft/onnxruntime/blob/9ec1ed42a809170b87474f5822c4557101812399/onnxruntime/python/tools/quantization/quantize.py#L190) instead, setting `reduce_range=False`, and the result is as expected; The accuracy didn't drop and the model output is meaningful. I also tries `reduce_range=True` but the accuracy is slightly lower.\r\nThanks @yufenglee",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/734164659/reactions",
            "total_count": 3,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]