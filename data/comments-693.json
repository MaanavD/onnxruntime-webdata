[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/477343491",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/693#issuecomment-477343491",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/693",
        "id": 477343491,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzM0MzQ5MQ==",
        "user": {
            "login": "jignparm",
            "id": 13698702,
            "node_id": "MDQ6VXNlcjEzNjk4NzAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/13698702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jignparm",
            "html_url": "https://github.com/jignparm",
            "followers_url": "https://api.github.com/users/jignparm/followers",
            "following_url": "https://api.github.com/users/jignparm/following{/other_user}",
            "gists_url": "https://api.github.com/users/jignparm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jignparm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jignparm/subscriptions",
            "organizations_url": "https://api.github.com/users/jignparm/orgs",
            "repos_url": "https://api.github.com/users/jignparm/repos",
            "events_url": "https://api.github.com/users/jignparm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jignparm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-03-27T20:54:26Z",
        "updated_at": "2019-03-27T20:54:26Z",
        "author_association": "CONTRIBUTOR",
        "body": "@dashesy -- Most models are Tensor models, hence the **AsTensor()** support. The **AsEnumerable()** is primarily to support models that produce sequences of maps().\r\n\r\nThe C# API is tied closely to the native C-API, which works with Tensors primarily, and in some cases sequences and maps. \r\n\r\nSupporting **AsArray()** would not fully capture the metadata (e.g. shape of Tensor) that is often needed by users, and therefore be confusing.\r\n\r\nIt should be easy to get an array from a Tensor(). Please re-open this if this is a blocker for some reason. Otherwise the preference is to keep the API() simple, and reflect the C API as much as possible.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/477343491/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/614904325",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/693#issuecomment-614904325",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/693",
        "id": 614904325,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDkwNDMyNQ==",
        "user": {
            "login": "solarflarefx",
            "id": 45402633,
            "node_id": "MDQ6VXNlcjQ1NDAyNjMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/45402633?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/solarflarefx",
            "html_url": "https://github.com/solarflarefx",
            "followers_url": "https://api.github.com/users/solarflarefx/followers",
            "following_url": "https://api.github.com/users/solarflarefx/following{/other_user}",
            "gists_url": "https://api.github.com/users/solarflarefx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/solarflarefx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/solarflarefx/subscriptions",
            "organizations_url": "https://api.github.com/users/solarflarefx/orgs",
            "repos_url": "https://api.github.com/users/solarflarefx/repos",
            "events_url": "https://api.github.com/users/solarflarefx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/solarflarefx/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-16T21:24:43Z",
        "updated_at": "2020-04-16T21:24:43Z",
        "author_association": "NONE",
        "body": "@dashesy What approach did you ultimately use for your conversion to Array?  Using the latest version of the ONNX Runtime C# API it seems that of your two options, I only have your first option.  Since I do inferencing on a set of data in a for loop, the conversion using results.First().AsTensor<float>().ToDenseTensor().Buffer.ToArray(); is taking quite a bit of time.  ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/614904325/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/615537249",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/693#issuecomment-615537249",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/693",
        "id": 615537249,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTUzNzI0OQ==",
        "user": {
            "login": "dashesy",
            "id": 873905,
            "node_id": "MDQ6VXNlcjg3MzkwNQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/873905?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dashesy",
            "html_url": "https://github.com/dashesy",
            "followers_url": "https://api.github.com/users/dashesy/followers",
            "following_url": "https://api.github.com/users/dashesy/following{/other_user}",
            "gists_url": "https://api.github.com/users/dashesy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dashesy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dashesy/subscriptions",
            "organizations_url": "https://api.github.com/users/dashesy/orgs",
            "repos_url": "https://api.github.com/users/dashesy/repos",
            "events_url": "https://api.github.com/users/dashesy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dashesy/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-18T01:54:17Z",
        "updated_at": "2020-04-18T01:55:00Z",
        "author_association": "NONE",
        "body": "If using an older C# version \r\n\r\n```C#\r\n    return results.ToDictionary(\r\n        val => val.Name, \r\n        val => new TensorArray<float>(val.AsEnumerable<float>().ToArray(), val.AsTensor<float>().Dimensions.ToArray())\r\n    );\r\n```\r\n\r\nIf it is CoreApp, I'd keep it as `ReadOnlySpan<float>` and do not convert to List. It can be used just like a list of floats, but is more efficient.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/615537249/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]