[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/794675743",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/6936#issuecomment-794675743",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/6936",
        "id": 794675743,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc5NDY3NTc0Mw==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-03-10T00:53:40Z",
        "updated_at": "2021-03-10T00:53:40Z",
        "author_association": "MEMBER",
        "body": "Why wouldn't it work if there were batches? GRU and LSTM supports batches. The GRU Y_h output and initial_h inputs have a batch size dimension, as does the LSTM Y_h/Y_c outputs and initial_h/initial_c inputs. I'd strongly suggest establishing whether this can satisfy your requirements as a first step.\r\n\r\nIt may be simpler to create a custom operator instead of a complete EP. There's documentation on doing so here: https://www.onnxruntime.ai/docs/how-to/add-custom-op.html. \r\nYou'd have to edit the model to change the operator name of the GRU node to your custom operator name, but that should be fairly trivial to do via a simple python script. \r\n\r\nIf you decide to do a custom op or EP, bear in mind that the InferenceSession's Run method expects execution to be stateless, so you may need to protect against concurrent usage within your op implementation if that is a potential issue. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/794675743/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/797763073",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/6936#issuecomment-797763073",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/6936",
        "id": 797763073,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc5Nzc2MzA3Mw==",
        "user": {
            "login": "aawce",
            "id": 34663873,
            "node_id": "MDQ6VXNlcjM0NjYzODcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/34663873?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aawce",
            "html_url": "https://github.com/aawce",
            "followers_url": "https://api.github.com/users/aawce/followers",
            "following_url": "https://api.github.com/users/aawce/following{/other_user}",
            "gists_url": "https://api.github.com/users/aawce/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aawce/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aawce/subscriptions",
            "organizations_url": "https://api.github.com/users/aawce/orgs",
            "repos_url": "https://api.github.com/users/aawce/repos",
            "events_url": "https://api.github.com/users/aawce/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aawce/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-03-12T21:22:53Z",
        "updated_at": "2021-03-12T21:22:53Z",
        "author_association": "NONE",
        "body": "Thks - our tests show that for a batch of sequences/timesteps ort will reset state between tsteps, which make sense since that's our understanding of non-stateful behavior in Keras, etc.  So when we run a batch, we want the init state of the previous tstep to be used in the next tstep within that batch.  That doesn't seem possible even with GRU_Y_h output has batch_size dimension.\r\n\r\nSo it looks fairly simple to create a blank EP,  but its unclear to me how to add an operator as the cpu-provider examples seems very complicated.  What do you recommend as the easiest operator to add to an EP?  Is there a very simple example to reference?  I've looked through cpu-provider and armnn provider and those have lots of dependencies and code to sift through.  Is there something simpler?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/797763073/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/797767073",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/6936#issuecomment-797767073",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/6936",
        "id": 797767073,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc5Nzc2NzA3Mw==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-03-12T21:31:27Z",
        "updated_at": "2021-03-12T21:31:27Z",
        "author_association": "MEMBER",
        "body": "Can you clarify 'the init state of the previous tstep to be used in the next'? The output state of the previous step is used in the next (you can get the output state from every step via the Y output) - the Y_h output is just the state at end . Wouldn't using the init state mean using the same value for all steps?\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/797767073/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/806217056",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/6936#issuecomment-806217056",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/6936",
        "id": 806217056,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgwNjIxNzA1Ng==",
        "user": {
            "login": "aawce",
            "id": 34663873,
            "node_id": "MDQ6VXNlcjM0NjYzODcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/34663873?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aawce",
            "html_url": "https://github.com/aawce",
            "followers_url": "https://api.github.com/users/aawce/followers",
            "following_url": "https://api.github.com/users/aawce/following{/other_user}",
            "gists_url": "https://api.github.com/users/aawce/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aawce/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aawce/subscriptions",
            "organizations_url": "https://api.github.com/users/aawce/orgs",
            "repos_url": "https://api.github.com/users/aawce/repos",
            "events_url": "https://api.github.com/users/aawce/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aawce/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-03-24T22:08:33Z",
        "updated_at": "2021-03-24T22:08:33Z",
        "author_association": "NONE",
        "body": "So for example, with batch size = 8,  tstep = 16,  we open a session, and run a data set, internally ort will run the first 16 tsteps, then reset state and the 2nd batch of 16 tsteps, etc.  We have no way of intercepting between the batches to save and restore state.  When running this for real time detection we'd want to maintain state (recursive system can have a longer impulse response).\r\nAnyway, it's more important we get our own EP with custom GRU that can maintain state.  Would you be able to help us with that?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/806217056/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/806239915",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/6936#issuecomment-806239915",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/6936",
        "id": 806239915,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgwNjIzOTkxNQ==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-03-24T23:04:58Z",
        "updated_at": "2021-03-24T23:04:58Z",
        "author_association": "MEMBER",
        "body": "If you still wish to add a custom EP, the documentation is at: https://www.onnxruntime.ai/docs/how-to/add-execution-provider.html\r\n\r\n> We have no way of intercepting between the batches to save and restore state.\r\n\r\nIf you make the Y_h output from the GRU node a model output, and you provide the initial_h input of the GRU node as model input, you essentially intercept the state and can pass it into the next run. \r\n\r\nLet's say you had a really simple model. \r\n  - Model contains a GRU node followed by a Softmax.\r\n  - Let's call the model input 'InputA', and it has shape {seq_length, batch, input_size}. We use this as the X input to the GRU node.\r\n  - Let's say the GRU node Y_h output is called 'GRU_state', and that's the input to the Softmax node.\r\n  - Let's say the model output, which comes from the Softmax node, is called 'OutputA'.\r\n\r\nWith this setup, the GRU uses the default value of initial_h which is all zeros (i.e. the state is 'reset'), and 'GRU_state' only goes into Softmax so is not accessible.\r\n\r\nWe first want to capture the state, so we add the 'GRU_state' output from the GRU node to the list of model outputs (the name just needs to be added to the output list). Now 'GRU_state' goes to the Softmax node, and is also available as a model output.\r\n\r\nTo use that state in the next call, we add a model input for this value (let's call it 'InputState'), and connect it to the initial_h input of the GRU node. \r\n\r\nNow that we're not using the default value of initial_h in the GRU node, for the first call we need to provide an input filled with zeros as 'InputState' with shape {num_directions, batch_size, hidden_size}.\r\nAt the end of the first call we read 'OutputA' and 'GRU_state' from the model outputs, and pass 'GRU_state' in as 'InputState' when running the next batch.. \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/806239915/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/825880183",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/6936#issuecomment-825880183",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/6936",
        "id": 825880183,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgyNTg4MDE4Mw==",
        "user": {
            "login": "aawce",
            "id": 34663873,
            "node_id": "MDQ6VXNlcjM0NjYzODcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/34663873?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aawce",
            "html_url": "https://github.com/aawce",
            "followers_url": "https://api.github.com/users/aawce/followers",
            "following_url": "https://api.github.com/users/aawce/following{/other_user}",
            "gists_url": "https://api.github.com/users/aawce/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aawce/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aawce/subscriptions",
            "organizations_url": "https://api.github.com/users/aawce/orgs",
            "repos_url": "https://api.github.com/users/aawce/repos",
            "events_url": "https://api.github.com/users/aawce/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aawce/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-23T19:44:18Z",
        "updated_at": "2021-04-23T19:44:18Z",
        "author_association": "NONE",
        "body": "Hi Scott,\r\n\r\nThks - we have our own EP started, but just a shell at this point.  Do you know anyone who could help us copy the GRU into our EP and make these modifications?\r\n\r\nThks,\r\nChris",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/825880183/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/826543753",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/6936#issuecomment-826543753",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/6936",
        "id": 826543753,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgyNjU0Mzc1Mw==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-26T06:28:22Z",
        "updated_at": "2021-04-26T06:28:22Z",
        "author_association": "MEMBER",
        "body": "> Thks - we have our own EP started, but just a shell at this point. Do you know anyone who could help us copy the GRU into our EP and make these modifications?\r\n\r\nYou're probably on your own for that given your desired approach doesn't really fit with ONNX Runtime's 'run' being stateless.\r\n\r\nAs ONNX Runtime is open source you're free to copy the GRU code and modify it as needed (assuming whatever necessary license info is copied across to make the lawyers happy).\r\n\r\n> This might work for some cases, but it's not clear if it works for some of our use cases where we may want to run batches of sequences/timesteps.\r\n\r\nOut of interest, what is the reason why passing the state between calls to Run doesn't work for you? I'd just like to understand why the overhead of creating a new EP (or custom op) is required.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/826543753/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]