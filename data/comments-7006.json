[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/826499697",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7006#issuecomment-826499697",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7006",
        "id": 826499697,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgyNjQ5OTY5Nw==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-26T04:55:56Z",
        "updated_at": "2021-04-26T04:55:56Z",
        "author_association": "MEMBER",
        "body": "Do you have a model that reproduces the issue?\r\n\r\nAFAIK there are two paths to a Function based node. \r\n1) An ONNX function based operator is expanded to its component nodes as we don't have an implementation of the function. \r\n2) Nodes are fused by an execution provider into a single function based node during graph partitioning.\r\n\r\nFor #1, the code that expands the ONNX FunctionProto sets the type/shape inferencing function here: https://github.com/microsoft/onnxruntime/blob/368e4a324f5235823cd8a948c505536b13e31ada/onnxruntime/core/graph/function.cc#L322-L330\r\n\r\nFor #2, the ONNX type/shape inferencing would have already happened prior to fusion (shape inferencing is run during model loading, which completes before partitioning), so the output values from the fusion should already have type/shape info.\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/826499697/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/827066803",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7006#issuecomment-827066803",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7006",
        "id": 827066803,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgyNzA2NjgwMw==",
        "user": {
            "login": "pranav-prakash",
            "id": 10335022,
            "node_id": "MDQ6VXNlcjEwMzM1MDIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/10335022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranav-prakash",
            "html_url": "https://github.com/pranav-prakash",
            "followers_url": "https://api.github.com/users/pranav-prakash/followers",
            "following_url": "https://api.github.com/users/pranav-prakash/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranav-prakash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranav-prakash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranav-prakash/subscriptions",
            "organizations_url": "https://api.github.com/users/pranav-prakash/orgs",
            "repos_url": "https://api.github.com/users/pranav-prakash/repos",
            "events_url": "https://api.github.com/users/pranav-prakash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranav-prakash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-26T18:50:07Z",
        "updated_at": "2021-04-27T22:21:11Z",
        "author_association": "CONTRIBUTOR",
        "body": "@skottmckay We make use of #2 in our custom EP ([link](https://github.com/pranav-prakash/onnxruntime-riscv/blob/2021-04-02/onnxruntime/core/providers/systolic/fusion/qlinearconv_relu_fuse.cc) to the node-fusion we define in our EP)\r\n\r\n> ONNX type/shape inferencing would have already happened prior to fusion\r\n\r\nIs this still true if Level 3 graph transforms are performed? I observed that these are performed after partitioning, and this was the case motivating the creation of the PR â€“ I recall that the outputs of fused ops had no shape info after the shape-inference pass following level 3 transforms (but it's been a few months so I might need to double check)",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/827066803/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/827916267",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7006#issuecomment-827916267",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7006",
        "id": 827916267,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgyNzkxNjI2Nw==",
        "user": {
            "login": "pranav-prakash",
            "id": 10335022,
            "node_id": "MDQ6VXNlcjEwMzM1MDIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/10335022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranav-prakash",
            "html_url": "https://github.com/pranav-prakash",
            "followers_url": "https://api.github.com/users/pranav-prakash/followers",
            "following_url": "https://api.github.com/users/pranav-prakash/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranav-prakash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranav-prakash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranav-prakash/subscriptions",
            "organizations_url": "https://api.github.com/users/pranav-prakash/orgs",
            "repos_url": "https://api.github.com/users/pranav-prakash/repos",
            "events_url": "https://api.github.com/users/pranav-prakash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranav-prakash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-27T20:42:33Z",
        "updated_at": "2021-04-27T20:42:33Z",
        "author_association": "CONTRIBUTOR",
        "body": "I looked again and the sequence of steps that reproduces this issue is this\r\n* After partitioning, we create a fused node for e.g. QLinearAdd + Relu in our EP\r\n* A level 3 graph transformer (e.g. NHWC conversion) is registered that replaces the inputs and outputs of the fused node.\r\n* Since these are newly created NodeArgs, the previous shape inference info is no longer present. Hence when graph.Resolve() is called and shape-inference is again performed, since the fused node lacks any shape inference function we end up with no shape on the output (which prevents shape info from being computed for any downstream nodes as well).\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/827916267/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/827959975",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7006#issuecomment-827959975",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7006",
        "id": 827959975,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgyNzk1OTk3NQ==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-27T21:51:07Z",
        "updated_at": "2021-04-27T21:51:07Z",
        "author_association": "MEMBER",
        "body": "That makes more sense. I added some debug output and ran one of the unit tests that does some node fusion (InternalTestingEP.TestSaveAndLoadOrtModel) and the shape info was maintained as expected in that case. \r\n\r\n@tracysh Can the NHWC transformer add shape info to newly created NodeArgs when it runs? ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/827959975/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/827972789",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7006#issuecomment-827972789",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7006",
        "id": 827972789,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgyNzk3Mjc4OQ==",
        "user": {
            "login": "pranav-prakash",
            "id": 10335022,
            "node_id": "MDQ6VXNlcjEwMzM1MDIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/10335022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranav-prakash",
            "html_url": "https://github.com/pranav-prakash",
            "followers_url": "https://api.github.com/users/pranav-prakash/followers",
            "following_url": "https://api.github.com/users/pranav-prakash/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranav-prakash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranav-prakash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranav-prakash/subscriptions",
            "organizations_url": "https://api.github.com/users/pranav-prakash/orgs",
            "repos_url": "https://api.github.com/users/pranav-prakash/repos",
            "events_url": "https://api.github.com/users/pranav-prakash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranav-prakash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-27T22:19:14Z",
        "updated_at": "2021-04-27T22:21:44Z",
        "author_association": "CONTRIBUTOR",
        "body": "@skottmckay\r\n(We use our own nhwc transformer â€“ not the upstream one â€“ but last I checked the upstream one doesn't set shape info for nodeargs either).\r\n\r\nSo just to clarify, is the suggested solution to set shape info in the transformer itself when processing a fused node? That works for me (but it feels more like a workaroundÂ â€“Â I still feel allowing the `inference_function` to be manually set when creating a fused node is a cleaner solution; albeit either achieves the same end result).",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/827972789/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/827975812",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7006#issuecomment-827975812",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7006",
        "id": 827975812,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgyNzk3NTgxMg==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-27T22:26:35Z",
        "updated_at": "2021-04-27T22:26:35Z",
        "author_association": "MEMBER",
        "body": "I think the expected result of fusing nodes is that the same output names are still produced, and hence no need for special handling of the shape info. \r\n\r\nI assume if you're creating new NodeArg instances you're also having to update downstream nodes to change input names as well, and that's getting beyond simply fusing nodes. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/827975812/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/829952977",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7006#issuecomment-829952977",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7006",
        "id": 829952977,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgyOTk1Mjk3Nw==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-30T09:02:01Z",
        "updated_at": "2021-04-30T09:02:01Z",
        "author_association": "MEMBER",
        "body": "FWIW I'm not against adding a shape inferencing function to the onnxruntime::Function based node if there's a clear need for it. Just because it doesn't fit the normal node fusion scenarios doesn't mean it wouldn't be valuable, however there should be a unit test and clear explanation of when and how it should be used in a PR that adds it. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/829952977/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/830343400",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7006#issuecomment-830343400",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7006",
        "id": 830343400,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgzMDM0MzQwMA==",
        "user": {
            "login": "pranav-prakash",
            "id": 10335022,
            "node_id": "MDQ6VXNlcjEwMzM1MDIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/10335022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranav-prakash",
            "html_url": "https://github.com/pranav-prakash",
            "followers_url": "https://api.github.com/users/pranav-prakash/followers",
            "following_url": "https://api.github.com/users/pranav-prakash/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranav-prakash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranav-prakash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranav-prakash/subscriptions",
            "organizations_url": "https://api.github.com/users/pranav-prakash/orgs",
            "repos_url": "https://api.github.com/users/pranav-prakash/repos",
            "events_url": "https://api.github.com/users/pranav-prakash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranav-prakash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-30T19:49:57Z",
        "updated_at": "2021-04-30T22:31:44Z",
        "author_association": "CONTRIBUTOR",
        "body": "@skottmckay\r\nI'd be happy to update the PR to add the unit test.\r\n\r\nAs for applicable use-cases: even though strictly speaking performing shape-inference for fused nodes by calling into a custom function during `graph.Resolve()` will have the same end-result as manually setting shape info during graph transforms, doing the latter leads to a weird asymmetry between processing \"normal\" nodes and \"fused ones\" â€“ graph transforms for the former can be agnostic to the input/output shapes, whereas transforms for the latter must explicitly set shape info.\r\n\r\nGiven that it requires < 4 lines of code to add support for this, I think it's worth adding it so graph transforms can be kept as simple as possible.\r\n\r\nEdit: I've updated the PR if you'd like to take a look.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/830343400/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]