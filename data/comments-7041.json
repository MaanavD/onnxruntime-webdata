[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/801414931",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7041#issuecomment-801414931",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7041",
        "id": 801414931,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTQxNDkzMQ==",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-03-17T20:17:45Z",
        "updated_at": "2021-03-17T20:17:45Z",
        "author_association": "MEMBER",
        "body": "I'm afraid we can't use ONNX from somewhere else.  Because,\r\n\r\n1. One onnxruntime version is only compatible with one ONNX commit, and usually the ONNX commit is not a release version.\r\n2. ONNX has many build options. For example, you can even customize its namespace. We can't support them all. \r\n3. If you build ONNX as a shared library, I'm sure it will cause problems. But if you have built it as static library, how would you keep the build flags consistent across ONNX and ONNX Runtime? I think there is no easy way. Also what's the benefit of building ONNX on your own? ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/801414931/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/801563114",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7041#issuecomment-801563114",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7041",
        "id": 801563114,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTU2MzExNA==",
        "user": {
            "login": "boxerab",
            "id": 95393,
            "node_id": "MDQ6VXNlcjk1Mzkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/95393?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boxerab",
            "html_url": "https://github.com/boxerab",
            "followers_url": "https://api.github.com/users/boxerab/followers",
            "following_url": "https://api.github.com/users/boxerab/following{/other_user}",
            "gists_url": "https://api.github.com/users/boxerab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/boxerab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/boxerab/subscriptions",
            "organizations_url": "https://api.github.com/users/boxerab/orgs",
            "repos_url": "https://api.github.com/users/boxerab/repos",
            "events_url": "https://api.github.com/users/boxerab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/boxerab/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-03-18T02:12:47Z",
        "updated_at": "2021-03-18T02:12:47Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks for your comments, @snnn \r\n\r\n> 1. One onnxruntime version is only compatible with one ONNX commit, and usually the ONNX commit is not a release version.\r\n> 2. ONNX has many build options. For example, you can even customize its namespace. We can't support them all.\r\n> 3. If you build ONNX as a shared library, I'm sure it will cause problems. But if you have built it as static library, how would you keep the build flags consistent across ONNX and ONNX Runtime? I think there is no easy way. \r\n\r\nThis is how most libraries work: they have periodic releases, these releases can be built and installed in a standard location, and other libraries can link either statically or dynamically to the artifacts.\r\n\r\n> Also what's the benefit of building ONNX on your own?\r\n\r\nI am working on another C++ project that can use ONNX to run the models. There is no other way of linking to ONNX C++ API other than building on my own.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/801563114/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/801616454",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7041#issuecomment-801616454",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7041",
        "id": 801616454,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTYxNjQ1NA==",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-03-18T04:34:31Z",
        "updated_at": "2021-03-18T04:34:31Z",
        "author_association": "MEMBER",
        "body": "> other libraries can link either statically or dynamically to the artifacts.\r\n\r\nNo. For example, glibc and google protobuf are not. \r\n\r\nWhen you change a static library to dynamic, the change may extend some variables' visibility and lifetime. For example, ONNX is an open standard and open source library for machine learning interoperability built upon libprotobuf. ONNX was designed to be sharable and reusable among machine learning frameworks. And libprotobuf has a functionality which allows you create a message based on its name(we call reflection), so protobuf requires you have a centralized way to managed all the protobuf definitions (*.proto files) to avoid name conflicts. But commonly it's not a real conflict, it's just two pieces of code want to use the same protobuf definition. Like if you have two ML frameworks in python package form that both dynamically link to libprotobuf, then they must dynamically link to ONNX too, so that the protobuf messages defined in ONNX will only have one copy per process and will only be registered once to libprobuf's central database. Also none of the frameworks can extend or reuse the message definition in a different way. If a framework wants to define a protobuf message that contains an ONNX TensorProto message inside, it can not directly include ONNX's existing *.proto file. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/801616454/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/801873334",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7041#issuecomment-801873334",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7041",
        "id": 801873334,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTg3MzMzNA==",
        "user": {
            "login": "boxerab",
            "id": 95393,
            "node_id": "MDQ6VXNlcjk1Mzkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/95393?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boxerab",
            "html_url": "https://github.com/boxerab",
            "followers_url": "https://api.github.com/users/boxerab/followers",
            "following_url": "https://api.github.com/users/boxerab/following{/other_user}",
            "gists_url": "https://api.github.com/users/boxerab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/boxerab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/boxerab/subscriptions",
            "organizations_url": "https://api.github.com/users/boxerab/orgs",
            "repos_url": "https://api.github.com/users/boxerab/repos",
            "events_url": "https://api.github.com/users/boxerab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/boxerab/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-03-18T12:05:10Z",
        "updated_at": "2021-03-18T12:05:10Z",
        "author_association": "CONTRIBUTOR",
        "body": "Yes, there are exceptions, but as I said, most libraries work this way. \r\nI am using ONNX right now in this fashion, except I have to manually configure my own project to search\r\nthe ONNX build in the source directory for the .so and headers. \r\nMy request is simply to allow users to install .so and headers in standard location, for example `/usr/local`\r\non linux.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/801873334/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/803206562",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7041#issuecomment-803206562",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7041",
        "id": 803206562,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzIwNjU2Mg==",
        "user": {
            "login": "boxerab",
            "id": 95393,
            "node_id": "MDQ6VXNlcjk1Mzkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/95393?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boxerab",
            "html_url": "https://github.com/boxerab",
            "followers_url": "https://api.github.com/users/boxerab/followers",
            "following_url": "https://api.github.com/users/boxerab/following{/other_user}",
            "gists_url": "https://api.github.com/users/boxerab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/boxerab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/boxerab/subscriptions",
            "organizations_url": "https://api.github.com/users/boxerab/orgs",
            "repos_url": "https://api.github.com/users/boxerab/repos",
            "events_url": "https://api.github.com/users/boxerab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/boxerab/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-03-20T00:29:07Z",
        "updated_at": "2021-03-20T00:29:07Z",
        "author_association": "CONTRIBUTOR",
        "body": "closing this as there is a pending PR to implement this.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/803206562/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]