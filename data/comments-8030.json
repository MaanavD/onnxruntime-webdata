[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/860861816",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/8030#issuecomment-860861816",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/8030",
        "id": 860861816,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg2MDg2MTgxNg==",
        "user": {
            "login": "tianleiwu",
            "id": 30328909,
            "node_id": "MDQ6VXNlcjMwMzI4OTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30328909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tianleiwu",
            "html_url": "https://github.com/tianleiwu",
            "followers_url": "https://api.github.com/users/tianleiwu/followers",
            "following_url": "https://api.github.com/users/tianleiwu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tianleiwu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tianleiwu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tianleiwu/subscriptions",
            "organizations_url": "https://api.github.com/users/tianleiwu/orgs",
            "repos_url": "https://api.github.com/users/tianleiwu/repos",
            "events_url": "https://api.github.com/users/tianleiwu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tianleiwu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-06-14T17:30:33Z",
        "updated_at": "2021-06-14T17:31:09Z",
        "author_association": "MEMBER",
        "body": "@yaminipreethi, you need compose inputs for each batch. The shape of input_ids and attention_mask is (batch_size, sequence_length). Your example has batch_size=1. Here is an example of batch_size==2:\r\n```\r\n{\r\n     'input_ids': array([\r\n     [    0, 510, 35, 21071, ....., 1, 1],\r\n     [    4, 31, 3, 8, ....., 15, 14],\r\n     ]),\r\n     'attention_mask': array([\r\n        [1, 1, 1, 1, ......, 0, 0],\r\n        [1, 1, 1, 1, ......, 1, 1]])\r\n}\r\n```\r\nIf different samples have different sequence lengths,  you will need have some padding logic.\r\n\r\nHere is an example code for batching applies to [mlperf](https://github.com/mlcommons/inference/blob/master/language/bert/onnxruntime_SUT.py):\r\n```\r\n        def issue_queries(self, query_samples):\r\n            num_samples = len(query_samples)\r\n            actual_lengths = []\r\n            for i in range(num_samples):\r\n                eval_features = self.qsl.get_features(query_samples[i].index)\r\n                actual_seq_length = sum(eval_features.input_mask)\r\n                actual_lengths.append(actual_seq_length)\r\n            lengths = np.array(actual_lengths)\r\n            sort_index = np.argsort(lengths)\r\n\r\n            total_batches = int((num_samples + self.batch_size - 1) / self.batch_size)\r\n            for j in range(total_batches):\r\n                indices = sort_index[self.batch_size * j:self.batch_size * (j + 1)]\r\n                samples = [self.qsl.get_features(query_samples[i].index) for i in indices]\r\n                sample_ids = [query_samples[i].id for i in indices]\r\n                take_lengths = np.take(lengths, indices)\r\n                max_lengths = np.max(take_lengths)\r\n\r\n                input_ids = np.zeros((len(samples), max_lengths), dtype=self.input_dtype)\r\n                input_mask = np.zeros((len(samples), max_lengths), dtype=self.input_dtype)\r\n                segment_ids = np.zeros((len(samples), max_lengths), dtype=self.input_dtype)\r\n                for k, sample in enumerate(samples):\r\n                    length = take_lengths[k]\r\n                    input_ids[k, :length] = sample.input_ids[:length]\r\n                    input_mask[k, :length] = sample.input_mask[:length]\r\n                    segment_ids[k, :length] = sample.segment_ids[:length]\r\n\r\n                input = {\"input_ids\": input_ids, self.input_mask_name: input_mask, self.segment_ids_name: segment_ids}\r\n\r\n                scores = self.sess.run(self.output_names, input)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/860861816/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/861180445",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/8030#issuecomment-861180445",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/8030",
        "id": 861180445,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg2MTE4MDQ0NQ==",
        "user": {
            "login": "yaminipreethi",
            "id": 18206357,
            "node_id": "MDQ6VXNlcjE4MjA2MzU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/18206357?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yaminipreethi",
            "html_url": "https://github.com/yaminipreethi",
            "followers_url": "https://api.github.com/users/yaminipreethi/followers",
            "following_url": "https://api.github.com/users/yaminipreethi/following{/other_user}",
            "gists_url": "https://api.github.com/users/yaminipreethi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yaminipreethi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yaminipreethi/subscriptions",
            "organizations_url": "https://api.github.com/users/yaminipreethi/orgs",
            "repos_url": "https://api.github.com/users/yaminipreethi/repos",
            "events_url": "https://api.github.com/users/yaminipreethi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yaminipreethi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-06-15T05:25:23Z",
        "updated_at": "2021-06-15T05:25:46Z",
        "author_association": "NONE",
        "body": "Thanks @tianleiwu, it works",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/861180445/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/999429110",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/8030#issuecomment-999429110",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/8030",
        "id": 999429110,
        "node_id": "IC_kwDOCVq1mM47khP2",
        "user": {
            "login": "rohanshingade",
            "id": 18469762,
            "node_id": "MDQ6VXNlcjE4NDY5NzYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/18469762?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rohanshingade",
            "html_url": "https://github.com/rohanshingade",
            "followers_url": "https://api.github.com/users/rohanshingade/followers",
            "following_url": "https://api.github.com/users/rohanshingade/following{/other_user}",
            "gists_url": "https://api.github.com/users/rohanshingade/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rohanshingade/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rohanshingade/subscriptions",
            "organizations_url": "https://api.github.com/users/rohanshingade/orgs",
            "repos_url": "https://api.github.com/users/rohanshingade/repos",
            "events_url": "https://api.github.com/users/rohanshingade/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rohanshingade/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-12-22T09:37:15Z",
        "updated_at": "2021-12-22T09:37:59Z",
        "author_association": "NONE",
        "body": "@yaminipreethi does batch inference on quantized model give consistent results? for me prediction changes slightly as batch size changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/999429110/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1016951303",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/8030#issuecomment-1016951303",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/8030",
        "id": 1016951303,
        "node_id": "IC_kwDOCVq1mM48nXIH",
        "user": {
            "login": "tianleiwu",
            "id": 30328909,
            "node_id": "MDQ6VXNlcjMwMzI4OTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30328909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tianleiwu",
            "html_url": "https://github.com/tianleiwu",
            "followers_url": "https://api.github.com/users/tianleiwu/followers",
            "following_url": "https://api.github.com/users/tianleiwu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tianleiwu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tianleiwu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tianleiwu/subscriptions",
            "organizations_url": "https://api.github.com/users/tianleiwu/orgs",
            "repos_url": "https://api.github.com/users/tianleiwu/repos",
            "events_url": "https://api.github.com/users/tianleiwu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tianleiwu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-19T23:04:43Z",
        "updated_at": "2022-01-19T23:05:01Z",
        "author_association": "MEMBER",
        "body": "@rohanshingade, For dynamic quantization, result changes with input. You can try static quantization to see whether you can get consistent results.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1016951303/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1017122468",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/8030#issuecomment-1017122468",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/8030",
        "id": 1017122468,
        "node_id": "IC_kwDOCVq1mM48oA6k",
        "user": {
            "login": "yaminipreethi",
            "id": 18206357,
            "node_id": "MDQ6VXNlcjE4MjA2MzU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/18206357?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yaminipreethi",
            "html_url": "https://github.com/yaminipreethi",
            "followers_url": "https://api.github.com/users/yaminipreethi/followers",
            "following_url": "https://api.github.com/users/yaminipreethi/following{/other_user}",
            "gists_url": "https://api.github.com/users/yaminipreethi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yaminipreethi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yaminipreethi/subscriptions",
            "organizations_url": "https://api.github.com/users/yaminipreethi/orgs",
            "repos_url": "https://api.github.com/users/yaminipreethi/repos",
            "events_url": "https://api.github.com/users/yaminipreethi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yaminipreethi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-20T05:01:29Z",
        "updated_at": "2022-01-20T05:01:29Z",
        "author_association": "NONE",
        "body": "> @yaminipreethi does batch inference on quantized model give consistent results? for me prediction changes slightly as batch size changes\r\n\r\nYes, there would be slight difference in results with batch inferencing using quantized model.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1017122468/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]