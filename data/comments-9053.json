[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/919210305",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9053#issuecomment-919210305",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9053",
        "id": 919210305,
        "node_id": "IC_kwDOCVq1mM42yglB",
        "user": {
            "login": "thiagocrepaldi",
            "id": 5469809,
            "node_id": "MDQ6VXNlcjU0Njk4MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5469809?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thiagocrepaldi",
            "html_url": "https://github.com/thiagocrepaldi",
            "followers_url": "https://api.github.com/users/thiagocrepaldi/followers",
            "following_url": "https://api.github.com/users/thiagocrepaldi/following{/other_user}",
            "gists_url": "https://api.github.com/users/thiagocrepaldi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thiagocrepaldi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thiagocrepaldi/subscriptions",
            "organizations_url": "https://api.github.com/users/thiagocrepaldi/orgs",
            "repos_url": "https://api.github.com/users/thiagocrepaldi/repos",
            "events_url": "https://api.github.com/users/thiagocrepaldi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thiagocrepaldi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-09-14T14:33:06Z",
        "updated_at": "2021-09-14T14:33:06Z",
        "author_association": "MEMBER",
        "body": "Yes, you can load the onnx model and pass it to `ORTTrainer(model=onnx_obj)` constructor. You will also need to properly specify the `model_desc`. Checkout https://github.com/microsoft/onnxruntime/blob/master/orttraining/orttraining/python/training/orttrainer.py#L64-L120 for more details. https://github.com/microsoft/onnxruntime/blob/master/orttraining/orttraining/test/python/orttraining_test_orttrainer_bert_toy_onnx.py is a UT that loads an ONNX file and train it\r\n\r\nIf your ONNX `model` doesn't have an embedded `loss`, you will have to specify one as a `torch.nn.Module` instance\r\n\r\nHope that helps",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/919210305/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/933425290",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9053#issuecomment-933425290",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9053",
        "id": 933425290,
        "node_id": "IC_kwDOCVq1mM43ovCK",
        "user": {
            "login": "HemaSowjanyaMamidi",
            "id": 47590467,
            "node_id": "MDQ6VXNlcjQ3NTkwNDY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/47590467?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HemaSowjanyaMamidi",
            "html_url": "https://github.com/HemaSowjanyaMamidi",
            "followers_url": "https://api.github.com/users/HemaSowjanyaMamidi/followers",
            "following_url": "https://api.github.com/users/HemaSowjanyaMamidi/following{/other_user}",
            "gists_url": "https://api.github.com/users/HemaSowjanyaMamidi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HemaSowjanyaMamidi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HemaSowjanyaMamidi/subscriptions",
            "organizations_url": "https://api.github.com/users/HemaSowjanyaMamidi/orgs",
            "repos_url": "https://api.github.com/users/HemaSowjanyaMamidi/repos",
            "events_url": "https://api.github.com/users/HemaSowjanyaMamidi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HemaSowjanyaMamidi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-10-04T12:14:54Z",
        "updated_at": "2021-10-04T12:14:54Z",
        "author_association": "NONE",
        "body": "Thankyou @thiagocrepaldi, for the resources. I tried training the model and encountered with an error stating loss function should not be specified when its an ONNX model. (I specified a torch.nn.functional code for loss function) \r\n\r\nLink:  https://github.com/microsoft/onnxruntime/blob/master/orttraining/orttraining/python/training/orttrainer.py#L153 \r\n    elif isinstance(model, onnx.ModelProto):\r\n                assert loss_fn is None, \"'loss_fn' must not be specified when 'model' is an ONNX model\" \r\n\r\n1. So how should I specify the loss function for an onnx model if I am creating the onnx model from scratch.\r\n2. After training will the onnx model contains the optimizer weights which enables us to perform retraining or will the optimizer get discarded?(for example in keras we have the option include_optimizer=True/ False while saving the model).",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/933425290/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/933762006",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9053#issuecomment-933762006",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9053",
        "id": 933762006,
        "node_id": "IC_kwDOCVq1mM43qBPW",
        "user": {
            "login": "thiagocrepaldi",
            "id": 5469809,
            "node_id": "MDQ6VXNlcjU0Njk4MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5469809?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thiagocrepaldi",
            "html_url": "https://github.com/thiagocrepaldi",
            "followers_url": "https://api.github.com/users/thiagocrepaldi/followers",
            "following_url": "https://api.github.com/users/thiagocrepaldi/following{/other_user}",
            "gists_url": "https://api.github.com/users/thiagocrepaldi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thiagocrepaldi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thiagocrepaldi/subscriptions",
            "organizations_url": "https://api.github.com/users/thiagocrepaldi/orgs",
            "repos_url": "https://api.github.com/users/thiagocrepaldi/repos",
            "events_url": "https://api.github.com/users/thiagocrepaldi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thiagocrepaldi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-10-04T18:54:24Z",
        "updated_at": "2021-10-04T18:56:41Z",
        "author_association": "MEMBER",
        "body": "@HemaSowjanyaMamidi \r\n\r\n1. yes, you are right. When a ONNX is specified as `model` for the `ORTTrainer` API, `model` must include loss nodes in the graph itself, connecting both forward and backward graphs. You have to edit your graph and add those nodes using https://github.com/onnx/onnx/blob/master/onnx/helper.py helpers to manipulate the graph, for instance. This is an uncommon path, though. Usually users bring their `torch.nn.Module` model+loss and convert to onnx and later on they might use such ONNX directly. Passing an ONNX model that was generated by something else other than ORTTrainer is quiet error prone and hard to manipulate, as you are guessing by now. If you have the original `torch.nn.Module` for your model, I would encourage to use it instead of the ONNX file.\r\n\r\n2. If you checkpoint your trained ONNX model, all params will stored in the ONNX file, including model, loss and optimizer's params. Checkout https://github.com/microsoft/onnxruntime/blob/master/orttraining/orttraining/python/training/orttrainer.py#L972-L1114 for info on the structure of the state and https://github.com/microsoft/onnxruntime/tree/master/orttraining/orttraining/test/python/checkpoint for examples on how to checkpoint",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/933762006/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/937662732",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9053#issuecomment-937662732",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9053",
        "id": 937662732,
        "node_id": "IC_kwDOCVq1mM4345kM",
        "user": {
            "login": "HemaSowjanyaMamidi",
            "id": 47590467,
            "node_id": "MDQ6VXNlcjQ3NTkwNDY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/47590467?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HemaSowjanyaMamidi",
            "html_url": "https://github.com/HemaSowjanyaMamidi",
            "followers_url": "https://api.github.com/users/HemaSowjanyaMamidi/followers",
            "following_url": "https://api.github.com/users/HemaSowjanyaMamidi/following{/other_user}",
            "gists_url": "https://api.github.com/users/HemaSowjanyaMamidi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HemaSowjanyaMamidi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HemaSowjanyaMamidi/subscriptions",
            "organizations_url": "https://api.github.com/users/HemaSowjanyaMamidi/orgs",
            "repos_url": "https://api.github.com/users/HemaSowjanyaMamidi/repos",
            "events_url": "https://api.github.com/users/HemaSowjanyaMamidi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HemaSowjanyaMamidi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-10-07T10:28:50Z",
        "updated_at": "2021-10-07T10:28:50Z",
        "author_association": "NONE",
        "body": "@thiagocrepaldi Thank you.\r\n\r\nI worked with Pytorch model training earlier and it was successful and was wondering whether I could do the same thing with onnx as well. In the onnx operators we have softmaxcrossentropy loss. For example, if I want my convnet for classifying MNIST dataset, is it feasible to add the loss operator at the end of the model and do some training?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/937662732/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/937890927",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9053#issuecomment-937890927",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9053",
        "id": 937890927,
        "node_id": "IC_kwDOCVq1mM435xRv",
        "user": {
            "login": "thiagocrepaldi",
            "id": 5469809,
            "node_id": "MDQ6VXNlcjU0Njk4MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5469809?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thiagocrepaldi",
            "html_url": "https://github.com/thiagocrepaldi",
            "followers_url": "https://api.github.com/users/thiagocrepaldi/followers",
            "following_url": "https://api.github.com/users/thiagocrepaldi/following{/other_user}",
            "gists_url": "https://api.github.com/users/thiagocrepaldi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thiagocrepaldi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thiagocrepaldi/subscriptions",
            "organizations_url": "https://api.github.com/users/thiagocrepaldi/orgs",
            "repos_url": "https://api.github.com/users/thiagocrepaldi/repos",
            "events_url": "https://api.github.com/users/thiagocrepaldi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thiagocrepaldi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-10-07T15:14:46Z",
        "updated_at": "2021-10-07T15:14:46Z",
        "author_association": "MEMBER",
        "body": "> @thiagocrepaldi Thank you.\r\n> \r\n> I worked with Pytorch model training earlier and it was successful and was wondering whether I could do the same thing with onnx as well. In the onnx operators we have softmaxcrossentropy loss. For example, if I want my convnet for classifying MNIST dataset, is it feasible to add the loss operator at the end of the model and do some training?\r\n\r\nWhat do you mean by \"add the loss operator at the end of the model\"? If you mean add the loss into the `model.forward`, right before returning it, yes that would work provided ONNX does support that op (softmaxcrossentropy would be ok)",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/937890927/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/937894953",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9053#issuecomment-937894953",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9053",
        "id": 937894953,
        "node_id": "IC_kwDOCVq1mM435yQp",
        "user": {
            "login": "thiagocrepaldi",
            "id": 5469809,
            "node_id": "MDQ6VXNlcjU0Njk4MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5469809?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thiagocrepaldi",
            "html_url": "https://github.com/thiagocrepaldi",
            "followers_url": "https://api.github.com/users/thiagocrepaldi/followers",
            "following_url": "https://api.github.com/users/thiagocrepaldi/following{/other_user}",
            "gists_url": "https://api.github.com/users/thiagocrepaldi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thiagocrepaldi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thiagocrepaldi/subscriptions",
            "organizations_url": "https://api.github.com/users/thiagocrepaldi/orgs",
            "repos_url": "https://api.github.com/users/thiagocrepaldi/repos",
            "events_url": "https://api.github.com/users/thiagocrepaldi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thiagocrepaldi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-10-07T15:18:40Z",
        "updated_at": "2021-10-07T15:18:40Z",
        "author_association": "MEMBER",
        "body": "Have you also considered using `ORTModule`? It is the latest ONNX Runtime PyTorch training frontend. It should be a lot easier to use and have similar perf, if not the same.\r\n\r\nhttps://github.com/pytorch/ort",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/937894953/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/938339394",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9053#issuecomment-938339394",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9053",
        "id": 938339394,
        "node_id": "IC_kwDOCVq1mM437exC",
        "user": {
            "login": "HemaSowjanyaMamidi",
            "id": 47590467,
            "node_id": "MDQ6VXNlcjQ3NTkwNDY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/47590467?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HemaSowjanyaMamidi",
            "html_url": "https://github.com/HemaSowjanyaMamidi",
            "followers_url": "https://api.github.com/users/HemaSowjanyaMamidi/followers",
            "following_url": "https://api.github.com/users/HemaSowjanyaMamidi/following{/other_user}",
            "gists_url": "https://api.github.com/users/HemaSowjanyaMamidi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HemaSowjanyaMamidi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HemaSowjanyaMamidi/subscriptions",
            "organizations_url": "https://api.github.com/users/HemaSowjanyaMamidi/orgs",
            "repos_url": "https://api.github.com/users/HemaSowjanyaMamidi/repos",
            "events_url": "https://api.github.com/users/HemaSowjanyaMamidi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HemaSowjanyaMamidi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-10-08T04:44:20Z",
        "updated_at": "2021-10-08T04:44:20Z",
        "author_association": "NONE",
        "body": "> Have you also considered using `ORTModule`? It is the latest ONNX Runtime PyTorch training frontend. It should be a lot easier to use and have similar perf, if not the same.\r\n> \r\n> https://github.com/pytorch/ort\r\n\r\nYes, I used the same. It is very nice to use ORT Module with pytorch for training just with one line of code. 👍 ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/938339394/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/939767707",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9053#issuecomment-939767707",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9053",
        "id": 939767707,
        "node_id": "IC_kwDOCVq1mM44A7eb",
        "user": {
            "login": "HemaSowjanyaMamidi",
            "id": 47590467,
            "node_id": "MDQ6VXNlcjQ3NTkwNDY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/47590467?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HemaSowjanyaMamidi",
            "html_url": "https://github.com/HemaSowjanyaMamidi",
            "followers_url": "https://api.github.com/users/HemaSowjanyaMamidi/followers",
            "following_url": "https://api.github.com/users/HemaSowjanyaMamidi/following{/other_user}",
            "gists_url": "https://api.github.com/users/HemaSowjanyaMamidi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HemaSowjanyaMamidi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HemaSowjanyaMamidi/subscriptions",
            "organizations_url": "https://api.github.com/users/HemaSowjanyaMamidi/orgs",
            "repos_url": "https://api.github.com/users/HemaSowjanyaMamidi/repos",
            "events_url": "https://api.github.com/users/HemaSowjanyaMamidi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HemaSowjanyaMamidi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-10-11T07:35:49Z",
        "updated_at": "2021-10-11T08:04:59Z",
        "author_association": "NONE",
        "body": "> > @thiagocrepaldi Thank you.\r\n> > I worked with Pytorch model training earlier and it was successful and was wondering whether I could do the same thing with onnx as well. In the onnx operators we have softmaxcrossentropy loss. For example, if I want my convnet for classifying MNIST dataset, is it feasible to add the loss operator at the end of the model and do some training?\r\n> \r\n> What do you mean by \"add the loss operator at the end of the model\"? If you mean add the loss into the `model.forward`, right before returning it, yes that would work provided ONNX does support that op (softmaxcrossentropy would be ok)\r\n\r\n@thiagocrepaldi \r\nYeah, I meant to add the softmax crossentorpy as an operator to the model which can be used as loss before training it so that it could be used as loss function. We need to specify predictions and true labels to the softmax crossentropy that's the reason I asked we can add at the end. If I am training it for a batch of images how should i specify the labels and how should they be iterated?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/939767707/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/940089821",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9053#issuecomment-940089821",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9053",
        "id": 940089821,
        "node_id": "IC_kwDOCVq1mM44CKHd",
        "user": {
            "login": "thiagocrepaldi",
            "id": 5469809,
            "node_id": "MDQ6VXNlcjU0Njk4MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5469809?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thiagocrepaldi",
            "html_url": "https://github.com/thiagocrepaldi",
            "followers_url": "https://api.github.com/users/thiagocrepaldi/followers",
            "following_url": "https://api.github.com/users/thiagocrepaldi/following{/other_user}",
            "gists_url": "https://api.github.com/users/thiagocrepaldi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thiagocrepaldi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thiagocrepaldi/subscriptions",
            "organizations_url": "https://api.github.com/users/thiagocrepaldi/orgs",
            "repos_url": "https://api.github.com/users/thiagocrepaldi/repos",
            "events_url": "https://api.github.com/users/thiagocrepaldi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thiagocrepaldi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-10-11T14:36:56Z",
        "updated_at": "2021-10-11T14:36:56Z",
        "author_association": "MEMBER",
        "body": "> > > @thiagocrepaldi Thank you.\r\n> > > I worked with Pytorch model training earlier and it was successful and was wondering whether I could do the same thing with onnx as well. In the onnx operators we have softmaxcrossentropy loss. For example, if I want my convnet for classifying MNIST dataset, is it feasible to add the loss operator at the end of the model and do some training?\r\n> > \r\n> > \r\n> > What do you mean by \"add the loss operator at the end of the model\"? If you mean add the loss into the `model.forward`, right before returning it, yes that would work provided ONNX does support that op (softmaxcrossentropy would be ok)\r\n> \r\n> @thiagocrepaldi Yeah, I meant to add the softmax crossentorpy as an operator to the model which can be used as loss before training it so that it could be used as loss function. We need to specify predictions and true labels to the softmax crossentropy that's the reason I asked we can add at the end. If I am training it for a batch of images how should i specify the labels and how should they be iterated?\r\n\r\nYou can pass the labels on your forward call and process it internally. Something like changing your from `def forward(batch)` to `def forward(batch, labels)`. Then you compute predictions inside your `forward` as usual, but instead of returning it, you use it as input to your loss along with the labels. After all that, you return the loss as opposed to the prediction. In the trin loop, you would call `backward()` in the `forward(batch, labels)` output. Does it make sense?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/940089821/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/941954659",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9053#issuecomment-941954659",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9053",
        "id": 941954659,
        "node_id": "IC_kwDOCVq1mM44JRZj",
        "user": {
            "login": "HemaSowjanyaMamidi",
            "id": 47590467,
            "node_id": "MDQ6VXNlcjQ3NTkwNDY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/47590467?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HemaSowjanyaMamidi",
            "html_url": "https://github.com/HemaSowjanyaMamidi",
            "followers_url": "https://api.github.com/users/HemaSowjanyaMamidi/followers",
            "following_url": "https://api.github.com/users/HemaSowjanyaMamidi/following{/other_user}",
            "gists_url": "https://api.github.com/users/HemaSowjanyaMamidi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HemaSowjanyaMamidi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HemaSowjanyaMamidi/subscriptions",
            "organizations_url": "https://api.github.com/users/HemaSowjanyaMamidi/orgs",
            "repos_url": "https://api.github.com/users/HemaSowjanyaMamidi/repos",
            "events_url": "https://api.github.com/users/HemaSowjanyaMamidi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HemaSowjanyaMamidi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-10-13T06:10:35Z",
        "updated_at": "2021-10-13T06:10:35Z",
        "author_association": "NONE",
        "body": "@thiagocrepaldi,\r\nI understood the flow. You mean I should customize the forward and backward pass in the trainer code?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/941954659/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/942350756",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9053#issuecomment-942350756",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9053",
        "id": 942350756,
        "node_id": "IC_kwDOCVq1mM44KyGk",
        "user": {
            "login": "thiagocrepaldi",
            "id": 5469809,
            "node_id": "MDQ6VXNlcjU0Njk4MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5469809?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thiagocrepaldi",
            "html_url": "https://github.com/thiagocrepaldi",
            "followers_url": "https://api.github.com/users/thiagocrepaldi/followers",
            "following_url": "https://api.github.com/users/thiagocrepaldi/following{/other_user}",
            "gists_url": "https://api.github.com/users/thiagocrepaldi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thiagocrepaldi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thiagocrepaldi/subscriptions",
            "organizations_url": "https://api.github.com/users/thiagocrepaldi/orgs",
            "repos_url": "https://api.github.com/users/thiagocrepaldi/repos",
            "events_url": "https://api.github.com/users/thiagocrepaldi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thiagocrepaldi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-10-13T14:14:11Z",
        "updated_at": "2021-10-13T14:14:11Z",
        "author_association": "MEMBER",
        "body": "> @thiagocrepaldi, I understood the flow. You mean I should customize the forward and backward pass in the trainer code?\r\n\r\nYou just need to modify the forward method of your model, not backward. Note that this change is meant for the user model, no changes to ORTTrainer are needed",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/942350756/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1101915561",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9053#issuecomment-1101915561",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9053",
        "id": 1101915561,
        "node_id": "IC_kwDOCVq1mM5BreWp",
        "user": {
            "login": "stale[bot]",
            "id": 26384082,
            "node_id": "MDM6Qm90MjYzODQwODI=",
            "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stale%5Bbot%5D",
            "html_url": "https://github.com/apps/stale",
            "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "created_at": "2022-04-19T01:54:08Z",
        "updated_at": "2022-04-19T01:54:08Z",
        "author_association": "NONE",
        "body": "This issue has been automatically marked as stale due to inactivity and will be closed in 7 days if no further activity occurs. If further support is needed, please provide an update and/or more details.\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1101915561/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]