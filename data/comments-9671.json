[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/961420345",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9671#issuecomment-961420345",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9671",
        "id": 961420345,
        "node_id": "IC_kwDOCVq1mM45Thw5",
        "user": {
            "login": "TomWildenhain-Microsoft",
            "id": 67606533,
            "node_id": "MDQ6VXNlcjY3NjA2NTMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/67606533?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomWildenhain-Microsoft",
            "html_url": "https://github.com/TomWildenhain-Microsoft",
            "followers_url": "https://api.github.com/users/TomWildenhain-Microsoft/followers",
            "following_url": "https://api.github.com/users/TomWildenhain-Microsoft/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomWildenhain-Microsoft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomWildenhain-Microsoft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomWildenhain-Microsoft/subscriptions",
            "organizations_url": "https://api.github.com/users/TomWildenhain-Microsoft/orgs",
            "repos_url": "https://api.github.com/users/TomWildenhain-Microsoft/repos",
            "events_url": "https://api.github.com/users/TomWildenhain-Microsoft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomWildenhain-Microsoft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-11-04T21:04:01Z",
        "updated_at": "2021-11-04T21:04:01Z",
        "author_association": "MEMBER",
        "body": "The optimizer is moving the transpose here:\r\n\r\n![image](https://user-images.githubusercontent.com/67606533/140419582-990671e7-f662-4430-8071-9e55cdf9aba2.png)\r\n\r\nIt pushes it below the Squeeze (the Identity nodes don't exist at that point). I don't know why it fails to find an implementation. @skottmckay ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/961420345/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/961591066",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9671#issuecomment-961591066",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9671",
        "id": 961591066,
        "node_id": "IC_kwDOCVq1mM45ULca",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-11-05T03:02:00Z",
        "updated_at": "2021-11-05T07:57:06Z",
        "author_association": "MEMBER",
        "body": "Looks like running the optimizer once is not sufficient. \r\n\r\n```cpp\r\n  // One run should be sufficient. Multiple runs should be ok but are prohibited to prevent any possibility of an\r\n  // infinite loop.\r\n  bool ShouldOnlyApplyOnce() const override { return true; }\r\n```\r\n\r\nIf I change this line in onnxruntime::TransposeOptimizer to return `false` it works. The reason is that it's the second run that moves the Transpose involving the Squeeze, but this ends up happening after partitioning. That results in a new Transpose node being added with no execution provider being set as there's no mechanism to copy the assigned EP from the existing node. Will look into why all optimizations aren't completed in the first pass . ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/961591066/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/961702447",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9671#issuecomment-961702447",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9671",
        "id": 961702447,
        "node_id": "IC_kwDOCVq1mM45Umov",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-11-05T08:16:18Z",
        "updated_at": "2021-11-05T08:23:53Z",
        "author_association": "MEMBER",
        "body": "The current order of optimizers has the Transpose optimizer running after IdentityElimination. That results in the first pass not changing the Transpose -> Squeeze at the end of the graph due to the Squeeze output not having a shape (benefit of -5  for unknown input shape is cancelled out by cost of 5 for unknown output shape).\r\n\r\nFollowing that IdentityElimination runs, which removes the last 2 Identify nodes and makes the Squeeze output 'Y', which has a defined rank as it's a graph output. \r\n\r\nThat change means that on the next run of TransposeOptimizer, which happens after partitioning, the Transpose -> Squeeze will be updated due to the cost metric (benefit of -5 is not cancelled due to output rank of 3). \r\n\r\nDoesn't make sense to me that the simplest RewriteRule based optimizations are last in Level 1 so I'll move those to run first on each iteration. Technically that will resolve the issue, however it seems safer to also set ShouldOnlyApplyOnce to `false` to avoid issues due to the ordering of level 1 optimizations in the future. I don't think an infinite loop is possible as the node iteration in `OptimizeImpl` is based on the set of nodes when the processing starts (not updated with newly inserted nodes), and the graph transformer manager has a max number of iterations.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/961702447/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]